var _RESOURCES = [
      {
        "title":"Support",
        "titleFriendly":"",
        "summary":"If you&#39;ve encountered bugs or have feedback about the L Developer Preview, create an issue on our issue tracker. For more support, join the L Developer Preview Google+ community to discuss your development experiences. June 25, 2014 - Initial Release鈥�",
        "url":"preview/support.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"UI Widgets",
        "titleFriendly":"",
        "summary":"The support library in the Android L Developer Preview contains two new widgets, RecyclerView and CardView . Use these widgets to show complex lists and cards in your app. These widgets have material design style by default. RecyclerView is a more advanced鈥�",
        "url":"preview/material/ui-widgets.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"preview/material/images/RecyclerView.png",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Animations",
        "titleFriendly":"",
        "summary":"Animations in material design give users feedback on their actions and provide visual continuity as users interact with your app. The material theme provides some default animations for buttons and activity transitions, and the Android L Developer Preview鈥�",
        "url":"preview/material/animations.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"preview/material/images/SceneTransition.png",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Get Started",
        "titleFriendly":"",
        "summary":"To create apps with material design: To update an existing app for the Android L Developer Preview, design new layouts following material design guidelines and consider how you can improve the user experience for your app by incorporating depth, touch鈥�",
        "url":"preview/material/get-started.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Compatibility",
        "titleFriendly":"",
        "summary":"The new material design features (like the material theme and activity transitions) are only available in the Android L Developer Preview. However, you can design your apps to make use of these features when running on devices with the Android L Developer鈥�",
        "url":"preview/material/compatibility.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Views and Shadows",
        "titleFriendly":"",
        "summary":"The elevation of a view determines the size of its shadow: views with higher Z values cast bigger shadows. Views only cast shadows on the Z=0 plane under an orthographic projection (the views do not scale for different values of Z). Elevation is also 鈥�",
        "url":"preview/material/views-shadows.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Material Theme",
        "titleFriendly":"",
        "summary":"The new material theme provides: You can customize the look of the material theme according to your brand identity with a color palette you control. You can tint the action bar and the status bar using theme attributes, as shown in Figure 1. The system鈥�",
        "url":"preview/material/theme.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"preview/material/images/ThemeColors.png",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Setting Up the Preview SDK",
        "titleFriendly":"",
        "summary":"I have read and agree with the above terms and conditions The Preview SDK is available from the Android SDK Manager. This document assumes that you are familiar with Android app development, such as using the Android SDK Manager and creating projects.鈥�",
        "url":"preview/setup-sdk.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Hardware Features on TV",
        "titleFriendly":"",
        "summary":"TVs do not have some of the hardware features found on other Android devices. Touch screens, cameras, and GPS receivers are some of the most commonly used hardware features which are typically not available on a TV. When you build an app for TV, you must鈥�",
        "url":"preview/tv/start/hardware-features.html",
        "group":"",
        "keywords": ["unsupported"],
        "tags": ["unsupported"],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Get Started with TV Apps",
        "titleFriendly":"",
        "summary":"This guide describes how to prepare your development environment and projects for building TV apps, including updating your existing app to run on TV devices. Before you begin setting up to build apps for TV, you must: TV apps use the same structure as鈥�",
        "url":"preview/tv/start/index.html",
        "group":"",
        "keywords": ["leanback","recyclerview","launcher"],
        "tags": ["leanback","recyclerview","launcher"],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"BrowseFragment",
        "titleFriendly":"",
        "summary":"The Leanback support library provides several APIs for displaying and browsing media catalogs on the TV devices. This guide discusses how to use the classes provided by this library to implement a user interface for browsing music or videos from your 鈥�",
        "url":"preview/tv/ui/browse.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Navigation for TV",
        "titleFriendly":"",
        "summary":"TV devices provide a limited set of navigation controls for apps. Creating an effective navigation scheme for your TV app depends on understanding these limited controls and the limits of users&#39; perception while operating your app. As you build your鈥�",
        "url":"preview/tv/ui/navigation.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"DetailFragment",
        "titleFriendly":"",
        "summary":"The media browsing interface classes provided by the Leanback support library include classes for displaying additional information about a media item, such as a description or reviews, and for taking action on that item, such as purchasing it or playing鈥�",
        "url":"preview/tv/ui/details.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Layouts for TV",
        "titleFriendly":"",
        "summary":"A TV screen is typically viewed from about 10 feet away, and while it is much larger than most other Android device displays, this type of screen does not provide the same level of precise detail and color as a smaller device. These factors require that鈥�",
        "url":"preview/tv/ui/layouts.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"User Interfaces for TV",
        "titleFriendly":"",
        "summary":"Building an effective and engaging user interface for TV devices requires a firm understanding of what works well in the context of a living room. Imagine a large screen that can be seen by many people at the same time, controlled with a few buttons by鈥�",
        "url":"preview/tv/ui/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Adding Search to TV Apps",
        "titleFriendly":"",
        "summary":"Users frequently have specific content in mind when using a media app. A search interface can help your users get to the content they want faster than browsing. The Leanback library provides a set of classes to enable a standard search interface within鈥�",
        "url":"preview/tv/ui/in-app-search.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Making Recommendations",
        "titleFriendly":"",
        "summary":"Content recommendations appear as the first row of the TV launch screen after the first use of the device. This row is intended to help users quickly find content they enjoy. Contributing recommendations from your apps content catalog can help bring users鈥�",
        "url":"preview/tv/ui/recommendations.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"preview/tv/images/home-recommendations.png",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Important Safety Instructions for ADT-1",
        "titleFriendly":"",
        "summary":"Safety information for the ADT-1 device. WARNING: Read all safety information below before using this device to avoid injury. Do not install near heat sources, such as heaters and other devices. Use in a well-ventilated area and plug power adapter into鈥�",
        "url":"preview/tv/adt-1/safety.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Regulatory Disclosures for ADT-1",
        "titleFriendly":"",
        "summary":"Disclosures for the ADT-1 device. Model: W2 FCC ID: A4R-W2 IC: 10395A-W2 U.S. Federal Communications Commission Notices To satisfy FCC and IC exposure requirements, a separation distance of at least 20 cm should be maintained between the antenna of this鈥�",
        "url":"preview/tv/adt-1/regulatory.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"ADT-1 Developer Kit",
        "titleFriendly":"",
        "summary":"The ADT-1 Developer Kit is a streaming media player and game controller designed for running and testing apps built for Android TV. Supplies of ADT-1 are limited and it is intended for developers who are interested in building new apps or extending their鈥�",
        "url":"preview/tv/adt-1/index.html",
        "group":"",
        "keywords": ["emote","e-mote","adt"],
        "tags": ["emote","e-mote","adt"],
        "image":"preview/tv/images/android-tv-remote.png",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"The television screen presents a number of considerations that may be new to mobile-game developers. These areas include its large size, its control scheme, and the fact that all players are viewing it simultaneously. The two main things to keep in mind鈥�",
        "url":"preview/tv/games/index.html",
        "group":"",
        "keywords": ["controller"],
        "tags": ["controller"],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Android TV Apps",
        "titleFriendly":"",
        "summary":"Android offers a rich user experience that&#39;s optimized for apps running on large screen devices, such as high-definition televisions. Apps on TV offer new opportunities to delight your users from the comfort of their couch. This guide helps you build鈥�",
        "url":"preview/tv/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Creative Vision for TV",
        "titleFriendly":"",
        "summary":"Users bring a specific set of expectations when watching TV, versus interacting with a phone or tablet. These guidelines have been developed by the Android User Experience Team to guide creation of the Android TV platform and the apps that run on it. 鈥�",
        "url":"preview/tv/design/principles.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Patterns for TV",
        "titleFriendly":"",
        "summary":"As a developer of apps for TV, you should follow certain patterns to enable users to quickly understand and operate your app. This section describes recommended design patterns for TV apps. Users typically navigate TV devices using a directional pad (鈥�",
        "url":"preview/tv/design/patterns.html",
        "group":"",
        "keywords": ["design"],
        "tags": ["design"],
        "image":"preview/tv/design/images/focus.png",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Style for TV",
        "titleFriendly":"",
        "summary":"Follow these style guidelines to create beautiful, functional apps for TV. The difference between a TV experience that feels right and one that does not greatly depends on the number, spacing, and size of on-screen elements. Although TV sizes and resolutions鈥�",
        "url":"preview/tv/design/style.html",
        "group":"",
        "keywords": ["design"],
        "tags": ["design"],
        "image":"preview/tv/design/images/overscan.png",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Design for TV",
        "titleFriendly":"",
        "summary":"The Android TV platform user interface provides the launch pad for your app&#39;s big screen experience. It&#39;s important to understand how your app is presented in the main user interface and how your app can help users get to the content they want鈥�",
        "url":"preview/tv/design/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"preview/tv/design/images/atv-home.jpg",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Reference",
        "titleFriendly":"",
        "summary":"The reference documentation and API difference report are available in this downloadable package.鈥�",
        "url":"preview/reference.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Samples",
        "titleFriendly":"",
        "summary":"The following code samples are provided for the L Developer Preview. You can download them in the Android SDK Manager under the SDK Samples component for the L Developer Preview. This sample demonstrates how to create a managed profile. You can also: 鈥�",
        "url":"preview/samples.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"preview/images/BasicManagedProfile.png",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Design for Notifications",
        "titleFriendly":"",
        "summary":"The notification system allows users to keep informed about relevant and timely events in your app, such as new chat messages from a friend or a calendar event. Think of notifications as a news channel that alerts the user to important events as they 鈥�",
        "url":"preview/notifications.html",
        "group":"",
        "keywords": ["notifications","design","l"],
        "tags": ["notifications","design","l"],
        "image":"preview/images/notifications/Basic.png",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"License Agreement",
        "titleFriendly":"",
        "summary":"To get started with the Android SDK Preview, you must agree to the following terms and conditions. As described below, please note that this is a preview version of the Android SDK, subject to change, that you use at your own risk. The Android SDK Preview鈥�",
        "url":"preview/license.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"UI Overview",
        "titleFriendly":"",
        "summary":"A new form factor deserves a new UI model. At a high level, the Android Wear UI consists of two main spaces centered around the core functions of Suggest and Demand . Your application will have an important role to play in both of these spaces. The context鈥�",
        "url":"wear/design/user-interface.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"wear/images/screens/bezel.png",
        "lang":"en",
        "type":""
      }, 
      {
        "title":"Design Principles of Android Wear",
        "titleFriendly":"",
        "summary":"Android wearables provide just the right information at just the right time, allowing you to be connected to the virtual world and present in the real world. Here you鈥檒l find some guidelines for designing great user experiences on the Android Wear platform鈥�",
        "url":"wear/design/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"wear/images/05_images.png",
        "lang":"en",
        "type":""
      }
];

var ABOUT_RESOURCES = [
      {
        "title":"Developer Support",
        "titleFriendly":"",
        "summary":"Resources available to help you report and resolve issues while you are developing apps for Android.",
        "url":"support.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/android-support-card.png",
        "lang":"en",
        "type":"about"
      }, 
      {
        "title":"Android TV",
        "titleFriendly":"",
        "summary":"Recommend great content to users right on the home screen. Enable users to find movies through voice search. Engage users with fluid, immersive games. Simple. Cinematic. Beautiful. Made for TV Get Found Recommend Begin building TV apps right away using鈥�",
        "url":"tv/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"wear/images/carrot.png",
        "lang":"en",
        "type":"about"
      }, 
      {
        "title":"Legal Notice",
        "titleFriendly":"",
        "summary":"Android is an open platform that&#39;s freely available to you as an app developer. You can immediately download the Android SDK, develop apps, and distribute them to the world without any registration or fees. Android is developed by Google Inc. and 鈥�",
        "url":"legal.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"about"
      }, 
      {
        "title":"Android Wear",
        "titleFriendly":"",
        "summary":"Small, powerful devices, worn on the body. Useful information when you need it most. Intelligent answers to spoken questions. Tools to help reach fitness goals. Your key to a multiscreen world. Before you start building, check out the Android Wear Design鈥�",
        "url":"wear/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"wear/images/notifications.png",
        "lang":"en",
        "type":"about"
      }, 
      {
        "title":"Honeycomb MR1",
        "titleFriendly":"",
        "summary":"Welcome to Android 3.1! Android 3.1 is an incremental platform release that refines many of the features introduced in Android 3.0. It builds on the same tablet-optimized UI and features offered in Android 3.0 and adds several new capabilities for users鈥�",
        "url":"about/versions/android-3.1-highlights.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"sdk/images/3.1/home.png",
        "lang":"en",
        "type":"about"
      }, 
      {
        "title":"Android KitKat",
        "titleFriendly":"",
        "summary":"Welcome to Android 4.4 KitKat! Android KitKat brings all of Android&#39;s most innovative, most beautiful, and most useful features to more devices everywhere. This document provides a glimpse of what&#39;s new for developers. Find out more about KitKat鈥�",
        "url":"about/versions/kitkat.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/kk-devices.png",
        "lang":"en",
        "type":"about"
      }, 
      {
        "title":"Ice Cream Sandwich",
        "titleFriendly":"",
        "summary":"Welcome to Android 4.0! Android 4.0 delivers a refined, unified UI for phones and tablets and introduces innovative features for users and developers. This document provides a glimpse of the many new features and technologies that make Android 4.0 simple鈥�",
        "url":"about/versions/android-4.0-highlights.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"sdk/images/4.0/home.png",
        "lang":"en",
        "type":"about"
      }, 
      {
        "title":"Gingerbread",
        "titleFriendly":"",
        "summary":"The Android 2.3 platform introduces many new and exciting features for users and developers. This document provides a glimpse at some of the new features and technologies in Android 2.3. For detailed information about the new developer APIs, see the Android鈥�",
        "url":"about/versions/android-2.3-highlights.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"sdk/images/2.3/home-menu.png",
        "lang":"en",
        "type":"about"
      }, 
      {
        "title":"Honeycomb",
        "titleFriendly":"",
        "summary":"Welcome to Android 3.0! The Android 3.0 platform introduces many new and exciting features for users and developers. This document provides a glimpse of some of the new features and technologies, as delivered in Android 3.0. For a more detailed look at鈥�",
        "url":"about/versions/android-3.0-highlights.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"sdk/images/3.0/home_hero1.png",
        "lang":"en",
        "type":"about"
      }, 
      {
        "title":"Jelly Bean",
        "titleFriendly":"",
        "summary":"Welcome to Android 4.3, a sweeter version of Jelly Bean! Android 4.3 includes performance optimizations and great new features for users and developers. This document provides a glimpse of what&#39;s new for developers. See the Android 4.3 APIs document鈥�",
        "url":"about/versions/jelly-bean.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/jb-android-43.jpg",
        "lang":"en",
        "type":"about"
      }, 
      {
        "title":"Dashboards",
        "titleFriendly":"",
        "summary":"page.metaDescription=Charts that give you an overview of device characteristics and platform versions that are active in the Android ecosystem.",
        "url":"about/dashboards/index.html",
        "group":"",
        "keywords": ["android","dashboard","platforms","versions"],
        "tags": ["ecosystem","versions","whatsnew"],
        "image":"//chart.googleapis.com/chart?chs=400x250&cht=p&chd=t%3A0.1%2C83.6%2C16.3&chf=bg%2Cs%2C00000000&chl=GL%201.1%20only%7CGL%202.0%7CGL%203.0&chco=c4df9b%2C6fad0c",
        "lang":"en",
        "type":"about"
      }, 
      {
        "title":"Android Auto",
        "titleFriendly":"",
        "summary":"Display and control your Android app in vehicles. Integrate your content with easy-to-use APIs and let Android Auto take care of the rest. When users connect their Android phones to compatible vehicles, Android Auto shows a standard interface that lets鈥�",
        "url":"auto/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"wear/images/carrot.png",
        "lang":"en",
        "type":"about"
      }
];

var DESIGN_RESOURCES = [
      {
        "title":"Material Design",
        "titleFriendly":"",
        "summary":"Learn how to apply material design to your apps.",
        "url":"preview/material/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/material.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Videos",
        "titleFriendly":"",
        "summary":"The Android Design Team presents design-oriented sessions at Google I&#47;O every year. Visit these pages to view the videos and presentations from the conferences. Want to enchant people, simplify their lives, and make them feel amazing with your app鈥�",
        "url":"design/videos/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/home/io-logo-2013-alt.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Writing Style",
        "titleFriendly":"",
        "summary":"When writing text that appears in your app, keep it concise, simple, and friendly. Avoid wordy, stilted text Don&#39;t provide unnecessary information Focus on the user&#39;s concern, not technical details Put top news first Put the user&#39;s goal first鈥�",
        "url":"design/style/writing.html",
        "group":"",
        "keywords": ["dialog","toast","notification"],
        "tags": ["dialog","toast","notification"],
        "image":"",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Devices and Displays",
        "titleFriendly":"",
        "summary":"Take advantage of Android's flexible layout system and create apps that gracefully scale from phones to tablets and beyond.",
        "url":"design/style/devices-displays.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/devices_displays_main.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Touch Feedback",
        "titleFriendly":"",
        "summary":"Use illumination and dimming to respond to touches, reinforce the resulting behaviors of gestures, and indicate what actions are enabled and disabled. Be responsive to touches in a gentle way . Whenever a user touches an actionable area in your app, let鈥�",
        "url":"design/style/touch-feedback.html",
        "group":"",
        "keywords": ["input","button"],
        "tags": ["input","button"],
        "image":"design/media/touch_feedback_states.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Iconography",
        "titleFriendly":"Guidelines for creating your app's icons",
        "summary":"An icon is a graphic that takes up a small portion of screen real estate and provides a quick, intuitive representation of an action, a status, or an app. When you design icons for your app, it&#39;s important to keep in mind that your app may be installed鈥�",
        "url":"design/style/iconography.html",
        "group":"",
        "keywords": ["icons"],
        "tags": ["icons","googleplay","listing","branding"],
        "image":"design/media/iconography_overview.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Metrics and Grids",
        "titleFriendly":"",
        "summary":"Optimize your app's UI by designing layouts based on density-independent grids.",
        "url":"design/style/metrics-grids.html",
        "group":"",
        "keywords": ["layout","screens"],
        "tags": ["multiplescreens","layout","tablets"],
        "image":"design/media/metrics_closeup.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Typography",
        "titleFriendly":"",
        "summary":"How to use typography in your Android apps.",
        "url":"design/style/typography.html",
        "group":"",
        "keywords": ["textview","font"],
        "tags": ["textview","font"],
        "image":"design/media/typography_main.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Your Branding",
        "titleFriendly":"",
        "summary":"Following Android design patterns doesn&#39;t mean that your app has to look the same as everyone else&#39;s. In Android, your app can shine as an extension of your brand. Use your brand color for accent by overriding the Android framework&#39;s default鈥�",
        "url":"design/style/branding.html",
        "group":"",
        "keywords": ["branding","logo"],
        "tags": ["branding","logo"],
        "image":"design/media/branding_wallet.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Style",
        "titleFriendly":"",
        "summary":"Build visually compelling apps that look great on any device.鈥�",
        "url":"design/style/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/design_elements_landing.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Color",
        "titleFriendly":"",
        "summary":"Use color primarily for emphasis. Choose colors that fit with your brand and provide good contrast between visual components. Note that red and green may be indistinguishable to color-blind users. Blue is the standard accent color in Android&#39;s color鈥�",
        "url":"design/style/color.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/color_spectrum.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Themes",
        "titleFriendly":"",
        "summary":"Themes are Android&#39;s mechanism for applying a consistent style to an app or activity. The style specifies the visual properties of the elements that make up your user interface, such as color, height, padding and font size. To promote greater cohesion鈥�",
        "url":"design/style/themes.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/themes_holo_light.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Tabs",
        "titleFriendly":"",
        "summary":"Tabs in the action bar make it easy to explore and switch between different views or functional aspects of your app, or to browse categorized data sets.鈥�",
        "url":"design/building-blocks/tabs.html",
        "group":"",
        "keywords": ["tabs","actionbar","navigation","viewpager"],
        "tags": ["tabs","actionbar","navigation","viewpager"],
        "image":"design/media/tabs_overview.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Grid Lists",
        "titleFriendly":"",
        "summary":"Grid lists are an alternative to standard list views. They are best suited for showing data sets that represent themselves through images. In contrast to simple lists, grid lists may scroll either vertically or horizontally.鈥�",
        "url":"design/building-blocks/grid-lists.html",
        "group":"",
        "keywords": ["gridview","layout","listview"],
        "tags": ["gridview","layout","listview"],
        "image":"design/media/gridview_overview.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Lists",
        "titleFriendly":"",
        "summary":"Lists present multiple line items in a vertical arrangement. They can be used for data selection as well as drilldown navigation.鈥�",
        "url":"design/building-blocks/lists.html",
        "group":"",
        "keywords": ["listview","layout"],
        "tags": ["listview","layout"],
        "image":"design/media/lists_main.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Seek Bars and Sliders",
        "titleFriendly":"",
        "summary":"Interactive sliders make it possible to select a value from a continuous or discrete range of values by moving the slider thumb. The smallest value is to the left, the largest to the right. The interactive nature of the slider makes it a great choice 鈥�",
        "url":"design/building-blocks/seek-bars.html",
        "group":"",
        "keywords": ["seekbar","progressbar"],
        "tags": ["seekbar","progressbar"],
        "image":"design/media/seekbar_example.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Pickers",
        "titleFriendly":"",
        "summary":"Pickers provide a simple way to select a single value from a set. In addition to touching the up&#47;down arrow buttons, it&#39;s possible to set the desired value from the keyboard or via a swipe gesture.鈥�",
        "url":"design/building-blocks/pickers.html",
        "group":"",
        "keywords": ["datepicker","timepicker"],
        "tags": ["datepicker","timepicker"],
        "image":"design/media/picker_space.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Switches",
        "titleFriendly":"",
        "summary":"Checkboxes allow the user to select multiple options from a set. Avoid using a single checkbox to turn an option off or on. Instead, use an on&#47;off switch.鈥�",
        "url":"design/building-blocks/switches.html",
        "group":"",
        "keywords": ["switch","checkbox","radiobutton","button"],
        "tags": ["switch","checkbox","radiobutton","button"],
        "image":"design/media/switches_checkboxes.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Dialogs",
        "titleFriendly":"",
        "summary":"Dialogs prompt the user for decisions or additional information required by the app to continue a task. Such requests can range from simple Cancel&#47;OK decisions to more complex layouts asking the user to adjust settings or enter text.鈥�",
        "url":"design/building-blocks/dialogs.html",
        "group":"",
        "keywords": ["dialog","alert","popup","toast"],
        "tags": ["dialog","alert","popup","toast"],
        "image":"design/media/dialogs_main.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Progress &amp; Activity",
        "titleFriendly":"",
        "summary":"Progress bars and activity indicators signal to users that something is happening that will take a moment. Progress bars are for situations where the percentage completed can be determined. They give users a quick sense of how much longer an operation鈥�",
        "url":"design/building-blocks/progress.html",
        "group":"",
        "keywords": ["progressbar","download","network"],
        "tags": ["progressbar","download","network"],
        "image":"design/media/progress_download.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Building Blocks",
        "titleFriendly":"",
        "summary":"Your inventory of ready-to-use elements for creating outstanding apps.鈥�",
        "url":"design/building-blocks/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/building_blocks_landing.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Buttons",
        "titleFriendly":"",
        "summary":"A button consists of text and&#47;or an image that clearly communicates what action will occur when the user touches it. A button can have an image, text, or both.鈥�",
        "url":"design/building-blocks/buttons.html",
        "group":"",
        "keywords": ["button","input"],
        "tags": ["button","input"],
        "image":"design/media/icon_magnifying_glass.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Spinners",
        "titleFriendly":"",
        "summary":"Spinners provide a quick way to select one value from a set. In the default state, a spinner shows its currently selected value. Touching the spinner displays a dropdown menu with all other available values, from which the user can select a new one.鈥�",
        "url":"design/building-blocks/spinners.html",
        "group":"",
        "keywords": ["spinner","dropdown"],
        "tags": ["spinner","dropdown"],
        "image":"design/media/spinners_form.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Scrolling",
        "titleFriendly":"",
        "summary":"Scrolling allows the user to navigate to content in the overflow using a swipe gesture. The scrolling speed is proportional to the speed of the gesture. Appears during scrolling to indicate what portion of the content is currently in view. In addition鈥�",
        "url":"design/building-blocks/scrolling.html",
        "group":"",
        "keywords": ["scrollview","listview"],
        "tags": ["scrollview","listview"],
        "image":"",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Text Fields",
        "titleFriendly":"",
        "summary":"Text fields allow the user to type text into your app. They can be either single line or multi-line. Touching a text field places the cursor and automatically displays the keyboard. In addition to typing, text fields allow for a variety of other activities鈥�",
        "url":"design/building-blocks/text-fields.html",
        "group":"",
        "keywords": ["text","edittext","input"],
        "tags": ["text","edittext","input"],
        "image":"design/media/text_input_singlevsmultiline.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Android TV",
        "titleFriendly":"",
        "summary":"Android TV is coming soon and lets you engage your users in a new, shared environment. Users bring a specific set of expectations to the experience of watching TV, versus interacting with a phone or tablet. So find out how to get your app ready for its鈥�",
        "url":"design/tv/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/android-tv.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Android Design Principles",
        "titleFriendly":"",
        "summary":"These design principles were developed by and for the Android User Experience Team to keep users&#39; best interests in mind. For Android developers and designers, they continue to underlie the more detailed design guidelines for different types of devices鈥�",
        "url":"design/get-started/principles.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/principles_delight.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Creative Vision",
        "titleFriendly":"",
        "summary":"Starting with Ice Cream Sandwich, we focused the design of Android around these three overarching goals, which apply to our core apps as well as the system at large. As you work with Android, consider these goals.鈥�",
        "url":"design/get-started/creative-vision.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/creative_vision_main.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Design Principles for Android Wear",
        "titleFriendly":"",
        "summary":"These design principles provide some simple heuristics about how you should plan and assess your Android Wear app design. A watch is a perfect form factor for a device that you can use while doing something else, such as cooking, eating, walking, running鈥�",
        "url":"design/wear/principles.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/wear/five_seconds.gif",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"App Structure for Android Wear",
        "titleFriendly":"",
        "summary":"Users are used to tapping icons to launch apps. Android Wear is different. A typical Wear app adds a card to the stream at a contextually relevant moment. It might have a button that opens a full screen view for a fast micro interaction, like below, but鈥�",
        "url":"design/wear/structure.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/wear/appstructuresample.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"UI Patterns for Android Wear",
        "titleFriendly":"",
        "summary":"Android Wear is used for micro-interactions, and so adhering to consistent design patterns that users are already accustomed to is paramount. Cards in the stream can take slightly different forms: App icons appear in a fixed position overhanging the edge鈥�",
        "url":"design/wear/patterns.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/wear/Bluebird.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Style for Android Wear",
        "titleFriendly":"",
        "summary":"Here are a number of design considerations to bear in mind that are particular to Android Wear. Be mindful of different device sizes and shapes. Wearable devices are a form of fashion and expression for their owners, and so Android Wear supports a variety鈥�",
        "url":"design/wear/style.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/wear/circle_message2.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Creative Vision for Android Wear",
        "titleFriendly":"",
        "summary":"Android Wear devices provide just the right information at just the right time, allowing users to be more connected to both the virtual world and the real world. Great Android Wear experiences are: Most people are used to launching apps by clicking an鈥�",
        "url":"design/wear/creative-vision.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/wear/vision_traffic.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Android Wear",
        "titleFriendly":"",
        "summary":"Designing apps for wearable devices powered by Android Wear is substantially different than designing for phones or tablets: different strengths and weaknesses, different use cases, different ergonomics. To get started, you should understand the overall鈥�",
        "url":"design/wear/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"wear/images/screens/stream.gif",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Phones &amp; Tablets",
        "titleFriendly":"",
        "summary":"Android&#39;s system UI provides the framework on top of which you build your app, whether you&#39;re designing for phones, tablets, watches, or other form factors. Aspects of UI that are especially important for phones and tablets include the Home screen鈥�",
        "url":"design/handhelds/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/ui_overview_home_screen.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Devices",
        "titleFriendly":"",
        "summary":"The device-centric UI principles, overviews, and detailed guidelines described here build on the core Android Design Principles to provide more specific design guidance for different form factors.鈥�",
        "url":"design/devices.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/device_family.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Downloads",
        "titleFriendly":"",
        "summary":"You may use these materials without restriction to facilitate your app design and implementation. Drag and drop your way to beautifully designed Android apps. The stencils feature the rich typography, colors, interactive controls, and icons found throughout鈥�",
        "url":"design/downloads/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/downloads_stencils.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Design",
        "titleFriendly":"",
        "summary":"Welcome to Android Design, your place for learning how to design exceptional Android apps.鈥�",
        "url":"design/index.html",
        "group":"",
        "keywords": [],
        "tags": ["beautifulapps","design","ux","patterns","holo","appquality","landing"],
        "image":"design/media/index_landing_page.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Android Auto",
        "titleFriendly":"",
        "summary":"Android Auto is coming soon and brings apps to the car, integrating with the vehicle&#39;s input controls and display. The future design guidelines provide templates that define the user interaction model for all apps and let you hook into a standard 鈥�",
        "url":"design/auto/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"auto/images/assets/00_frame.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Confirming &amp; Acknowledging",
        "titleFriendly":"",
        "summary":"In some situations, when a user invokes an action in your app, it&#39;s a good idea to confirm or acknowledge that action through text. Confirming is asking the user to verify that they truly want to proceed with an action they just invoked. In some cases鈥�",
        "url":"design/patterns/confirming-acknowledging.html",
        "group":"",
        "keywords": ["dialog","toast","notification"],
        "tags": ["dialog","toast","notification"],
        "image":"design/media/confirm_ack_confirming.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Multi-pane Layouts",
        "titleFriendly":"",
        "summary":"Design guide with examples of how to flatten navigation and provide improved layout across the range of Android devices.",
        "url":"design/patterns/multi-pane-layouts.html",
        "group":"",
        "keywords": ["tablet","navigation","layout","fragment"],
        "tags": ["tablet","navigation","layout","fragment"],
        "image":"design/media/multipane_views.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Navigation Drawer",
        "titleFriendly":"",
        "summary":"Creating a Navigation Drawer The navigation drawer is a panel that transitions in from the left edge of the screen and displays the app鈥檚 main navigation options. The user can bring the navigation drawer onto the screen by swiping from the left edge of鈥�",
        "url":"design/patterns/navigation-drawer.html",
        "group":"",
        "keywords": ["drawerlayout","slidingpanelayout"],
        "tags": ["drawerlayout","slidingpanelayout"],
        "image":"design/media/navigation_drawer_overview.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Navigation with Back and Up",
        "titleFriendly":"",
        "summary":"Consistent navigation is an essential component of the overall user experience. Few things frustrate users more than basic navigation that behaves in inconsistent and unexpected ways. Android 3.0 introduced significant changes to the global navigation鈥�",
        "url":"design/patterns/navigation.html",
        "group":"",
        "keywords": ["navigation","activity","task","up navigation","back navigation"],
        "tags": ["navigation","activity","task","upnavigation","backnavigation"],
        "image":"design/media/navigation_between_siblings_gmail.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Backwards Compatibility",
        "titleFriendly":"",
        "summary":"Notes on how Android 4.x adapts UI designed for older hardware and OS versions.",
        "url":"design/patterns/compatibility.html",
        "group":"",
        "keywords": ["support"],
        "tags": ["support"],
        "image":"design/media/compatibility_virtual_nav.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Help",
        "titleFriendly":"",
        "summary":"This page covers design patterns for making help accessible in your app and tips for creating help content for users who are eager for assistance.鈥�",
        "url":"design/patterns/help.html",
        "group":"",
        "keywords": ["settings","preferences"],
        "tags": ["settings","preferences"],
        "image":"design/media/help_cling.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Settings",
        "titleFriendly":"",
        "summary":"Settings is a place in your app where users indicate their preferences for how your app should behave. This benefits users because:鈥�",
        "url":"design/patterns/settings.html",
        "group":"",
        "keywords": ["preferences","sharedpreferences"],
        "tags": ["preferences","sharedpreferences"],
        "image":"design/media/settings_overflow.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Accessibility",
        "titleFriendly":"",
        "summary":"Design an app that's universally accessible to people with visual impairment, color deficiency, hearing loss, and limited dexterity.",
        "url":"design/patterns/accessibility.html",
        "group":"",
        "keywords": ["accessibility","navigation","input"],
        "tags": ["accessibility","navigation","input"],
        "image":"design/media/accessibility_contentdesc.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Action Bar",
        "titleFriendly":"",
        "summary":"The Action bar is an essential design element for all apps. Learn about what the action bar can do and how to use it in your apps.",
        "url":"design/patterns/actionbar.html",
        "group":"",
        "keywords": ["actionbar","navigation"],
        "tags": ["actionbar","navigation"],
        "image":"design/media/action_bar_pattern_overview.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"App Structure",
        "titleFriendly":"",
        "summary":"Apps come in many varieties that address very different needs. For example: Your app&#39;s structure depends largely on the content and tasks you want to surface for your users. A typical Android app consists of top level and detail&#47;edit views. If鈥�",
        "url":"design/patterns/app-structure.html",
        "group":"",
        "keywords": ["navigation","layout","tablet"],
        "tags": ["navigation","layout","tablet"],
        "image":"design/media/app_structure_overview.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Swipe Views",
        "titleFriendly":"",
        "summary":"Efficient navigation is one of the cornerstones of a well-designed app. While apps are generally built in a hierarchical fashion, there are instances where horizontal navigation can flatten vertical hierarchies and make access to related data items faster鈥�",
        "url":"design/patterns/swipe-views.html",
        "group":"",
        "keywords": ["viewpager","navigation","tabs"],
        "tags": ["viewpager","navigation","tabs"],
        "image":"design/media/swipe_views.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Gestures",
        "titleFriendly":"",
        "summary":"Gestures allow users to interact with your app by manipulating the screen objects you provide. The following table shows the core gesture set that is supported in Android. Triggers the default functionality for a given item. Press, lift Enters data selection鈥�",
        "url":"design/patterns/gestures.html",
        "group":"",
        "keywords": ["gesture","input","touch"],
        "tags": ["gesture","input","touch"],
        "image":"design/media/gesture_touch.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"New in Android",
        "titleFriendly":"",
        "summary":"A quick look at the new patterns and styles you can use to build beautiful Android apps鈥� Consistency has its place in Android, but you also have the flexibility to customize the look of your app to reinforce your brand. Use your brand color for accent鈥�",
        "url":"design/patterns/new.html",
        "group":"",
        "keywords": ["kitkat","android 4.4"],
        "tags": ["kitkat","android4.4"],
        "image":"design/media/branding_googlemusic.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Selection",
        "titleFriendly":"",
        "summary":"The contextual action bar (CAB) is a temporary action bar that overlays your app&#39;s current action bar while data is selected. It appears after the user long-presses on a selectable data item.鈥�",
        "url":"design/patterns/selection.html",
        "group":"",
        "keywords": ["actionmode","navigation","contextual"],
        "tags": ["actionmode","navigation","contextual"],
        "image":"design/media/selection_context_menu.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Widgets",
        "titleFriendly":"",
        "summary":"Design guide to creating widgets that are easy to use and look great.",
        "url":"design/patterns/widgets.html",
        "group":"",
        "keywords": ["appwidget","home"],
        "tags": ["appwidget","home"],
        "image":"design/media/widgets_info.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Notifications",
        "titleFriendly":"",
        "summary":"The notification system allows your app to keep the user informed about events, such as new chat messages or a calendar event. Think of notifications as a news channel that alerts the user to important events as they happen or a log that chronicles events鈥�",
        "url":"design/patterns/notifications.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/notifications_pattern_anatomy.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Full Screen",
        "titleFriendly":"",
        "summary":"Some content is best experienced full screen, like videos, games, image galleries, books, and slides in a presentation. You can engage users more deeply with content in full screen by minimizing visual distraction from app controls and protecting users鈥�",
        "url":"design/patterns/fullscreen.html",
        "group":"",
        "keywords": ["full screen","immersive","leanback"],
        "tags": ["fullscreen","immersive","leanback"],
        "image":"design/media/fullscreen_landing.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Patterns",
        "titleFriendly":"",
        "summary":"Design apps that behave in a consistent, predictable fashion.鈥�",
        "url":"design/patterns/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/patterns_landing.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Pure Android",
        "titleFriendly":"",
        "summary":"Most developers want to distribute their apps on multiple platforms. As you plan your app for Android, keep in mind that different platforms play by different rules and conventions. Design decisions that make perfect sense on one platform will look and鈥�",
        "url":"design/patterns/pure-android.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"design/media/migrating_ui_elements.png",
        "lang":"en",
        "type":"design"
      }, 
      {
        "title":"Buttons",
        "titleFriendly":"",
        "summary":"Some content is best experienced full screen, like videos, games, image galleries, books, and slides in a presentation. You can engage users more deeply with content in full screen by minimizing visual distraction from app controls and protecting users鈥�",
        "url":"design/patterns/buttons.html",
        "group":"",
        "keywords": ["buttons"],
        "tags": ["buttons"],
        "image":"design/media/fullscreen_landing.png",
        "lang":"en",
        "type":"design"
      }
];

var DISTRIBUTE_RESOURCES = [
      {
        "title":"Developer Stories: Google Play Game Services",
        "titleFriendly":"",
        "summary":"How gaming studios are using Google Play game services to deliver new gaming experiences for their users.",
        "url":"distribute/stories/games.html",
        "group":"",
        "keywords": [],
        "tags": ["googleplay","developerstory","games","global"],
        "image":"images/distribute/glu-ew-gpgames.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Developer Stories: Localization in Google Play",
        "titleFriendly":"",
        "summary":"Hear from Android developers who have successfully used the Google Play App Translation Service.",
        "url":"distribute/stories/localization.html",
        "group":"",
        "keywords": ["stories","video","case study"],
        "tags": ["googleplay","developerstory","localization","global"],
        "image":"images/distribute/zombie-ragdoll-n5-land.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Developer Stories: The Opportunity of Android Tablets",
        "titleFriendly":"",
        "summary":"More&quot; and more, developers are investing in a full tablet experience for their apps and are seeing those investments pay off big. The increased screen area on tablets opens up a world of possibilities, allowing for more engagement with the user 鈥斺€�",
        "url":"distribute/stories/tablets.html",
        "group":"",
        "keywords": [],
        "tags": ["googleplay","developerstory","journal","tablets","pure"],
        "image":"images/distribute/rememberthemilk.png",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Developer Stories",
        "titleFriendly":"",
        "summary":"Android developers, their apps, and their successes with Android and Google Play.",
        "url":"distribute/stories/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Localization Checklist",
        "titleFriendly":"",
        "summary":"Take advantage of the worldwide audience offered by Android and Google Play. Read this checklist to get an overview of how to deliver your product to markets around the world.",
        "url":"distribute/tools/localization-checklist.html",
        "group":"",
        "keywords": ["local","l10n","translation","language"],
        "tags": ["localizing","publishing","disttools"],
        "image":"distribute/images/localization-checklist.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Google Play Badge Files",
        "titleFriendly":"",
        "summary":"Download hi-res assets for localized Google Play badges.",
        "url":"distribute/tools/promote/badge-files.html",
        "group":"",
        "keywords": ["badge","google play"],
        "tags": ["badge","googleplay"],
        "image":"images/gp-badges-set.png",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Linking to Your Products",
        "titleFriendly":"",
        "summary":"Learn how to build links that take users to your published apps in Google Play from browse or search.",
        "url":"distribute/tools/promote/linking.html",
        "group":"",
        "keywords": ["linking"],
        "tags": ["promoting"],
        "image":"images/gp-linking-ex-crop.png",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Device Art Generator",
        "titleFriendly":"",
        "summary":"Drag and drop screenshots of your app into real device artwork, for better looking promotional images and improved visual context.",
        "url":"distribute/tools/promote/device-art.html",
        "group":"",
        "keywords": ["device","deviceart","nexus","assets"],
        "tags": ["disttools","promoting","deviceart","marketing"],
        "image":"images/device-art-ex-crop.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Google Play Badge Generator",
        "titleFriendly":"",
        "summary":"Build badges for your app in just a few clicks, or download hi-res badge assets localized for a variety of languages.",
        "url":"distribute/tools/promote/badges.html",
        "group":"",
        "keywords": ["badge","google play"],
        "tags": ["disttools","promoting","deviceart","marketing","googleplay"],
        "image":"images/gp-badges-set.png",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Brand Guidelines",
        "titleFriendly":"",
        "summary":"Guidelines and downloads for the Android and Google Play brands.",
        "url":"distribute/tools/promote/brand.html",
        "group":"",
        "keywords": ["brand","bugdroid","assets"],
        "tags": ["brand","bugdroid","assets"],
        "image":"assets/images/resource-card-default-android.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Alternative Distribution Options",
        "titleFriendly":"",
        "summary":"With Android you can distribute apps to users in any way you want, using any store or distribution approach.",
        "url":"distribute/tools/open-distribution.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"distribute/images/alt-distribution.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Tools &amp; Reference",
        "titleFriendly":"",
        "summary":"Here you鈥檒l find resources to help you publish your apps and games, acquire users, and monetize your investment.鈥�",
        "url":"distribute/tools/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Launch Checklist",
        "titleFriendly":"",
        "summary":"Essential overview of the complete process of delivering your app to users. Read this checklist early in development to help you plan for a successful launch on Google Play.",
        "url":"distribute/tools/launch-checklist.html",
        "group":"",
        "keywords": ["launch","publishing","google play"],
        "tags": ["localizing","publishing","disttools"],
        "image":"distribute/images/launch-checklist.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Monetize Premium Apps",
        "titleFriendly":"",
        "summary":"Charging users to download your apps is a simple, convenient monetization model.",
        "url":"distribute/monetize/premium.html",
        "group":"",
        "keywords": ["monetizing","paid"],
        "tags": ["monetizing","paid"],
        "image":"distribute/images/premium.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"E-commerce",
        "titleFriendly":"",
        "summary":"With Google Wallet Instant Buy, you&#39;ve the added flexibility of selling physical goods and services, such as clothing or movie tickets, through your apps using Instant Buy for Android in the US. You can use this option where your app is the store-front鈥�",
        "url":"distribute/monetize/ecommerce.html",
        "group":"",
        "keywords": ["monetizing","physical goods","wallet"],
        "tags": ["monetizing","physicalgoods","wallet"],
        "image":"distribute/images/ecommerce.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Monetize with Subscriptions",
        "titleFriendly":"",
        "summary":"Sell subscriptions to your products to create continuing revenue streams.",
        "url":"distribute/monetize/subscriptions.html",
        "group":"",
        "keywords": ["in-app","iap","monetizing","free","trials"],
        "tags": ["in-app","iap","monetizing","free","trials"],
        "image":"distribute/images/subscription.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Monetize with Ads",
        "titleFriendly":"",
        "summary":"Ads are a quick and easy way to incorporate a monetization option into both your free and paid apps.",
        "url":"distribute/monetize/ads.html",
        "group":"",
        "keywords": ["monetizing","free","freemium","ads"],
        "tags": ["monetizing","free","freemium","ads"],
        "image":"distribute/images/advertising.png",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Monetize Freemium Apps",
        "titleFriendly":"",
        "summary":"Use Google Play In-app Billing and other tools to monetize your free apps.",
        "url":"distribute/monetize/freemium.html",
        "group":"",
        "keywords": ["in-app","billing","iap","monetizing"],
        "tags": ["in-app","billing","iap","monetizing"],
        "image":"distribute/images/freemium.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Monetize",
        "titleFriendly":"",
        "summary":"There are many ways to make money with your apps on Google Play, and we offer a variety of tools to make it easy. Take advantage of Google Play鈥檚 phenomenal growth by using one or more of the business models available. To get started, set up your Merchant鈥�",
        "url":"distribute/monetize/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Convenient, Frictionless Purchasing",
        "titleFriendly":"",
        "summary":"Users can purchase instantly with a choice of payment methods.",
        "url":"distribute/monetize/payments.html",
        "group":"",
        "keywords": ["google play","payments","gift card"],
        "tags": ["googleplay","payments","giftcard"],
        "image":"distribute/images/payment-method.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Optimize Your App",
        "titleFriendly":"",
        "summary":"A look at how to get the most visibility and the highest ratings possible for your app or game. Optimizing the quality of your apps is a key strategy.",
        "url":"distribute/essentials/optimizing-your-app.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"distribute/images/gp-optimize-card.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Core App Quality",
        "titleFriendly":"",
        "summary":"App quality directly influences the long-term success of your app鈥攊n terms of installs, user rating and reviews, engagement, and user retention.",
        "url":"distribute/essentials/quality/core.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"distribute/images/core-quality-guidelines.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Tablet App Quality",
        "titleFriendly":"",
        "summary":"Tablets are a fast-growing part of the Android installed base that offers new opportunities for your apps.",
        "url":"distribute/essentials/quality/tablets.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"distribute/images/tablet-guidelines-color.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Game Developer Best Practices",
        "titleFriendly":"",
        "summary":"Essential tips for launching successful games in Google Play.",
        "url":"distribute/essentials/best-practices/games.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"distribute/images/gp-games-practices.png",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"App Developer Best Practices",
        "titleFriendly":"",
        "summary":"Essential tips for launching successful apps in Google Play.",
        "url":"distribute/essentials/best-practices/apps.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"distribute/images/gp-app-practices.png",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Essentials for a Successful App",
        "titleFriendly":"",
        "summary":"A focus on quality should be part of your entire app delivery process: from initial concept through app and UI design, coding and testing and onto a process of monitoring feedback and making improvement after launch.鈥�",
        "url":"distribute/essentials/index.html",
        "group":"",
        "keywords": ["guidelines","tablet","quality"],
        "tags": ["landing","quality"],
        "image":"",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"The Google Play Opportunity",
        "titleFriendly":"",
        "summary":"Billons of downloads a month and growing. Get your apps in front of users at Google's scale.",
        "url":"distribute/googleplay/about.html",
        "group":"",
        "keywords": ["play","apps","distributing","publishing"],
        "tags": ["visibility","growth","distributing"],
        "image":"distribute/images/about-play.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Developer Console",
        "titleFriendly":"",
        "summary":"Learn about the Developer Console, your home for app publishing on Google Play.",
        "url":"distribute/googleplay/developer-console.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"distribute/images/developer-console.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Get Started with Publishing",
        "titleFriendly":"",
        "summary":"Start publishing on Google Play in minutes by registering for a developer account.",
        "url":"distribute/googleplay/start.html",
        "group":"",
        "keywords": ["google play","publishing","register","signup"],
        "tags": ["publishing"],
        "image":"distribute/images/getting-started.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Google Play for Education",
        "titleFriendly":"",
        "summary":"Distribute your educational app directly to educators and schools.",
        "url":"distribute/googleplay/edu/about.html",
        "group":"",
        "keywords": ["education"],
        "tags": ["gpfe","googleplay","distribution","edu"],
        "image":"distribute/images/about-play-education.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Publish Android Apps for Education",
        "titleFriendly":"",
        "summary":"Join Google Play for Education in just a few simple steps.",
        "url":"distribute/googleplay/edu/start.html",
        "group":"",
        "keywords": ["education","addendum"],
        "tags": ["education","guidelines","quality"],
        "image":"distribute/images/play-education.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Google Play",
        "titleFriendly":"",
        "summary":"The premier store for distributing Android apps and games, with global reach and tools to help you gain traction in the marketplace.鈥�",
        "url":"distribute/googleplay/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Create a Great Listing",
        "titleFriendly":"",
        "summary":"Make your listing page compelling and integrate it into your marketing campaigns.",
        "url":"distribute/users/your-listing.html",
        "group":"",
        "keywords": ["listing","google play","users","growth"],
        "tags": ["listing","googleplay","users","growth"],
        "image":"distribute/images/create-listing.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Expand Into New Markets",
        "titleFriendly":"",
        "summary":"Tap fast-growing markets in Japan, Korea, India, Brazil, and many other countries around the world.",
        "url":"distribute/users/expand-to-new-markets.html",
        "group":"",
        "keywords": ["users","growth","global"],
        "tags": ["users","growth","global"],
        "image":"distribute/images/expand-into-new-markets.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Know Your User",
        "titleFriendly":"",
        "summary":"It\'s essential to understand your users and listen to their input. Here are some ideas.",
        "url":"distribute/users/know-your-user.html",
        "group":"",
        "keywords": ["users","growth","global"],
        "tags": ["users","growth","global"],
        "image":"distribute/images/know-your-user.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Promote Your App with Ads",
        "titleFriendly":"",
        "summary":"Promote your app through AdMob, AdWords, and YouTube to find new users at the right moment.",
        "url":"distribute/users/promote-with-ads.html",
        "group":"",
        "keywords": ["users","ads","analytics"],
        "tags": ["users","ads","analytics"],
        "image":"images/gp-ads-console.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Build Buzz",
        "titleFriendly":"",
        "summary":"Generate interest and demand for your app. Here are some ways to help users find, download, and install your apps.",
        "url":"distribute/users/build-buzz.html",
        "group":"",
        "keywords": ["users","growth","promotion"],
        "tags": ["users","growth","promotion"],
        "image":"distribute/images/build-buzz.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Build Community",
        "titleFriendly":"",
        "summary":"Build a loyal following with great support and communication.",
        "url":"distribute/users/build-community.html",
        "group":"",
        "keywords": ["users","growth","community"],
        "tags": ["users","growth","community"],
        "image":"images/gp-community-0.png",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Get Users",
        "titleFriendly":"",
        "summary":"You鈥檝e published your app, now how do you acquire users? Every app and game is different, but there are some common themes from successful Google Play developers. These best practices are critical to your app or game鈥檚 success.鈥�",
        "url":"distribute/users/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Update Your Apps Regularly",
        "titleFriendly":"",
        "summary":"Keeping your content fresh gives users a reason to come back.",
        "url":"distribute/engage/app-updates.html",
        "group":"",
        "keywords": ["updates"],
        "tags": ["updates"],
        "image":"images/gp-your-user-0.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Understand User Behavior",
        "titleFriendly":"",
        "summary":"Use Google Analytics to learn what your users like and what keeps them coming back.",
        "url":"distribute/engage/analytics.html",
        "group":"",
        "keywords": ["analytics","user behavior"],
        "tags": ["analytics","userbehavior"],
        "image":"images/gp-analytics.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Engage Your Community",
        "titleFriendly":"",
        "summary":"Building a community has many benefits, including improving your app and bringing users back to it.",
        "url":"distribute/engage/community.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/gp-engage-9.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Delight Users with Videos",
        "titleFriendly":"",
        "summary":"Videos are one of the most effective ways to get users excited about your apps. ",
        "url":"distribute/engage/video.html",
        "group":"",
        "keywords": ["engagement"],
        "tags": ["engagement"],
        "image":"images/gp-engage-smule.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Encourage Competition",
        "titleFriendly":"",
        "summary":" Bring out the competitor in your users with cloud save, multiplayer game play, and more.",
        "url":"distribute/engage/game-services.html",
        "group":"",
        "keywords": ["games"],
        "tags": ["games"],
        "image":"images/google/gps-play_games_logo.png",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Build Useful Widgets",
        "titleFriendly":"",
        "summary":"Use home screen widgets to remind users about important information in your apps and games, even when your apps are closed.",
        "url":"distribute/engage/widgets.html",
        "group":"",
        "keywords": [""],
        "tags": [""],
        "image":"images/gp-engage-0.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Use Rich Notifications to Keep Users Informed",
        "titleFriendly":"",
        "summary":"Use Android's notifications to keep users in touch with your content and services &mdash; even when the app is not in use.",
        "url":"distribute/engage/notifications.html",
        "group":"",
        "keywords": [""],
        "tags": [""],
        "image":"design/media/notifications_pattern_anatomy.png",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Integrate Google Cloud Messaging",
        "titleFriendly":"",
        "summary":"Keep your users in sync with your latest content by delivering lightweight messages over Google's infrastructure.",
        "url":"distribute/engage/gcm.html",
        "group":"",
        "keywords": ["gcm"],
        "tags": ["gcm"],
        "image":"images/gcm/gcm-logo.png",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Engage & Retain Users",
        "titleFriendly":"",
        "summary":"Engaging and retaining active users is the key to success. Here are some resources to help you build an active user base.",
        "url":"distribute/engage/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Deep Link to Bring Users Back",
        "titleFriendly":"",
        "summary":"Use deep links to bring your users into your apps from social posts, search, or ads.",
        "url":"distribute/engage/deep-linking.html",
        "group":"",
        "keywords": ["app indexing","google+ signin"],
        "tags": ["appindexing","google+signin"],
        "image":"images/gp-listing-4.jpg",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Make Signing In Easy",
        "titleFriendly":"",
        "summary":"Increase conversion rates while helping users minimize typing by letting users sign in with Google+.",
        "url":"distribute/engage/easy-signin.html",
        "group":"",
        "keywords": ["google+"],
        "tags": ["google+"],
        "image":"images/google/gps-googleplus.png",
        "lang":"en",
        "type":"distribute"
      }, 
      {
        "title":"Distribute Your Apps",
        "titleFriendly":"",
        "summary":"The most visited store in the world for Android apps. Cloud-connected and always synced, it's never been easier for users to find and download your apps.",
        "url":"distribute/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"distribute"
      }
];

var GOOGLE_RESOURCES = [
      {
        "title":"Sign Up for Google Cloud Save",
        "titleFriendly":"",
        "summary":"Sign up to be a trial partner for Google Cloud Save.鈥�",
        "url":"google/gcs/gcs-signup.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Google Cloud Save",
        "titleFriendly":"",
        "summary":"Google Cloud Save is a service that enables per-user data storage and sync in your apps with no backend programming required. Google Cloud Save stores its data in Google Cloud Datastore, a fully managed, schemaless database for storing non-relational 鈥�",
        "url":"google/gcs/index.html",
        "group":"",
        "keywords": ["gcs"],
        "tags": ["gcs"],
        "image":"images/google/gcs.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Adding Licensing to Your App",
        "titleFriendly":"",
        "summary":"After you&#39;ve set up a publisher account and development environment (see Setting Up for Licensing ), you are ready to add license verification to your app with the License Verification Library (LVL). Adding license verification with the LVL involves鈥�",
        "url":"google/play/licensing/adding-licensing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/licensing_flow.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Licensing Overview",
        "titleFriendly":"",
        "summary":"Google Play Licensing is a network-based service that lets an application query a trusted Google Play licensing server to determine whether the application is licensed to the current device user. The licensing service is based on the capability of the鈥�",
        "url":"google/play/licensing/overview.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/licensing_arch.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Licensing Reference",
        "titleFriendly":"",
        "summary":"Table 1 lists all of the source files in the License Verification Library (LVL) available through the Android SDK. All of the files are part of the com.android.vending.licensing package. Table 2 lists all of the license response codes supported by the鈥�",
        "url":"google/play/licensing/licensing-reference.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"App Licensing",
        "titleFriendly":"",
        "summary":"Information on using the licensing feature of Google Play to protect your apps.",
        "url":"google/play/licensing/index.html",
        "group":"",
        "keywords": [],
        "tags": ["licensing","drm"],
        "image":"assets/images/resource-card-default-android.jpg",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Setting Up for Licensing",
        "titleFriendly":"",
        "summary":"Before you start adding license verification to your application, you need to set up your Google Play publishing account, your development environment, and any test accounts required to verify your implementation. If you don&#39;t already have a publisher鈥�",
        "url":"google/play/licensing/setting-up.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/licensing_public_key.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Filters on Google Play",
        "titleFriendly":"",
        "summary":"When a user searches or browses for apps to download on Google Play, the results are filtered based on which applications are compatible with the device. For example, if an app requires a camera, Google Play would not show the app to devices that do not鈥�",
        "url":"google/play/filters.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Multiple APK Support",
        "titleFriendly":"",
        "summary":"Multiple APK support is a feature on Google Play that allows you to publish different APKs for your application that are each targeted to different device configurations. Each APK is a complete and independent version of your application, but they share鈥�",
        "url":"google/play/publishing/multiple-apks.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/market/version-codes.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Google Play Distribution",
        "titleFriendly":"",
        "summary":"Google Play allows you to manage your app distribution with features that let you control which users can download your app as well as deliver separate versions of your app based on certain characteristics like platform version. Make sure your app gets鈥�",
        "url":"google/play/dist.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Administering In-app Billing",
        "titleFriendly":"",
        "summary":"In-app billing frees you from processing financial transactions, but you still need to perform a few administrative tasks, including setting up and maintaining your product list on the Google Play Developer Console, registering test accounts, and handling鈥�",
        "url":"google/play/billing/billing_admin.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/in-app-billing/billing_product_list.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"In-app Billing Overview",
        "titleFriendly":"",
        "summary":"This documentation describes the fundamental In-app Billing components and features that you need to understand in order to add In-app Billing features into your application. Your application accesses the In-app Billing service using an API that is exposed鈥�",
        "url":"google/play/billing/billing_overview.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Testing In-app Billing",
        "titleFriendly":"",
        "summary":"The Google Play Developer Console provides several tools that help you test your In-app Billing implementation: To test In-app Billing in an application you must install the application on an Android-powered device. You cannot use the Android emulator鈥�",
        "url":"google/play/billing/billing_testing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/billing_test_flow.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"In-app Billing Reference &lt;span style=&quot;font-size:16px;&quot;&gt;(IAB Version 3)&lt;&#47;span&gt;",
        "titleFriendly":"",
        "summary":"This documentation provides technical reference information for using the In-app Billing Version 3 API. The following table lists all of the server response codes that are sent from Google Play to your application. Google Play sends the response code 鈥�",
        "url":"google/play/billing/billing_reference.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Google Play In-App Subscriptions",
        "titleFriendly":"",
        "summary":"Subscriptions let you sell content or features in your app with automated, recurring billing.",
        "url":"google/play/billing/billing_subscriptions.html",
        "group":"",
        "keywords": ["inapp","iap","billing"],
        "tags": ["monetization","inappbilling","subscriptions"],
        "image":"images/play_dev.jpg",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"In-app Billing Version 3",
        "titleFriendly":"",
        "summary":"The In-app Billing Version 3 API makes it easier for you to integrate In-app Billing into your applications. The features in this version include improved synchronous purchase flow, APIs to let you easily track ownership of consumable goods, and local鈥�",
        "url":"google/play/billing/api.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/in-app-billing/v3/iab_v3_purchase_flow.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"In-app Billing Version Notes",
        "titleFriendly":"",
        "summary":"The In-app Billing API is versioned, with each version offering additional features to your app. API support is provided by the Google Play Store app. On most devices, the Google Play Store app is updated automatically to support newer versions of the鈥�",
        "url":"google/play/billing/versions.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Purchase Status API",
        "titleFriendly":"",
        "summary":"Google Play provides an HTTP-based Purchase Status API that lets you remotely query the status of a specific in-app product or subscription, or cancel an active subscription. The API is designed to be used from your backend servers as a way of securely鈥�",
        "url":"google/play/billing/gp-purchase-status-api.html",
        "group":"",
        "keywords": ["in-app billing","google play","inapp billing","in app billing","iab","billing"],
        "tags": ["in-appbilling","googleplay","inappbilling","inappbilling","iab","billing"],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Security and Design",
        "titleFriendly":"",
        "summary":"As you design your In-app Billing implementation, be sure to follow the security and design guidelines that are discussed in this document. These guidelines are recommended best practices for anyone who is using Google Play&#39;s In-app Billing service鈥�",
        "url":"google/play/billing/billing_best_practices.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Implementing In-app Billing &lt;span style=&quot;font-size:16px;&quot;&gt;(IAB Version 3)&lt;&#47;span&gt;",
        "titleFriendly":"",
        "summary":"In-app Billing on Google Play provides a straightforward, simple interface for sending In-app Billing requests and managing In-app Billing transactions using Google Play. The information below covers the basics of how to make calls from your application鈥�",
        "url":"google/play/billing/billing_integrate.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Google Play In-app Billing",
        "titleFriendly":"",
        "summary":"In-app Billing lets you sell digital content as one-time purchases or subscriptions.",
        "url":"google/play/billing/index.html",
        "group":"",
        "keywords": ["inapp","iap","subscriptions"],
        "tags": ["monetizing","inappbilling","subscriptions"],
        "image":"images/play_dev.jpg",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"APK Expansion Files",
        "titleFriendly":"",
        "summary":"If your app needs more than the 50MB APK max, use free APK expansion files from Google Play.",
        "url":"google/play/expansion-files.html",
        "group":"",
        "keywords": ["apk size","apk max","large assets"],
        "tags": ["apksize","apkmax","largeassets"],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Authorizing with Google for REST APIs",
        "titleFriendly":"",
        "summary":"When you want your Android app to access Google APIs using the user&#39;s Google account over HTTP, the GoogleAuthUtil class and related APIs provide your users a secure and consistent experience for picking an account and retrieving an OAuth 2.0 token鈥�",
        "url":"google/auth/http-auth.html",
        "group":"",
        "keywords": ["oauth 2.0","googleauthutil"],
        "tags": ["oauth2.0","googleauthutil"],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Accessing Google APIs",
        "titleFriendly":"",
        "summary":"When you want to make a connection to one of the Google APIs provided in the Google Play services library (such as Google+, Games, or Drive), you need to create an instance of GoogleApiClient (&quot;Google API Client&quot;). The Google API Client provides鈥�",
        "url":"google/auth/api-client.html",
        "group":"",
        "keywords": ["oauth 2.0","googleauthutil"],
        "tags": ["oauth2.0","googleauthutil"],
        "image":"images/google/GoogleApiClient@2x.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Google Cast Android API",
        "titleFriendly":"",
        "summary":"Google Cast is a technology that enables multi-screen experiences, which allows users to send content from mobile devices and personal computers to their TVs. You can use the Google Cast Android API to add casting functionality to your Android app so 鈥�",
        "url":"google/play-services/cast.html",
        "group":"",
        "keywords": ["chromecast","miracast"],
        "tags": ["chromecast","miracast"],
        "image":"images/google/googlecast.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Google Drive Android API",
        "titleFriendly":"",
        "summary":"Give your users access to their files, wherever they are, on any device. The Google Drive Android API makes it easier than ever to use Drive to store and sync user鈥檚 files between their mobile devices and the cloud. Simply use Drive like local file storage鈥�",
        "url":"google/play-services/drive.html",
        "group":"",
        "keywords": ["storage","files","cloud"],
        "tags": ["storage","files","cloud"],
        "image":"images/google/gps-drive.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Google Play Game Services",
        "titleFriendly":"",
        "summary":"Make your games social with Google Play game services. Add achievements, leaderboards, real-time multiplayer, and other popular features using the Google Play game services SDK. Let players sign in using their Google+ identities and share their gaming鈥�",
        "url":"google/play-services/games.html",
        "group":"",
        "keywords": ["games"],
        "tags": ["games"],
        "image":"images/google/gps-play_games_logo.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Setting Up Google Play Services",
        "titleFriendly":"",
        "summary":"To develop an app using the Google Play services APIs , you need to set up your project with the Google Play services SDK. If you haven&#39;t installed the Google Play services SDK yet, go get it now by following the guide to Adding SDK Packages . To 鈥�",
        "url":"google/play-services/setup.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/tools/sync-project.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Google Mobile Ads",
        "titleFriendly":"",
        "summary":"Monetize your app with banner or interstitial ads from Google&#39;s vast pool of advertisers. Integrate with top ad networks through mediation to maximize your revenue from impressions. Take advantage of new ad features and capabilities through Google鈥�",
        "url":"google/play-services/ads.html",
        "group":"",
        "keywords": ["ads","monetization","admob","google play services"],
        "tags": ["ads","monetization","admob","googleplayservices"],
        "image":"images/google/gps-ads.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Google Maps Android API v2",
        "titleFriendly":"",
        "summary":"Allow your users explore the world with rich maps provided by Google. Identify locations with custom markers, augment the map data with image overlays, embed one or more maps as fragments, and much more.鈥�",
        "url":"google/play-services/maps.html",
        "group":"",
        "keywords": ["mapview","location"],
        "tags": ["mapview","location"],
        "image":"images/google/gps-maps.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Google Wallet Instant Buy for Android",
        "titleFriendly":"",
        "summary":"Add fast, secure checkout for users buying physical goods and services from your app. Transactions are monitored for fraud 24&#47;7. Keep your existing payments infrastructure and integrate Google Wallet quickly, easily and free of charge.鈥�",
        "url":"google/play-services/wallet.html",
        "group":"",
        "keywords": ["wallet","payments","instant buy"],
        "tags": ["wallet","payments","instantbuy"],
        "image":"images/google/gps-wallet-instant.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Google+ Platform for Android",
        "titleFriendly":"",
        "summary":"The Google+ platform for Android lets you authenticate a user with the same credentials they use on Google every day. Once a user signs in with Google, you can create more engaging experiences and drive usage of your app.鈥�",
        "url":"google/play-services/plus.html",
        "group":"",
        "keywords": ["authentication","signin","social"],
        "tags": ["authentication","signin","social"],
        "image":"images/google/gps-googleplus.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Authorization",
        "titleFriendly":"",
        "summary":"Google Play services offers a standard authorization flow for all Google APIs and all components of Google Play services. In addition, you can leverage the authorization portion of the Google Play services SDK to gain authorization to services that are鈥�",
        "url":"google/play-services/auth.html",
        "group":"",
        "keywords": ["accountmanager","oauth2"],
        "tags": ["accountmanager","oauth2"],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Google Play Services",
        "titleFriendly":"",
        "summary":"Give your apps more features to attract users on a wider range of devices. With Google Play services, your app can take advantage of the latest, Google-powered features such as Maps, Google+, and more, with automatic platform updates distributed as an鈥�",
        "url":"google/play-services/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/google/gps.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Advertising ID",
        "titleFriendly":"",
        "summary":"The advertising ID is a user-specific, unique, resettable ID for advertising, provided by Google Play services. It gives users better controls and provides developers with a simple, standard system to continue to monetize your apps. It is an anonymous鈥�",
        "url":"google/play-services/id.html",
        "group":"",
        "keywords": ["ads","advertising id","id"],
        "tags": ["ads","advertisingid","id"],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Location APIs",
        "titleFriendly":"",
        "summary":"The location APIs make it easy for you to build location-aware applications, without needing to focus on the details of the underlying location technology. They also let you minimize power consumption by using all of the capabilities of the device hardware鈥�",
        "url":"google/play-services/location.html",
        "group":"",
        "keywords": ["location","geofence","geofencing","gps"],
        "tags": ["location","geofence","geofencing","gps"],
        "image":"images/google/gps-location.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Android Backup Service",
        "titleFriendly":"",
        "summary":"Android Backup Service provides a backup transport for Android&#39;s data backup framework, which allows you to copy a user&#39;s persistent app data to remote &quot;cloud&quot; storage. Backing up persistent data this way provides a restore point for鈥�",
        "url":"google/backup/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Google Services",
        "titleFriendly":"",
        "summary":"Google offers a variety of services that help you build new revenue streams, manage app distribution, track app usage, and enhance your app with features such as maps, sign-in, and cloud messaging.鈥�",
        "url":"google/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/google/google-services.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Implementing GCM Server",
        "titleFriendly":"",
        "summary":"The server side of GCM consists of 2 components: Here are the basic steps you follow to implement your 3rd-party app server: A full GCM implementation requires both a client implementation and a server implementation. For more information about implementing鈥�",
        "url":"google/gcm/server.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Migration",
        "titleFriendly":"",
        "summary":"Android Cloud to Device Messaging (C2DM) is deprecated. The C2DM service will continue to be maintained in the short term, but C2DM will accept no new users, and it will grant no new quotas. C2DM developers are strongly encouraged to move to Google Cloud鈥�",
        "url":"google/gcm/c2dm.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"GCM Demo Application",
        "titleFriendly":"",
        "summary":"The information in this document has been superseded by GCM Server and GCM Client . Please use the GoogleCloudMessaging API instead of the GCM client helper library. The GCM server helper library is still valid. The Google Cloud Messaging (GCM) Demo demonstrates鈥�",
        "url":"google/gcm/demo.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/gcm/gcm-avd-home-auto-reg.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"GCM HTTP Connection Server",
        "titleFriendly":"",
        "summary":"This document describes the GCM HTTP connection server. Connection servers are the Google-provided servers that take messages from the 3rd-party application server and sending them to the device. To send a message, the application server issues a POST鈥�",
        "url":"google/gcm/http.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Implementing GCM Client",
        "titleFriendly":"",
        "summary":"A GCM client is a GCM-enabled app that runs on an Android device. To write your client code, we recommend that you use the GoogleCloudMessaging APIs. The client helper library that was offered in previous versions of GCM still works, but it has been superseded鈥�",
        "url":"google/gcm/client.html",
        "group":"",
        "keywords": ["cloud","push","messaging"],
        "tags": ["cloud","push","messaging"],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Using the GCM Helper Libraries",
        "titleFriendly":"",
        "summary":"The information in this document has been superseded by GCM Server and GCM Client . Please use the GoogleCloudMessaging API instead of the GCM client helper library. The GCM server helper library is still valid. This document describes how to write an鈥�",
        "url":"google/gcm/helper.html",
        "group":"",
        "keywords": ["cloud","push","messaging"],
        "tags": ["cloud","push","messaging"],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"GCM Cloud Connection Server (XMPP)",
        "titleFriendly":"",
        "summary":"The GCM Cloud Connection Server (CCS) is an XMPP endpoint that provides a persistent, asynchronous, bidirectional connection to Google servers. The connection can be used to send and receive messages between your server and your users&#39; GCM-connected鈥�",
        "url":"google/gcm/ccs.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/gcm/CCS-ack.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"User Notifications",
        "titleFriendly":"",
        "summary":"With user notifications, 3rd-party app servers can send a single message to multiple instance of an app running on devices owned by a single user. This feature is called user notifications . User notifications make it possible for every app instance that鈥�",
        "url":"google/gcm/notifications.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"GCM Advanced Topics",
        "titleFriendly":"",
        "summary":"This document covers advanced topics for GCM. When a 3rd-party server posts a message to GCM and receives a message ID back, it does not mean that the message was already delivered to the device. Rather, it means that it was accepted for delivery. What鈥�",
        "url":"google/gcm/adv.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Overview",
        "titleFriendly":"",
        "summary":"Google Cloud Messaging for Android (GCM) is a free service that helps developers send data from servers to their Android applications on Android devices, and upstream messages from the user&#39;s device back to the cloud. This could be a lightweight message鈥�",
        "url":"google/gcm/gcm.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/gcm/GCM-arch.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Google Cloud Messaging for Android",
        "titleFriendly":"",
        "summary":"Google Cloud Messaging for Android (GCM) is a service that allows you to send data from your server to your users&#39; Android-powered device, and also to receive messages from devices on the same connection. The GCM service handles all aspects of queueing鈥�",
        "url":"google/gcm/index.html",
        "group":"",
        "keywords": ["gcm"],
        "tags": ["gcm"],
        "image":"images/gcm/gcm-logo.png",
        "lang":"en",
        "type":"google"
      }, 
      {
        "title":"Getting Started",
        "titleFriendly":"",
        "summary":"This document tells you how to get started setting up a GCM implementation. Before you begin, make sure to set up the Google Play Services SDK . You need this SDK to use the GoogleCloudMessaging methods. To create a Google API project: Once the project鈥�",
        "url":"google/gcm/gs.html",
        "group":"",
        "keywords": ["cloud","push","messaging"],
        "tags": ["cloud","push","messaging"],
        "image":"",
        "lang":"en",
        "type":"google"
      }
];

var GUIDE_RESOURCES = [
      {
        "title":"闁嬬櫤銇熀绀�",
        "titleFriendly":"",
        "summary":"Android 銈儣銉偙銉笺偡銉с兂銇仚銇广仸 Java 銉椼儹銈般儵銉熴兂銈拌█瑾炪仹瑷樿堪銇椼伨銇欍€傘偝銉炽儜銈ゃ儷娓堛伩銇� Java 銈炽兗銉夛紙銇娿倛銇炽仢銇偄銉椼儶銈便兗銈枫儳銉炽伀蹇呰銇仚銇广仸銇儑銉笺偪銈勩儶銈姐兗銈� 銉曘偂銈ゃ儷锛夈伅銆� aapt 銉勩兗銉� 銈掍娇鐢ㄣ仐銇� Android 銉戙儍銈便兗銈搞伀銉愩兂銉夈儷銇椼伨銇欍€侫ndroid 銉戙儍銈便兗銈搞伅銆佹嫛寮靛瓙銇� apk 銇偄銉笺偒銈ゃ儢 銉曘偂銈ゃ儷銇с仚銆� 銉︺兗銈躲兗銇€併亾銇儠銈°偆銉倰銉囥儛銈ゃ偣銇儉銈︺兂銉兗銉夈仐銇﹀埄鐢ㄣ仐銇俱仚銆傘仱銇俱倞銆丄ndroid 銉戙儍銈便兗銈搞伅銆併偄銉椼儶銈便兗銈枫儳銉炽倰銉儛銈ゃ儷 銉囥儛銈ゃ偣銇厤甯冦亰銈堛伋銈ゃ兂銈广儓銉笺儷鈥�",
        "url":"intl/ja/guide/topics/fundamentals.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/binder_rpc.png",
        "lang":"ja",
        "type":"guide"
      }, 
      {
        "title":"銈儣銉偙銉笺偡銉с兂銇儛銉笺偢銉с儖銉炽偘",
        "titleFriendly":"",
        "summary":"銉愩兗銈搞儳銉崇鐞嗐伄銈炽兂銉濄兗銉嶃兂銉堛伅銆併偄銉椼儶銈便兗銈枫儳銉炽伄銈儍銉椼偘銉兗銉夊強銇炽儭銉炽儐銉娿兂銈广伄瑷堢敾銈掔珛銇︺倠銇伀閲嶈銇с仚銆� Android 銈枫偣銉嗐儬鑷綋銇€併偄銉冦儣銈般儸銉笺儔銈勪簰鎻涙€с伄鍒剁磩銇疅鏂姐仾銇┿伄銇熴倎銇€併偄銉椼儶銈便兗銈枫儳銉� 銉愩兗銈搞儳銉虫儏鍫便倰銈儣銉偙銉笺偡銉с兂銇銇椼仸 纰鸿獚銇欍倠銇撱仺銇亗銈娿伨銇涖倱 銆備唬銈忋倞銇€併偄銉椼儶銈便兗銈枫儳銉炽伀銇娿亼銈嬨儛銉笺偢銉с兂鍒剁磩銇儲銉笺偠銉笺伨銇熴伅銈儣銉偙銉笺偡銉с兂鑷綋銇倛銇ｃ仸瀹屽叏銇疅鏂姐仌銈屻伨銇欍€� Android 銈枫偣銉嗐儬銇岀⒑瑾嶃倰琛屻亞銇伅銆併偄銉椼儶銈便兗銈枫儳銉炽伀銈堛仯銇︺優銉嬨儠銈с偣銉堛伄 minSdkVersion鈥�",
        "url":"intl/ja/guide/publishing/versioning.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ja",
        "type":"guide"
      }, 
      {
        "title":"鍏枊銇簴鍌�",
        "titleFriendly":"",
        "summary":"銈儣銉偙銉笺偡銉с兂銇叕闁嬨仺銇€併偄銉椼儶銈便兗銈枫儳銉炽倰銉嗐偣銉堛仐銇﹂仼鍒囥伀銉戙儍銈便兗銈搞仐銆丄ndroid 鎼級銇惡甯鏈伄銉︺兗銈躲兗銇屽埄鐢ㄣ仹銇嶃倠鐘舵厠銇仚銈嬨亾銇ㄣ仹銇欍€� 銈儣銉偙銉笺偡銉с兂銈掑叕闁嬨仐銇� Android 鎼級銉囥儛銈ゃ偣銇偆銉炽偣銉堛兗銉仚銈嬨伀銇€併亜銇忋仱銇嬨伄浣滄キ銈掕銇ｃ仸銈儣銉偙銉笺偡銉с兂銇簴鍌欍倰鏁淬亪銈嬪繀瑕併亴銇傘倞銇俱仚銆傘亾銇儔銈儱銉°兂銉堛仹銇€併偄銉椼儶銈便兗銈枫儳銉炽伄銉儶銉笺偣銈掓垚鍔熴仌銇涖倠銇熴倎銇簴鍌欍伀銇娿亼銈嬨€侀噸瑕併仾銉併偋銉冦偗銉濄偆銉炽儓銈掕鏄庛仐銇︺亜銇俱仚銆� 銈儣銉偙銉笺偡銉с兂銈� Android 銉炪兗銈便儍銉堛伀鍏枊銇欍倠鍫村悎銇€併偄銉椼儶銈便兗銈枫儳銉炽伄鈥�",
        "url":"intl/ja/guide/publishing/preparing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ja",
        "type":"guide"
      }, 
      {
        "title":"銈儣銉偙銉笺偡銉с兂銇搞伄缃插悕",
        "titleFriendly":"",
        "summary":"銇撱伄銉夈偔銉ャ儭銉炽儓銇с伅銆丄ndroid 銈儣銉偙銉笺偡銉с兂銈掓惡甯鏈儲銉笺偠銉笺伀鍏枊銇欍倠鍓嶃伀缃插悕銇欍倠鏂规硶銇仱銇勩仸瑾槑銇椼伨銇欍€� Android 銈枫偣銉嗐儬銇с伅銆併偆銉炽偣銉堛兗銉仚銈嬨仚銇广仸銇偄銉椼儶銈便兗銈枫儳銉炽伀瀵俱仐銇︺儑銈搞偪銉讲鍚嶃仌銈屻仸瑷兼槑鏇搞倰蹇呰銇ㄣ仐銇俱仚銆傘亾銇鏄庢浉銇瀵嗛嵉銇€併偄銉椼儶銈便兗銈枫儳銉炽伄銉囥儥銉儍銉戙兗銇屾墍鎸併仚銈嬨倐銇仹銇欍€侫ndroid 銈枫偣銉嗐儬銇鏄庢浉銈掋偄銉椼儶銈便兗銈枫儳銉炽伄浣滄垚鑰呫伄璀樺垾鎵嬫銆併亰銈堛伋銈儣銉偙銉笺偡銉с兂闁撱伄淇￠牸闁總銇⒑绔嬫墜娈点仺銇椼仸浣跨敤銇椼伨銇欍€傝鏄庢浉銇€併儲銉笺偠銉笺亴銇┿伄銈儣銉偙銉笺偡銉с兂銈掋偆銉炽偣銉堛兗銉仹銇嶃倠銇嬨倰鈥�",
        "url":"intl/ja/guide/publishing/app-signing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ja",
        "type":"guide"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please follow this link .鈥�",
        "url":"guide/appendix/faq/licensingandoss.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please follow this link .鈥�",
        "url":"guide/appendix/faq/commontasks.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please follow this link .鈥�",
        "url":"guide/appendix/faq/security.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please follow this link .鈥�",
        "url":"guide/appendix/faq/framework.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please follow this link .鈥�",
        "url":"guide/appendix/faq/troubleshooting.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please follow this link .鈥�",
        "url":"guide/appendix/faq/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Supported Media Formats",
        "titleFriendly":"",
        "summary":"This document describes the media codec, container, and network protocol support provided by the Android platform. As an application developer, you are free to make use of any media codec that is available on any Android-powered device, including those鈥�",
        "url":"guide/appendix/media-formats.html",
        "group":"",
        "keywords": ["video","audio","mpeg","mp4","m4a","mp3","3gp","3gpp","flac","wave","wav"],
        "tags": ["video","audio","mpeg","mp4","m4a","mp3","3gp","3gpp","flac","wave","wav"],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Appendix",
        "titleFriendly":"",
        "summary":"",
        "url":"guide/appendix/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;receiver&gt;",
        "titleFriendly":"",
        "summary":"Declares a broadcast receiver (a BroadcastReceiver subclass) as one of the application&#39;s components. Broadcast receivers enable applications to receive intents that are broadcast by the system or by other applications, even when other components of鈥�",
        "url":"guide/topics/manifest/receiver-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;grant-uri-permission&gt;",
        "titleFriendly":"",
        "summary":"Specifies which data subsets of the parent content provider permission can be granted for. Data subsets are indicated by the path part of a true&quot;, permission can be granted for any the data under the provider&#39;s purview. However, if that attribute鈥�",
        "url":"guide/topics/manifest/grant-uri-permission-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;uses-library&gt;",
        "titleFriendly":"",
        "summary":"All of the android packages (such as app, content, view, and widget) are in the default library that all applications are automatically linked against. However, some packages (such as maps) are in separate libraries that are not automatically linked. 鈥�",
        "url":"guide/topics/manifest/uses-library-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;instrumentation&gt;",
        "titleFriendly":"",
        "summary":"Declares an Instrumentation class that enables you to monitor an application&#39;s interaction with the system. The Instrumentation object is instantiated before any of the application&#39;s components.鈥�",
        "url":"guide/topics/manifest/instrumentation-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;activity-alias&gt;",
        "titleFriendly":"",
        "summary":"An alias for an activity, named by the targetActivity attribute. The target must be in the same application as the alias and it must be declared before the alias in the manifest. The alias presents the target activity as a independent entity. It can have鈥�",
        "url":"guide/topics/manifest/activity-alias-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;uses-sdk&gt;",
        "titleFriendly":"",
        "summary":"Lets you express an application&#39;s compatibility with one or more versions of the Android platform, by means of an API Level integer. The API Level expressed by an application will be compared to the API Level of a given Android system, which may vary鈥�",
        "url":"guide/topics/manifest/uses-sdk-element.html",
        "group":"",
        "keywords": ["api levels","sdk version","minsdkversion","targetsdkversion","maxsdkversion"],
        "tags": ["apilevels","sdkversion","minsdkversion","targetsdkversion","maxsdkversion"],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;uses-permission&gt;",
        "titleFriendly":"",
        "summary":"Requests a permission that the application must be granted in order for it to operate correctly. Permissions are granted by the user when the application is installed, not while it&#39;s running. For more information on permissions, see the Permissions鈥�",
        "url":"guide/topics/manifest/uses-permission-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;intent-filter&gt;",
        "titleFriendly":"",
        "summary":"Specifies the types of intents that an activity, service, or broadcast receiver can respond to. An intent filter declares the capabilities of its parent component 鈥� what an activity or service can do and what types of broadcasts a receiver can handle.鈥�",
        "url":"guide/topics/manifest/intent-filter-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;meta-data&gt;",
        "titleFriendly":"",
        "summary":"A name-value pair for an item of additional, arbitrary data that can be supplied to the parent component. A component element can contain any number of Bundle object and made available to the component as the metaData field. Ordinary values are specified鈥�",
        "url":"guide/topics/manifest/meta-data-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;uses-feature&gt;",
        "titleFriendly":"",
        "summary":"Declares a single hardware or software feature that is used by the application. The purpose of a &lt;uses-feature&gt; declaration is to inform any external entity of the set of hardware and software features on which your application depends. The element鈥�",
        "url":"guide/topics/manifest/uses-feature-element.html",
        "group":"",
        "keywords": ["filtering","features","google play filters","permissions"],
        "tags": ["filtering","features","googleplayfilters","permissions"],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;uses-configuration&gt;",
        "titleFriendly":"",
        "summary":"Indicates what hardware and software features the application requires. For example, an application might specify that it requires a physical keyboard or a particular navigation device, like a trackball. The specification is used to avoid installing the鈥�",
        "url":"guide/topics/manifest/uses-configuration-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;manifest&gt;",
        "titleFriendly":"",
        "summary":"The root element of the AndroidManifest.xml file. It must contain an &lt;application&gt; element and specify package attributes.鈥�",
        "url":"guide/topics/manifest/manifest-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;application&gt;",
        "titleFriendly":"",
        "summary":"The declaration of the application. This element contains subelements that declare each of the application&#39;s components and has attributes that can affect all the components. Many of these attributes (such as icon, label, permission, process, taskAffinity鈥�",
        "url":"guide/topics/manifest/application-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;permission&gt;",
        "titleFriendly":"",
        "summary":"Declares a security permission that can be used to limit access to specific components or features of this or other applications. See the Permissions section in the introduction, and the Security and Permissions document for more information on how permissions鈥�",
        "url":"guide/topics/manifest/permission-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;data&gt;",
        "titleFriendly":"",
        "summary":"Adds a data specification to an intent filter. The specification can be just a data type (the mimeType attribute), just a URI, or both a data type and a URI. A URI is specified by separate attributes for each of its parts: port attribute and all the path鈥�",
        "url":"guide/topics/manifest/data-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"App Manifest",
        "titleFriendly":"",
        "summary":"The manifest file presents essential information about your app to the Android system, information the system must have before it can run any of the app&#39;s code.鈥�",
        "url":"guide/topics/manifest/manifest-intro.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;permission-tree&gt;",
        "titleFriendly":"",
        "summary":"Declares the base name for a tree of permissions. The application takes ownership of all names within the tree. It can dynamically add new permissions to the tree by calling addPermission(). Names within the tree are separated by periods (&#39;taxes, 鈥�",
        "url":"guide/topics/manifest/permission-tree-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;permission-group&gt;",
        "titleFriendly":"",
        "summary":"Declares a name for a logical grouping of related permissions. Individual permission join the group through the permissionGroup attribute of the &lt;permission&gt; element. Members of a group are presented together in the user interface. Note that this鈥�",
        "url":"guide/topics/manifest/permission-group-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;provider&gt;",
        "titleFriendly":"",
        "summary":"Declares a content provider component. A content provider is a subclass of ContentProvider that supplies structured access to data managed by the application. All content providers in your application must be defined in a query(), which among other arguments鈥�",
        "url":"guide/topics/manifest/provider-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;service&gt;",
        "titleFriendly":"",
        "summary":"Declares a service (a Service subclass) as one of the application&#39;s components. Unlike activities, services lack a visual user interface. They&#39;re used to implement long-running background operations or a rich communications API that can be called鈥�",
        "url":"guide/topics/manifest/service-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;action&gt;",
        "titleFriendly":"",
        "summary":"Adds an action to an intent filter. An &lt;intent-filter&gt; element must contain one or more {@code &lt;action&gt;} elements. If it doesn&#39;t contain any, no Intent objects will get through the filter. See Intents and Intent Filters for details on 鈥�",
        "url":"guide/topics/manifest/action-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;category&gt;",
        "titleFriendly":"",
        "summary":"Adds a category name to an intent filter. See Intents and Intent Filters for details on intent filters and the role of category specifications within a filter.鈥�",
        "url":"guide/topics/manifest/category-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;activity&gt;",
        "titleFriendly":"",
        "summary":"Declares an activity (an Activity subclass) that implements part of the application&#39;s visual user interface. All activities must be represented by {@code &lt;activity&gt;} elements in the manifest file. Any that are not declared there will not be 鈥�",
        "url":"guide/topics/manifest/activity-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;compatible-screens&gt;",
        "titleFriendly":"",
        "summary":"Specifies each screen configuration with which the application is compatible. Only one instance of the {@code &lt;compatible-screens&gt;} element is allowed in the manifest, but it can contain multiple &lt;screen&gt; elements. Each &lt;screen&gt; element鈥�",
        "url":"guide/topics/manifest/compatible-screens-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;path-permission&gt;",
        "titleFriendly":"",
        "summary":"Defines the path and required permissions for a specific subset of data within a content provider. This element can be specified multiple times to supply multiple paths.鈥�",
        "url":"guide/topics/manifest/path-permission-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;supports-screens&gt;",
        "titleFriendly":"",
        "summary":"Lets you specify the screen sizes your application supports and enable screen compatibility mode for screens larger than what your application supports. It&#39;s important that you always use this element in your application to specify the screen sizes鈥�",
        "url":"guide/topics/manifest/supports-screens-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"&lt;supports-gl-texture&gt;",
        "titleFriendly":"",
        "summary":"Declares a single GL texture compression format that is supported by the application. An application &quot;supports&quot; a GL texture compression format if it is capable of providing texture assets that are compressed in that format, once the application鈥�",
        "url":"guide/topics/manifest/supports-gl-texture-element.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Layout Resource",
        "titleFriendly":"",
        "summary":"A layout resource defines the architecture for the UI in an Activity or a component of a UI. You should not assume that any derivation of ViewGroup will accept nested Views. Some ViewGroups are implementations of the AdapterView class, which determines鈥�",
        "url":"guide/topics/resources/layout-resource.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Animation Resources",
        "titleFriendly":"",
        "summary":"An animation resource can define one of two types of animations: There are two types of animations that you can do with the view animation framework: An animation defined in XML that modifies properties of the target object, such as background color or鈥�",
        "url":"guide/topics/resources/animation-resource.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Drawable Resources",
        "titleFriendly":"",
        "summary":"A drawable resource is a general concept for a graphic that can be drawn to the screen and which you can retrieve with APIs such as getDrawable(int) or apply to another XML resource with attributes such as AnimationDrawable. A bitmap image. Android supports鈥�",
        "url":"guide/topics/resources/drawable-resource.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/resources/layers.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Handling Runtime Changes",
        "titleFriendly":"",
        "summary":"Some device configurations can change during runtime (such as screen orientation, keyboard availability, and language). When such a change occurs, Android restarts the running Activity (onDestroy() is called, followed by onCreate()). The restart behavior鈥�",
        "url":"guide/topics/resources/runtime-changes.html",
        "group":"",
        "keywords": ["activity","lifecycle"],
        "tags": ["activity","lifecycle"],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"String Resources",
        "titleFriendly":"",
        "summary":"A string resource provides text strings for your application with optional text styling and formatting. There are three types of resources that can provide your application with strings: All strings are capable of applying some styling markup and formatting鈥�",
        "url":"guide/topics/resources/string-resource.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Application Resources",
        "titleFriendly":"",
        "summary":"This document has moved. Please see Application Resources .鈥�",
        "url":"guide/topics/resources/resources-i18n.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Localizing with Resources",
        "titleFriendly":"",
        "summary":"Android will run on many devices in many regions. To reach the most users, your application should handle text, audio files, numbers, currency, and graphics in ways appropriate to the locales where your application will be used. This document describes鈥�",
        "url":"guide/topics/resources/localization.html",
        "group":"",
        "keywords": ["localizing","localization","resources","formats","l10n"],
        "tags": ["localizing","localization","resources","formats","l10n"],
        "image":"../../../images/resources/right-arrow.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Accessing Resources",
        "titleFriendly":"",
        "summary":"Once you provide a resource in your application (discussed in Providing Resources ), you can apply it by referencing its resource ID. All resource IDs are defined in your project&#39;s R class, which the aapt tool automatically generates. When your application鈥�",
        "url":"guide/topics/resources/accessing-resources.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Resources Overview",
        "titleFriendly":"",
        "summary":"You should always externalize resources such as images and strings from your application code, so that you can maintain them independently. Externalizing your resources also allows you to provide alternative resources that support specific device configurations鈥�",
        "url":"guide/topics/resources/overview.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/resources/resource_devices_diagram1.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Menu Resource",
        "titleFriendly":"",
        "summary":"A menu resource defines an application menu (Options Menu, Context Menu, or submenu) that can be inflated with MenuInflater. For a guide to using menus, see the Menus developer guide. Introduced in API Level 11. See the Action Bar developer guide for 鈥�",
        "url":"guide/topics/resources/menu-resource.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Resource Types",
        "titleFriendly":"",
        "summary":"Each of the documents in this section describe the usage, format and syntax for a certain type of application resource that you can provide in your resources directory ({@code res&#47;}). Here&#39;s a brief summary of each resource type:鈥�",
        "url":"guide/topics/resources/available-resources.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"More Resource Types",
        "titleFriendly":"",
        "summary":"This page defines more types of resources you can externalize, including: A boolean value defined in XML. No attributes. This application code retrieves the boolean: This layout XML uses the boolean for an attribute: A color value defined in XML. The 鈥�",
        "url":"guide/topics/resources/more-resources.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Style Resource",
        "titleFriendly":"",
        "summary":"A style resource defines the format and look for a UI. A style can be applied to an individual View (from within a layout file) or to an entire Activity or application (from within the manifest file). For more information about creating and applying styles鈥�",
        "url":"guide/topics/resources/style-resource.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"App Resources",
        "titleFriendly":"",
        "summary":"Developer guide about how to use resources in your Android apps.",
        "url":"guide/topics/resources/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/develop/resources.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Providing Resources",
        "titleFriendly":"",
        "summary":"You should always externalize application resources such as images and strings from your code, so that you can maintain them independently. You should also provide alternative resources for specific device configurations, by grouping them in specially-named鈥�",
        "url":"guide/topics/resources/providing-resources.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/resources/resource_devices_diagram2.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Color State List Resource",
        "titleFriendly":"",
        "summary":"A ColorStateList is an object you can define in XML that you can apply as a color, but will actually change colors, depending on the state of the View object to which it is applied. For example, a Button widget can exist in one of several different states鈥�",
        "url":"guide/topics/resources/color-list-resource.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Property Animation",
        "titleFriendly":"",
        "summary":"The property animation system is a robust framework that allows you to animate almost anything. You can define an animation to change any object property over time, regardless of whether it draws to the screen or not. A property animation changes a property鈥�",
        "url":"guide/topics/graphics/prop-animation.html",
        "group":"",
        "keywords": ["valueanimator","objectanimator","layouttransition","viewpropertyanimator"],
        "tags": ["valueanimator","objectanimator","layouttransition","viewpropertyanimator"],
        "image":"images/animation/animation-linear.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"View Animation",
        "titleFriendly":"",
        "summary":"You can use the view animation system to perform tweened animation on Views. Tween animation calculates the animation with information such as the start point, end point, size, rotation, and other common aspects of an animation. A tween animation can 鈥�",
        "url":"guide/topics/graphics/view-animation.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Canvas and Drawables",
        "titleFriendly":"",
        "summary":"The Android framework APIs provides a set 2D drawing APIs that allow you to render your own custom graphics onto a canvas or to modify existing Views to customize their look and feel. When drawing 2D graphics, you&#39;ll typically do so in one of two 鈥�",
        "url":"guide/topics/graphics/2d-graphics.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/ninepatch_raw.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Animation and Graphics Overview",
        "titleFriendly":"",
        "summary":"Android provides a variety of powerful APIs for applying animation to UI elements and drawing custom 2D and 3D graphics. The sections below provide an overview of the APIs and system capabilities available and help you decide with approach is best for鈥�",
        "url":"guide/topics/graphics/overview.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Hardware Acceleration",
        "titleFriendly":"",
        "summary":"Beginning in Android 3.0 (API level 11), the Android 2D rendering pipeline supports hardware acceleration, meaning that all drawing operations that are performed on a View&#39;s canvas use the GPU. Because of the increased resources required to enable鈥�",
        "url":"guide/topics/graphics/hardware-accel.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Animation and Graphics",
        "titleFriendly":"",
        "summary":"Earlier this year, Android 3.0 launched with a new 2D rendering pipeline designed to support hardware acceleration on tablets. With this new pipeline, all drawing operations performed by the UI toolkit are carried out using the GPU. You鈥檒l be happy to鈥�",
        "url":"guide/topics/graphics/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Drawable Animation",
        "titleFriendly":"",
        "summary":"Drawable animation lets you load a series of Drawable resources one after another to create an animation. This is a traditional animation in the sense that it is created with a sequence of different images, played in order, like a roll of film. The AnimationDrawable鈥�",
        "url":"guide/topics/graphics/drawable-animation.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"OpenGL ES",
        "titleFriendly":"",
        "summary":"Android includes support for high performance 2D and 3D graphics with the Open Graphics Library (OpenGL庐), specifically, the OpenGL ES API. OpenGL is a cross-platform graphics API that specifies a standard software interface for 3D graphics processing鈥�",
        "url":"guide/topics/graphics/opengl.html",
        "group":"",
        "keywords": ["games"],
        "tags": ["games"],
        "image":"images/opengl/coordinates.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"NFC Basics",
        "titleFriendly":"",
        "summary":"This document describes the basic NFC tasks you perform in Android. It explains how to send and receive NFC data in the form of NDEF messages and describes the Android framework APIs that support these features. For more advanced topics, including a discussion鈥�",
        "url":"guide/topics/connectivity/nfc/nfc.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/nfc_tag_dispatch.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Host-based Card Emulation",
        "titleFriendly":"",
        "summary":"Many Android-powered devices that offer NFC functionality already support NFC card emulation. In most cases, the card is emulated by a separate chip in the device, called a secure element . Many SIM cards provided by wireless carriers also contain a secure鈥�",
        "url":"guide/topics/connectivity/nfc/hce.html",
        "group":"",
        "keywords": ["host card emulation","hce","hostapduservice","offhostapduservice","tap and pay"],
        "tags": ["hostcardemulation","hce","hostapduservice","offhostapduservice","tapandpay"],
        "image":"images/nfc/secure-element.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Near Field Communication",
        "titleFriendly":"",
        "summary":"Near Field Communication (NFC) is a set of short-range wireless technologies, typically requiring a distance of 4cm or less to initiate a connection. NFC allows you to share small payloads of data between an NFC tag and an Android-powered device, or between鈥�",
        "url":"guide/topics/connectivity/nfc/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Advanced NFC",
        "titleFriendly":"",
        "summary":"This document describes advanced NFC topics, such as working with various tag technologies, writing to NFC tags, and foreground dispatching, which allows an application in the foreground to handle intents even when other applications filter for the same鈥�",
        "url":"guide/topics/connectivity/nfc/advanced-nfc.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Session Initiation Protocol",
        "titleFriendly":"",
        "summary":"Android provides an API that supports the Session Initiation Protocol (SIP). This lets you add SIP-based internet telephony features to your applications. Android includes a full SIP protocol stack and integrated call management services that let applications鈥�",
        "url":"guide/topics/connectivity/sip.html",
        "group":"",
        "keywords": ["sipmanager","sipprofile","sipaudiocall","telephony"],
        "tags": ["sipmanager","sipprofile","sipaudiocall","telephony"],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Bluetooth",
        "titleFriendly":"",
        "summary":"The Android platform includes support for the Bluetooth network stack, which allows a device to wirelessly exchange data with other Bluetooth devices. The application framework provides access to the Bluetooth functionality through the Android Bluetooth鈥�",
        "url":"guide/topics/connectivity/bluetooth.html",
        "group":"",
        "keywords": ["wireless","bluetoothadapter","bluetoothdevice"],
        "tags": ["wireless","bluetoothadapter","bluetoothdevice"],
        "image":"images/bt_enable_request.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Bluetooth Low Energy",
        "titleFriendly":"",
        "summary":"DevBytes: Bluetooth Low Energy API Android 4.3 (API Level 18) introduces built-in platform support for Bluetooth Low Energy in the central role and provides APIs that apps can use to discover devices, query for services, and read&#47;write characteristics鈥�",
        "url":"guide/topics/connectivity/bluetooth-le.html",
        "group":"",
        "keywords": ["wireless","bluetoothadapter","bluetoothdevice","ble","btle"],
        "tags": ["wireless","bluetoothadapter","bluetoothdevice","ble","btle"],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"USB Accessory",
        "titleFriendly":"",
        "summary":"USB accessory mode allows users to connect USB host hardware specifically designed for Android-powered devices. The accessories must adhere to the Android accessory protocol outlined in the Android Accessory Development Kit documentation. This allows 鈥�",
        "url":"guide/topics/connectivity/usb/accessory.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"USB Host",
        "titleFriendly":"",
        "summary":"When your Android-powered device is in USB host mode, it acts as the USB host, powers the bus, and enumerates connected USB devices. USB host mode is supported in Android 3.1 and higher. Before you begin, it is important to understand the classes that鈥�",
        "url":"guide/topics/connectivity/usb/host.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"USB Host and Accessory",
        "titleFriendly":"",
        "summary":"Android supports a variety of USB peripherals and Android USB accessories (hardware that implements the Android accessory protocol) through two modes: USB accessory and USB host. In USB accessory mode, the external USB hardware act as the USB hosts. Examples鈥�",
        "url":"guide/topics/connectivity/usb/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/usb-host-accessory.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Connectivity",
        "titleFriendly":"",
        "summary":"Most network-connected Android apps will use HTTP to send and receive data. Android includes two HTTP clients: HttpURLConnection and Apache HTTP Client. Both support HTTPS, streaming uploads and downloads, configurable timeouts, IPv6 and connection pooling鈥�",
        "url":"guide/topics/connectivity/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Wi-Fi Peer-to-Peer",
        "titleFriendly":"",
        "summary":"Wi-Fi peer-to-peer (P2P) allows Android 4.0 (API level 14) or later devices with the appropriate hardware to connect directly to each other via Wi-Fi without an intermediate access point (Android&#39;s Wi-Fi P2P framework complies with the Wi-Fi Alliance鈥�",
        "url":"guide/topics/connectivity/wifip2p.html",
        "group":"",
        "keywords": ["wireless","wifip2pmanager","wi-fi direct","wifi direct","p2p","wi-fi p2p","wifi p2p"],
        "tags": ["wireless","wifip2pmanager","wi-fidirect","wifidirect","p2p","wi-fip2p","wifip2p"],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"App Widget Host",
        "titleFriendly":"",
        "summary":"The Android Home screen available on most Android devices allows the user to embed app widgets for quick access to content. If you&#39;re building a Home replacement or a similar app, you can also allow the user to embed app widgets by implementing an鈥�",
        "url":"guide/topics/appwidgets/host.html",
        "group":"",
        "keywords": ["appwidgethost","home screen","launcher"],
        "tags": ["appwidgethost","homescreen","launcher"],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"App Widgets",
        "titleFriendly":"",
        "summary":"App Widgets are miniature application views that can be embedded in other applications (such as the Home screen) and receive periodic updates. These views are referred to as Widgets in the user interface, and you can publish one with an App Widget provider鈥�",
        "url":"guide/topics/appwidgets/index.html",
        "group":"",
        "keywords": ["home","appwidgetprovider"],
        "tags": ["home","appwidgetprovider"],
        "image":"images/appwidgets/appwidget.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Data Backup",
        "titleFriendly":"",
        "summary":"Android&#39;s backup service allows you to copy your persistent application data to remote &quot;cloud&quot; storage, in order to provide a restore point for the application data and settings. If a user performs a factory reset or converts to a new Android-powered鈥�",
        "url":"guide/topics/data/backup.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"App Install Location",
        "titleFriendly":"",
        "summary":"Beginning with API Level 8, you can allow your application to be installed on the external storage (for example, the device&#39;s SD card). This is an optional feature you can declare for your application with the preferExternal&quot; or &quot;auto&quot鈥�",
        "url":"guide/topics/data/install-location.html",
        "group":"",
        "keywords": ["sdcard","external"],
        "tags": ["sdcard","external"],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Storage Options",
        "titleFriendly":"",
        "summary":"Android provides several options for you to save persistent application data. The solution you choose depends on your specific needs, such as whether the data should be private to your application or accessible to other applications (and the user) and鈥�",
        "url":"guide/topics/data/data-storage.html",
        "group":"",
        "keywords": ["database","sharedpreferences","sdcard"],
        "tags": ["database","sharedpreferences","sdcard"],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Data Storage",
        "titleFriendly":"",
        "summary":"This class covers different strategies for cloud enabled applications. It covers syncing data with the cloud using your own back-end web application, and backing up data using the cloud so that users can restore their data when installing your application鈥�",
        "url":"guide/topics/data/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Layouts",
        "titleFriendly":"",
        "summary":"A layout defines the visual structure for a user interface, such as the UI for an activity or app widget . You can declare a layout in two ways: The Android framework gives you the flexibility to use either or both of these methods for declaring and managing鈥�",
        "url":"guide/topics/ui/declaring-layout.html",
        "group":"",
        "keywords": ["view","viewgroup"],
        "tags": ["view","viewgroup"],
        "image":"images/layoutparams.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Buttons",
        "titleFriendly":"",
        "summary":"A button consists of text or an icon (or both text and an icon) that communicates what action occurs when the user touches it. Depending on whether you want a button with text, an icon, or both, you can create the button in your layout in three ways: 鈥�",
        "url":"guide/topics/ui/controls/button.html",
        "group":"",
        "keywords": ["button","imagebutton"],
        "tags": ["button","imagebutton"],
        "image":"images/ui/button-types.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Text Fields",
        "titleFriendly":"",
        "summary":"A text field allows the user to type text into your app. It can be either single line or multi-line. Touching a text field places the cursor and automatically displays the keyboard. In addition to typing, text fields allow for a variety of other activities鈥�",
        "url":"guide/topics/ui/controls/text.html",
        "group":"",
        "keywords": ["edittext","autocompletetextview"],
        "tags": ["edittext","autocompletetextview"],
        "image":"images/ui/edittext-noextract.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Checkboxes",
        "titleFriendly":"",
        "summary":"Checkboxes allow the user to select one or more options from a set. Typically, you should present each checkbox option in a vertical list. To create each checkbox option, create a CheckBox in your layout. Because a set of checkbox options allows the user鈥�",
        "url":"guide/topics/ui/controls/checkbox.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/ui/checkboxes.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Radio Buttons",
        "titleFriendly":"",
        "summary":"Radio buttons allow the user to select one option from a set. You should use radio buttons for optional sets that are mutually exclusive if you think that the user needs to see all available options side-by-side. If it&#39;s not necessary to show all 鈥�",
        "url":"guide/topics/ui/controls/radiobutton.html",
        "group":"",
        "keywords": ["radiobutton","radiogroup"],
        "tags": ["radiobutton","radiogroup"],
        "image":"images/ui/radiobuttons.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Pickers",
        "titleFriendly":"",
        "summary":"Android provides controls for the user to pick a time or pick a date as ready-to-use dialogs. Each picker provides controls for selecting each part of the time (hour, minute, AM&#47;PM) or date (month, day, year). Using these pickers helps ensure that鈥�",
        "url":"guide/topics/ui/controls/pickers.html",
        "group":"",
        "keywords": ["datepicker","timepicker"],
        "tags": ["datepicker","timepicker"],
        "image":"images/ui/pickers.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Toggle Buttons",
        "titleFriendly":"",
        "summary":"A toggle button allows the user to change a setting between two states. You can add a basic toggle button to your layout with the ToggleButton object. Android 4.0 (API level 14) introduces another kind of toggle button called a switch that provides a 鈥�",
        "url":"guide/topics/ui/controls/togglebutton.html",
        "group":"",
        "keywords": ["switch","togglebutton"],
        "tags": ["switch","togglebutton"],
        "image":"images/ui/togglebutton.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Spinners",
        "titleFriendly":"",
        "summary":"Spinners provide a quick way to select one value from a set. In the default state, a spinner shows its currently selected value. Touching the spinner displays a dropdown menu with all other available values, from which the user can select a new one. You鈥�",
        "url":"guide/topics/ui/controls/spinner.html",
        "group":"",
        "keywords": ["adapterview","spinneradapter"],
        "tags": ["adapterview","spinneradapter"],
        "image":"images/ui/spinner.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Menus",
        "titleFriendly":"",
        "summary":"Menus are a common user interface component in many types of applications. To provide a familiar and consistent user experience, you should use the Menu APIs to present user actions and other options in your activities. Beginning with Android 3.0 (API鈥�",
        "url":"guide/topics/ui/menus.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/options_menu.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"AdapterView",
        "titleFriendly":"",
        "summary":"Note that it is necessary to have the People._ID column in projection used with CursorAdapter or else you will get an exception. If, during the course of your application&#39;s life, you change the underlying data that is read by your Adapter, you should鈥�",
        "url":"guide/topics/ui/binding.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Drag and Drop",
        "titleFriendly":"",
        "summary":"With the Android drag&#47;drop framework, you can allow your users to move data from one View to another View in the current layout using a graphical drag and drop gesture. The framework includes a drag event class, drag listeners, and helper methods 鈥�",
        "url":"guide/topics/ui/drag-drop.html",
        "group":"",
        "keywords": ["clipdata","dragevent","onlongclicklistener"],
        "tags": ["clipdata","dragevent","onlongclicklistener"],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Input Controls",
        "titleFriendly":"",
        "summary":"Input controls are the interactive components in your app&#39;s user interface. Android provides a wide variety of controls you can use in your UI, such as buttons, text fields, seek bars, checkboxes, zoom buttons, toggle buttons, and many more. Adding鈥�",
        "url":"guide/topics/ui/controls.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/ui/ui-controls.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Settings",
        "titleFriendly":"",
        "summary":"Applications often include settings that allow users to modify app features and behaviors. For example, some apps allow users to specify whether notifications are enabled or specify how often the application syncs data with the cloud. If you want to provide鈥�",
        "url":"guide/topics/ui/settings.html",
        "group":"",
        "keywords": ["preference","preferenceactivity","preferencefragment"],
        "tags": ["preference","preferenceactivity","preferencefragment"],
        "image":"images/ui/settings/settings.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Action Bar",
        "titleFriendly":"",
        "summary":"Action Bar The action bar is a window feature that identifies the user location, and provides user actions and navigation modes. Using the action bar offers your users a familiar interface across applications that the system gracefully adapts for different鈥�",
        "url":"guide/topics/ui/actionbar.html",
        "group":"",
        "keywords": ["actionbar","menu","tabs"],
        "tags": ["actionbar","menu","tabs"],
        "image":"images/ui/actionbar@2x.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"How Android Draws Views",
        "titleFriendly":"",
        "summary":"When an Activity receives focus, it will be requested to draw its layout. The Android framework will handle the procedure for drawing, but the Activity must provide the root node of its layout hierarchy. Drawing begins with the root node of the layout鈥�",
        "url":"guide/topics/ui/how-android-draws.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Linear Layout",
        "titleFriendly":"",
        "summary":"LinearLayout is a view group that aligns all children in a single direction, vertically or horizontally. You can specify the layout direction with the LinearLayout are stacked one after the other, so a vertical list will only have one child per row, no鈥�",
        "url":"guide/topics/ui/layout/linear.html",
        "group":"",
        "keywords": ["linearlayout"],
        "tags": ["linearlayout"],
        "image":"images/ui/linearlayout.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Grid View",
        "titleFriendly":"",
        "summary":"GridView is a ViewGroup that displays items in a two-dimensional, scrollable grid. The grid items are automatically inserted to the layout using a ListAdapter. For an introduction to how you can dynamically insert views using an adapter, read Building鈥�",
        "url":"guide/topics/ui/layout/gridview.html",
        "group":"",
        "keywords": ["gridview"],
        "tags": ["gridview"],
        "image":"images/ui/gridview.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Table",
        "titleFriendly":"",
        "summary":"TableLayout is a ViewGroup that displays child View elements in rows and columns. TableLayout positions its children into rows and columns. TableLayout containers do not display border lines for their rows, columns, or cells. The table will have as many鈥�",
        "url":"guide/topics/ui/layout/grid.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/ui/gridlayout.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Relative Layout",
        "titleFriendly":"",
        "summary":"RelativeLayout is a view group that displays child views in relative positions. The position of each view can be specified as relative to sibling elements (such as to the left-of or below another view) or in positions relative to the parent RelativeLayout鈥�",
        "url":"guide/topics/ui/layout/relative.html",
        "group":"",
        "keywords": ["relativelayout"],
        "tags": ["relativelayout"],
        "image":"images/ui/relativelayout.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"List View",
        "titleFriendly":"",
        "summary":"ListView is a view group that displays a list of scrollable items. The list items are automatically inserted to the list using an Adapter that pulls content from a source such as an array or database query and converts each item result into a view that鈥�",
        "url":"guide/topics/ui/layout/listview.html",
        "group":"",
        "keywords": ["listview"],
        "tags": ["listview"],
        "image":"images/ui/listview.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"UI Overview",
        "titleFriendly":"",
        "summary":"All user interface elements in an Android app are built using View and ViewGroup objects. A View is an object that draws something on the screen that the user can interact with. A ViewGroup is an object that holds other View (and ViewGroup) objects in鈥�",
        "url":"guide/topics/ui/overview.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/viewgroup.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Input Events",
        "titleFriendly":"",
        "summary":"On Android, there&#39;s more than one way to intercept the events from a user&#39;s interaction with your application. When considering events within your user interface, the approach is to capture the events from the specific View object that the user鈥�",
        "url":"guide/topics/ui/ui-events.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Dialogs",
        "titleFriendly":"",
        "summary":"A dialog is a small window that prompts the user to make a decision or enter additional information. A dialog does not fill the screen and is normally used for modal events that require users to take an action before they can proceed. Dialog Design For鈥�",
        "url":"guide/topics/ui/dialogs.html",
        "group":"",
        "keywords": ["alertdialog","dialogfragment"],
        "tags": ["alertdialog","dialogfragment"],
        "image":"images/ui/dialogs.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"User Interface",
        "titleFriendly":"",
        "summary":"As Ice Cream Sandwich rolls out to more devices, it鈥檚 important that you begin to migrate your designs to the action bar in order to promote a consistent Android user experience. Ice Cream Sandwich (ICS) sports two new widgets that have been designed 鈥�",
        "url":"guide/topics/ui/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Notifications",
        "titleFriendly":"",
        "summary":"A notification is a message you can display to the user outside of your application&#39;s normal UI. When you tell the system to issue a notification, it first appears as an icon in the notification area . To see the details of the notification, the user鈥�",
        "url":"guide/topics/ui/notifiers/notifications.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/ui/notifications/iconic_notification.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Toasts",
        "titleFriendly":"",
        "summary":"A toast provides simple feedback about an operation in a small popup. It only fills the amount of space required for the message and the current activity remains visible and interactive. For example, navigating away from an email before you send it triggers鈥�",
        "url":"guide/topics/ui/notifiers/toasts.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/toast.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Custom Components",
        "titleFriendly":"",
        "summary":"Android offers a sophisticated and powerful componentized model for building your UI, based on the fundamental layout classes: View and ViewGroup. To start with, the platform includes a variety of prebuilt View and ViewGroup subclasses 鈥� called widgets鈥�",
        "url":"guide/topics/ui/custom-components.html",
        "group":"",
        "keywords": ["view","widget"],
        "tags": ["view","widget"],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Building Accessibility Services",
        "titleFriendly":"",
        "summary":"An accessibility service is an application that provides user interface enhancements to assist users with disabilities, or who may temporarily be unable to fully interact with a device. For example, users who are driving, taking care of a young child 鈥�",
        "url":"guide/topics/ui/accessibility/services.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Accessibility Developer Checklist",
        "titleFriendly":"",
        "summary":"Making an application accessible is about a deep commitment to usability, getting the details right and delighting your users. This document provides a checklist of accessibility requirements, recommendations and considerations to help you make sure your鈥�",
        "url":"guide/topics/ui/accessibility/checklist.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Making Applications Accessible",
        "titleFriendly":"",
        "summary":"Applications built for Android are more accessible to users with visual, physical or age-related limitations when those users activate accessibility services and features on a device. These services make your application more accessible even if you do鈥�",
        "url":"guide/topics/ui/accessibility/apps.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"calendar.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Accessibility",
        "titleFriendly":"",
        "summary":"How to make your apps accessible to users with visual, physical, or other limitations. Robust support will increase your app's user base.",
        "url":"guide/topics/ui/accessibility/index.html",
        "group":"",
        "keywords": ["accessibility"],
        "tags": ["accessibility"],
        "image":"design/media/accessibility_contentdesc.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Styles and Themes",
        "titleFriendly":"",
        "summary":"A style is a collection of properties that specify the look and format for a View or window. A style can specify properties such as height, padding, font color, font size, background color, and much more. A style is defined in an XML resource that is 鈥�",
        "url":"guide/topics/ui/themes.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Advanced RenderScript",
        "titleFriendly":"",
        "summary":"Because applications that utilize RenderScript still run inside of the Android VM, you have access to all of the framework APIs that you are familiar with, but can utilize RenderScript when appropriate. To facilitate this interaction between the framework鈥�",
        "url":"guide/topics/renderscript/advanced.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Runtime API Reference",
        "titleFriendly":"",
        "summary":"",
        "url":"guide/topics/renderscript/reference.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"RenderScript",
        "titleFriendly":"",
        "summary":"RenderScript is a framework for running computationally intensive tasks at high performance on Android. RenderScript is primarily oriented for use with data-parallel computation, although serial computationally intensive workloads can benefit as well.鈥�",
        "url":"guide/topics/renderscript/compute.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Computation",
        "titleFriendly":"",
        "summary":"It鈥檚 been a year since the last blog post on RenderScript, and with the release of Android 4.2, it鈥檚 a good time to talk about the performance work that we鈥檝e done since then. One of the major goals of this past year was to improve the performance of 鈥�",
        "url":"guide/topics/renderscript/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Spelling Checker Framework",
        "titleFriendly":"",
        "summary":"The Android platform offers a spelling checker framework that lets you implement and access spell checking in your application. The framework is one of the Text Service APIs offered by the Android platform. To use the framework in your app, you create鈥�",
        "url":"guide/topics/text/spell-checker-framework.html",
        "group":"",
        "keywords": ["input","spellcheckerservice"],
        "tags": ["input","spellcheckerservice"],
        "image":"resources/articles/images/spellcheck_lifecycle.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Copy and Paste",
        "titleFriendly":"",
        "summary":"Android provides a powerful clipboard-based framework for copying and pasting. It supports both simple and complex data types, including text strings, complex data structures, text and binary stream data, and even application assets. Simple text data 鈥�",
        "url":"guide/topics/text/copy-paste.html",
        "group":"",
        "keywords": ["clipboardmanager","clipdata","input"],
        "tags": ["clipboardmanager","clipdata","input"],
        "image":"images/ui/clipboard/copy_paste_framework.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Creating an Input Method",
        "titleFriendly":"",
        "summary":"An input method editor (IME) is a user control that enables users to enter text. Android provides an extensible input method framework that allows applications to provide users alternative input methods, such as on-screen keyboards or even speech input鈥�",
        "url":"guide/topics/text/creating-input-method.html",
        "group":"",
        "keywords": ["ime","keyboard","inputmethodservice"],
        "tags": ["ime","keyboard","inputmethodservice"],
        "image":"resources/articles/images/inputmethod_lifecycle_image.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Text and Input",
        "titleFriendly":"",
        "summary":"A new feature available in Android 4.0 is voice typing: the difference for users is that the recognition results appear in the text box while they are still speaking. If you are an IME developer, you can easily integrate with voice typing. We believe 鈥�",
        "url":"guide/topics/text/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Media Playback",
        "titleFriendly":"",
        "summary":"The Android multimedia framework includes support for playing variety of common media types, so that you can easily integrate audio, video and images into your applications. You can play audio or video from media files stored in your application&#39;s鈥�",
        "url":"guide/topics/media/mediaplayer.html",
        "group":"",
        "keywords": ["mediaplayer","soundpool","audiomanager"],
        "tags": ["mediaplayer","soundpool","audiomanager"],
        "image":"images/notification1.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Camera",
        "titleFriendly":"",
        "summary":"The Android framework includes support for various cameras and camera features available on devices, allowing you to capture pictures and videos in your applications. This document discusses a quick, simple approach to image and video capture and outlines鈥�",
        "url":"guide/topics/media/camera.html",
        "group":"",
        "keywords": ["photo","video","picture","mediarecorder"],
        "tags": ["photo","video","picture","mediarecorder"],
        "image":"images/camera-area-coordinates.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Audio Capture",
        "titleFriendly":"",
        "summary":"The Android multimedia framework includes support for capturing and encoding a variety of common audio formats, so that you can easily integrate audio into your applications. You can record audio using the MediaRecorder APIs if supported by the device鈥�",
        "url":"guide/topics/media/audio-capture.html",
        "group":"",
        "keywords": ["mediarecorder"],
        "tags": ["mediarecorder"],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"ExoPlayer",
        "titleFriendly":"",
        "summary":"Playing videos and music is a popular activity on Android devices. The Android framework provides MediaPlayer as a quick solution for playing media with minimal code, and the MediaCodec and MediaExtractor classes are provided for building custom media鈥�",
        "url":"guide/topics/media/exoplayer.html",
        "group":"",
        "keywords": ["audio","video","adaptive","streaming","dash","smoothstreaming"],
        "tags": ["audio","video","adaptive","streaming","dash","smoothstreaming"],
        "image":"images/exoplayer/object-model.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Media Router",
        "titleFriendly":"",
        "summary":"As users connect their televisions, home theater systems and music players with wireless technologies, they want to be able to play content from Android apps on these larger, louder devices. Enabling this kind of playback can turn your one-device, one-user鈥�",
        "url":"guide/topics/media/mediarouter.html",
        "group":"",
        "keywords": ["mediarouter","cast","chromecast","wireless display","miracast"],
        "tags": ["mediarouter","cast","chromecast","wirelessdisplay","miracast"],
        "image":"images/mediarouter/mediarouter-framework.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"SONiVOX JETCreator User Manual",
        "titleFriendly":"",
        "summary":"Content Authoring Application for the JET Interactive Music Engine This document contains the user guidelines for the SONiVOX JET Creator, an authoring application for creating and auditioning JET files. JET is an interactive music player for small embedded鈥�",
        "url":"guide/topics/media/jet/jetcreator_manual.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/jet/linear_music.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Media Route Provider",
        "titleFriendly":"",
        "summary":"Users want to play media content from their Android devices bigger, brighter, and louder on connected playback devices such as televisions, stereos, and home theater equipment. As a manufacturer of these devices, allowing Android users to instantly show鈥�",
        "url":"guide/topics/media/mediarouteprovider.html",
        "group":"",
        "keywords": ["mediarouteprovider","mediacontrolintent"],
        "tags": ["mediarouteprovider","mediacontrolintent"],
        "image":"images/mediarouter/media-route-provider-framework.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"JetPlayer",
        "titleFriendly":"",
        "summary":"The Android platform includes a JET engine that lets you add interactive playback of JET audio content in your applications. You can create JET content for interactive playback using the JetCreator authoring application that ships with the SDK. To play鈥�",
        "url":"guide/topics/media/jetplayer.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Media and Camera",
        "titleFriendly":"",
        "summary":"If your media playback application creates a media playback service, just like Music, that responds to the media button events, how will the user know where those events are going to? Music, or your new application? Making a game on Android is easy. Making鈥�",
        "url":"guide/topics/media/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Device Administration",
        "titleFriendly":"",
        "summary":"Android 2.2 introduces support for enterprise applications by offering the Android Device Administration API. The Device Administration API provides device administration features at the system level. These APIs allow you to create security-aware applications鈥�",
        "url":"guide/topics/admin/device-admin.html",
        "group":"",
        "keywords": ["devicepolicymanager","policy","security"],
        "tags": ["devicepolicymanager","policy","security"],
        "image":"images/admin/device-admin-app.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Administration",
        "titleFriendly":"",
        "summary":"Android 4.0 (ICS) comes with a number of enhancements that make it easier for people to bring their personal Android devices to work. In this post, we鈥檙e going to have a look at the key store functionality.鈥�",
        "url":"guide/topics/admin/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Content Provider Basics",
        "titleFriendly":"",
        "summary":"A content provider manages access to a central repository of data. A provider is part of an Android application, which often provides its own UI for working with the data. However, content providers are primarily intended to be used by other applications鈥�",
        "url":"guide/topics/providers/content-provider-basics.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Contacts Provider",
        "titleFriendly":"",
        "summary":"The Contacts Provider is a powerful and flexible Android component that manages the device&#39;s central repository of data about people. The Contacts Provider is the source of data you see in the device&#39;s contacts application, and you can also access鈥�",
        "url":"guide/topics/providers/contacts-provider.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/providers/contacts_structure.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Calendar Provider",
        "titleFriendly":"",
        "summary":"The Calendar Provider is a repository for a user&#39;s calendar events. The Calendar Provider API allows you to perform query, insert, update, and delete operations on calendars, events, attendees, reminders, and so on. The Calender Provider API can be鈥�",
        "url":"guide/topics/providers/calendar-provider.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/providers/datamodel.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Storage Access Framework",
        "titleFriendly":"",
        "summary":"Android 4.4 (API level 19) introduces the Storage Access Framework (SAF). The SAF makes it simple for users to browse and open documents, images, and other files across all of their their preferred document storage providers. A standard, easy-to-use UI鈥�",
        "url":"guide/topics/providers/document-provider.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/providers/storage_datamodel.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Content Providers",
        "titleFriendly":"",
        "summary":"Content providers manage access to a structured set of data. They encapsulate the data, and provide mechanisms for defining data security. Content providers are the standard interface that connects data in one process with code running in another process鈥�",
        "url":"guide/topics/providers/content-providers.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Creating a Content Provider",
        "titleFriendly":"",
        "summary":"A content provider manages access to a central repository of data. You implement a provider as one or more classes in an Android application, along with elements in the manifest file. One of your classes implements a subclass ContentProvider, which is鈥�",
        "url":"guide/topics/providers/content-provider-creating.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"System Permissions",
        "titleFriendly":"",
        "summary":"Android is a privilege-separated operating system, in which each application runs with a distinct system identity (Linux user ID and group ID). Parts of the system are also separated into distinct identities. Linux thereby isolates applications from each鈥�",
        "url":"guide/topics/security/permissions.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Processes and Application Life Cycle",
        "titleFriendly":"",
        "summary":"In most cases, every Android application runs in its own Linux process. This process is created for the application when some of its code needs to be run, and will remain running until it is no longer needed and the system needs to reclaim its memory 鈥�",
        "url":"guide/topics/processes/process-lifecycle.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Environment Sensors",
        "titleFriendly":"",
        "summary":"The Android platform provides four sensors that let you monitor various environmental properties. You can use these sensors to monitor relative ambient humidity, illuminance, ambient pressure, and ambient temperature near an Android-powered device. All鈥�",
        "url":"guide/topics/sensors/sensors_environment.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Sensors Overview",
        "titleFriendly":"",
        "summary":"Most Android-powered devices have built-in sensors that measure motion, orientation, and various environmental conditions. These sensors are capable of providing raw data with high precision and accuracy, and are useful if you want to monitor three-dimensional鈥�",
        "url":"guide/topics/sensors/sensors_overview.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/axis_device.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Motion Sensors",
        "titleFriendly":"",
        "summary":"The Android platform provides several sensors that let you monitor the motion of a device. Two of these sensors are always hardware-based (the accelerometer and gyroscope), and three of these sensors can be either hardware-based or software-based (the鈥�",
        "url":"guide/topics/sensors/sensors_motion.html",
        "group":"",
        "keywords": ["sensorevent","accelerometer","gyroscope","gravity","rotation","stepcounter"],
        "tags": ["sensorevent","accelerometer","gyroscope","gravity","rotation","stepcounter"],
        "image":"images/axis_globe.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Position Sensors",
        "titleFriendly":"",
        "summary":"The Android platform provides two sensors that let you determine the position of a device: the geomagnetic field sensor and the orientation sensor. The Android platform also provides a sensor that lets you determine how close the face of a device is to鈥�",
        "url":"guide/topics/sensors/sensors_position.html",
        "group":"",
        "keywords": ["sensorevent","orientation","proximity"],
        "tags": ["sensorevent","orientation","proximity"],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Location and Sensors APIs",
        "titleFriendly":"",
        "summary":"However, there鈥檚 a new wrinkle: recently, a few devices have shipped (see here and here) that run Android on screens that are naturally landscape in their orientation. That is, when held in the default position, the screens are wider than they are tall鈥�",
        "url":"guide/topics/sensors/index.html",
        "group":"",
        "keywords": ["location","sensors"],
        "tags": ["location","sensors"],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Creating a Search Interface",
        "titleFriendly":"",
        "summary":"When you&#39;re ready to add search functionality to your application, Android helps you implement the user interface with either a search dialog that appears at the top of the activity window or a search widget that you can insert in your layout. Both鈥�",
        "url":"guide/topics/search/search-dialog.html",
        "group":"",
        "keywords": ["searchview"],
        "tags": ["searchview"],
        "image":"images/search/search-ui.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Adding Custom Suggestions",
        "titleFriendly":"",
        "summary":"When using the Android search dialog or search widget, you can provide custom search suggestions that are created from data in your application. For example, if your application is a word dictionary, you can suggest words from the dictionary that match鈥�",
        "url":"guide/topics/search/adding-custom-suggestions.html",
        "group":"",
        "keywords": ["searchrecentsuggestionsprovider"],
        "tags": ["searchrecentsuggestionsprovider"],
        "image":"images/search/search-suggest-custom.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Searchable Configuration",
        "titleFriendly":"",
        "summary":"In order to implement search with assistance from the Android system (to deliver search queries to an activity and provide search suggestions), your application must provide a search configuration in the form of an XML file. This page describes the search鈥�",
        "url":"guide/topics/search/searchable-config.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Search Overview",
        "titleFriendly":"",
        "summary":"Search is a core user feature on Android. Users should be able to search any data that is available to them, whether the content is located on the device or the Internet. To help create a consistent search experience for users, Android provides a search鈥�",
        "url":"guide/topics/search/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/search/search-suggest-custom.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Adding Recent Query Suggestions",
        "titleFriendly":"",
        "summary":"When using the Android search dialog or search widget, you can provide search suggestions based on recent search queries. For example, if a user previously searched for &quot;puppies,&quot; then that query appears as a suggestion once he or she begins鈥�",
        "url":"guide/topics/search/adding-recent-query-suggestions.html",
        "group":"",
        "keywords": ["searchrecentsuggestions","searchrecentsuggestionsprovider"],
        "tags": ["searchrecentsuggestions","searchrecentsuggestionsprovider"],
        "image":"images/search/search-suggest-recent-queries.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Services",
        "titleFriendly":"",
        "summary":"A Service is an application component that can perform long-running operations in the background and does not provide a user interface. Another application component can start a service and it will continue to run in the background even if the user switches鈥�",
        "url":"guide/components/services.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/service_lifecycle.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Fragments",
        "titleFriendly":"",
        "summary":"A Fragment represents a behavior or a portion of user interface in an Activity. You can combine multiple fragments in a single activity to build a multi-pane UI and reuse a fragment in multiple activities. You can think of a fragment as a modular section鈥�",
        "url":"guide/components/fragments.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/fundamentals/fragments.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Processes and Threads",
        "titleFriendly":"",
        "summary":"When an application component starts and the application does not have any other components running, the Android system starts a new Linux process for the application with a single thread of execution. By default, all components of the same application鈥�",
        "url":"guide/components/processes-and-threads.html",
        "group":"",
        "keywords": ["lifecycle","background"],
        "tags": ["lifecycle","background"],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Android Interface Definition Language (AIDL)",
        "titleFriendly":"",
        "summary":"AIDL (Android Interface Definition Language) is similar to other IDLs you might have worked with. It allows you to define the programming interface that both the client and service agree upon in order to communicate with each other using interprocess 鈥�",
        "url":"guide/components/aidl.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Intents and Intent Filters",
        "titleFriendly":"",
        "summary":"An Intent is a messaging object you can use to request an action from another app component . Although intents facilitate communication between components in several ways, there are three fundamental use-cases: An Activity represents a single screen in鈥�",
        "url":"guide/components/intents-filters.html",
        "group":"",
        "keywords": ["intentfilter"],
        "tags": ["intentfilter"],
        "image":"images/components/intent-filters@2x.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Bound Services",
        "titleFriendly":"",
        "summary":"A bound service is the server in a client-server interface. A bound service allows components (such as activities) to bind to the service, send requests, receive responses, and even perform interprocess communication (IPC). A bound service typically lives鈥�",
        "url":"guide/components/bound-services.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/fundamentals/service_binding_tree_lifecycle.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Tasks and Back Stack",
        "titleFriendly":"",
        "summary":"An application usually contains multiple activities . Each activity should be designed around a specific kind of action the user can perform and can start other activities. For example, an email application might have one activity to show a list of new鈥�",
        "url":"guide/components/tasks-and-back-stack.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/fundamentals/diagram_backstack.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Common Intents",
        "titleFriendly":"",
        "summary":"An intent allows you to start an activity in another app by describing a simple action you&#39;d like to perform (such as &quot;view a map&quot; or &quot;take a picture&quot;) in an Intent object. This type of intent is called an implicit intent because鈥�",
        "url":"guide/components/intents-common.html",
        "group":"",
        "keywords": ["intentfilter"],
        "tags": ["intentfilter"],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Loaders",
        "titleFriendly":"",
        "summary":"Introduced in Android 3.0, loaders make it easy to asynchronously load data in an activity or fragment. Loaders have these characteristics: There are multiple classes and interfaces that may be involved in using loaders in an application. They are summarized鈥�",
        "url":"guide/components/loaders.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Activities",
        "titleFriendly":"",
        "summary":"An Activity is an application component that provides a screen with which users can interact in order to do something, such as dial the phone, take a photo, send an email, or view a map. Each activity is given a window in which to draw its user interface鈥�",
        "url":"guide/components/activities.html",
        "group":"",
        "keywords": ["activity","intent"],
        "tags": ["activity","intent"],
        "image":"images/activity_lifecycle.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Application Fundamentals",
        "titleFriendly":"",
        "summary":"Android apps are written in the Java programming language. The Android SDK tools compile your code鈥攁long with any data and resource files鈥攊nto an APK: an Android package , which is an archive file with an apk suffix. One APK file contains all the contents鈥�",
        "url":"guide/components/fundamentals.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"App Components",
        "titleFriendly":"",
        "summary":"Android's application framework lets you create rich and innovative apps using a set of reusable components. This section explains how you can build the components that define the building blocks of your app and how to connect them together using intents. ",
        "url":"guide/components/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/develop/app_components.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Introduction to Android",
        "titleFriendly":"",
        "summary":"Android provides a rich application framework that allows you to build innovative apps and games for mobile devices in a Java language environment. The documents listed in the left navigation provide details about how to build apps using Android&#39;s鈥�",
        "url":"guide/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Building Web Apps in WebView",
        "titleFriendly":"",
        "summary":"If you want to deliver a web application (or just a web page) as a part of a client application, you can do it using WebView. The WebView class is an extension of Android&#39;s View class that allows you to display web pages as a part of your activity鈥�",
        "url":"guide/webapps/webview.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Supporting Different Screens in Web Apps",
        "titleFriendly":"",
        "summary":"Because Android is available on devices with a variety of screen sizes and pixel densities, you should account for these factors in your web design so your web pages always appear at the appropriate size. When targeting your web pages for Android devices鈥�",
        "url":"guide/webapps/targeting.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Debugging Web Apps",
        "titleFriendly":"",
        "summary":"If you are testing your web app with a device running Android 4.4 or higher, you can remotely debug your web pages in WebView with Chrome Developer Tools, while continuing to support older versions of Android. For more information, see Remote Debugging鈥�",
        "url":"guide/webapps/debugging.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Web Apps",
        "titleFriendly":"",
        "summary":"There are essentially two ways to deliver an application on Android: as a client-side application (developed using the Android SDK and installed on user devices in an APK) or as a web application (developed using web standards and accessed through a web鈥�",
        "url":"guide/webapps/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/webapps/webapps.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Migrating to WebView in Android 4.4",
        "titleFriendly":"",
        "summary":"Android 4.4 (API level 19) introduces a new version of WebView that is based on Chromium . This change upgrades WebView performance and standards support for HTML5, CSS3, and JavaScript to match the latest web browsers. Any apps using WebView will inherit鈥�",
        "url":"guide/webapps/migrating.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Best Practices for Web Apps",
        "titleFriendly":"",
        "summary":"Developing web pages and web applications for mobile devices presents a different set of challenges compared to developing a web page for the typical desktop web browser. To help you get started, the following is a list of practices you should follow 鈥�",
        "url":"guide/webapps/best-practices.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Application Design Goals",
        "titleFriendly":"",
        "summary":"When learning how to build applications on a new platform, you first learn what APIs are available and how to use them. Later, you learn the nuances of the platform. Put another way: first you learn how you can build applications; later, you learn how鈥�",
        "url":"guide/practices/app-design/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Designing for Seamlessness",
        "titleFriendly":"",
        "summary":"Even if your application is fast and responsive, certain design decisions can still cause problems for users 鈥� because of unplanned interactions with other applications or dialogs, inadvertent loss of data, unintended blocking, and so on. To avoid these鈥�",
        "url":"guide/practices/app-design/seamlessness.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Supporting Multiple Screens",
        "titleFriendly":"",
        "summary":"Nanaging UIs for the best display on multiple screen sizes.",
        "url":"guide/practices/screens_support.html",
        "group":"",
        "keywords": [],
        "tags": ["multiplescreens"],
        "image":"images/screens_support/screens-ranges.png",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Verifying App Behavior on the Android Runtime (ART)",
        "titleFriendly":"",
        "summary":"With Android 4.4, we are beginning to roll out a new Android runtime, ART . This runtime offers a number of new features that improve performance and smoothness of the Android platform and apps. (You can find more information about ART&#39;s new features鈥�",
        "url":"guide/practices/verifying-apps-art.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"guide"
      }, 
      {
        "title":"Supporting Tablets and Handsets",
        "titleFriendly":"",
        "summary":"The Android platform runs on a variety of screen sizes and the system gracefully resizes your application&#39;s UI to fit each one. Typically, all you need to do is design your UI to be flexible and optimize some elements for different sizes by providing鈥�",
        "url":"guide/practices/tablets-and-handsets.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/fundamentals/fragments.png",
        "lang":"en",
        "type":"guide"
      }
];

var SAMPLES_RESOURCES = [
      {
        "title":"ActionBarCompat-ListPopupMenu",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to use a backward compatible PopupMenu to create a list, where each list item contains a dropdown menu. The activity in this sample extends from ActionBarActivity, which provides the functionality necessary to display a compatible鈥�",
        "url":"samples/ActionBarCompat-ListPopupMenu/index.html",
        "group":"ui",
        "keywords": ["actionbarcompat-listpopupmenu"],
        "tags": ["actionbarcompat-listpopupmenu"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"TextSwitcher",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to use the TextSwitcher view with animations. A TextSwitcher is a type of ViewSwitcher that animates text transitions on screen when setText(CharSequence) is called.鈥�",
        "url":"samples/TextSwitcher/index.html",
        "group":"ui",
        "keywords": ["textswitcher"],
        "tags": ["textswitcher"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"BasicMediaRouter",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to use the MediaRouter API to display content on a secondary display. To see this in action, run the sample and use the Media Route Action Item in the action bar to select an output device. If your device supports Miracast鈥�",
        "url":"samples/BasicMediaRouter/index.html",
        "group":"media",
        "keywords": ["basicmediarouter"],
        "tags": ["basicmediarouter"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"AdapterTransition",
        "titleFriendly":"",
        "summary":"Transition cannot be directly applied to AdapterViews. This sample demonstrates how to create a overlay layout and how to run a transition on it.鈥�",
        "url":"samples/AdapterTransition/index.html",
        "group":"ui",
        "keywords": ["adaptertransition"],
        "tags": ["adaptertransition"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"SwipeRefreshLayoutBasic",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to use SwipeRefreshLayout to add the swipe-to-refresh gesture to a View, which enables you to trigger a refresh by swiping down on the View. In this sample, the view that can be freshed is a ListView.鈥�",
        "url":"samples/SwipeRefreshLayoutBasic/index.html",
        "group":"ui",
        "keywords": ["swiperefreshlayoutbasic"],
        "tags": ["swiperefreshlayoutbasic"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"BatchStepSensor",
        "titleFriendly":"",
        "summary":"This sample demonstrates the use of the two step sensors (step detector and counter) and sensor batching. It shows how to register a SensorEventListener with and without batching and shows how these events are received. The Step Detector sensor fires 鈥�",
        "url":"samples/BatchStepSensor/index.html",
        "group":"sensors",
        "keywords": ["batchstepsensor"],
        "tags": ["batchstepsensor"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"ImmersiveMode",
        "titleFriendly":"",
        "summary":"Android 4.4 introduces a way for you to provide a more immersive screen experience in your app, by letting users show or hide the status bar and navigation bar with a swipe. This sample demonstrates how to enable toggling of this feature in a Fragment鈥�",
        "url":"samples/ImmersiveMode/index.html",
        "group":"ui",
        "keywords": ["immersivemode"],
        "tags": ["immersivemode"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"DoneBar",
        "titleFriendly":"",
        "summary":"This sample demonstrates a user interface design pattern for simple data entry from an ActionBar. The sample implements a custom Done&#47;Cancel bar to provide users with an easy way to directly save or cancel their changes. This design pattern is suitable鈥�",
        "url":"samples/DoneBar/index.html",
        "group":"ui",
        "keywords": ["donebar"],
        "tags": ["donebar"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"BasicRenderScript",
        "titleFriendly":"",
        "summary":"This sample demonstrates the basic steps for using RenderScript. In this example, the app uses RenderScript to perform graphical filter operations on a image.鈥�",
        "url":"samples/BasicRenderScript/index.html",
        "group":"renderscript",
        "keywords": ["basicrenderscript"],
        "tags": ["basicrenderscript"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"FragmentTransition",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to start a transition right after a fragment transaction.鈥�",
        "url":"samples/FragmentTransition/index.html",
        "group":"ui",
        "keywords": ["fragmenttransition"],
        "tags": ["fragmenttransition"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"ActionBarCompat-Basic",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to create a basic action bar that displays action items. The sample shows how to inflate items from a menu resource, and how to add items programatically. To reduce clutter, rarely used actions are displayed in an action bar鈥�",
        "url":"samples/ActionBarCompat-Basic/index.html",
        "group":"ui",
        "keywords": ["actionbarcompat-basic"],
        "tags": ["actionbarcompat-basic"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"SwipeRefreshListFragment",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to use SwipeRefreshLayout within ListFragment to add the swipe-to-refresh gesture to a ListView, which enables you to trigger a refresh by swiping down on that view. This functionality is provided by the SwipeRefreshListFragment鈥�",
        "url":"samples/SwipeRefreshListFragment/index.html",
        "group":"ui",
        "keywords": ["swiperefreshlistfragment"],
        "tags": ["swiperefreshlistfragment"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"BorderlessButtons",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to apply borderless buttons, bottom button bars (OK and Cancel), and dividers to establish visual structure.鈥�",
        "url":"samples/BorderlessButtons/index.html",
        "group":"ui",
        "keywords": ["borderlessbuttons"],
        "tags": ["borderlessbuttons"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"BasicImmersiveMode",
        "titleFriendly":"",
        "summary":"Android 4.4 introduces a way for you to provide a more immersive screen experience in your app, by letting users show or hide the status bar and navigation bar with a swipe. This sample demonstrates how to enable and disable this feature programmatically鈥�",
        "url":"samples/BasicImmersiveMode/index.html",
        "group":"ui",
        "keywords": ["basicimmersivemode"],
        "tags": ["basicimmersivemode"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"SwipeRefreshMultipleViews",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to use SwipeRefreshLayout to add the swipe-to-refresh gesture to a layout with multiple children, which enables you to trigger a refresh by swiping down on the view. In this sample SwipeRefreshLayout contains a scrollable 鈥�",
        "url":"samples/SwipeRefreshMultipleViews/index.html",
        "group":"ui",
        "keywords": ["swiperefreshmultipleviews"],
        "tags": ["swiperefreshmultipleviews"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"CustomTransition",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to create and use a custom Transition.鈥�",
        "url":"samples/CustomTransition/index.html",
        "group":"ui",
        "keywords": ["customtransition"],
        "tags": ["customtransition"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"SlidingTabsColors",
        "titleFriendly":"",
        "summary":"This sample shows a more advanced example of how to use a SlidingTabLayout to display a custom ViewPager title strip, with custom coloring for each tab.鈥�",
        "url":"samples/SlidingTabsColors/index.html",
        "group":"ui",
        "keywords": ["slidingtabscolors"],
        "tags": ["slidingtabscolors"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"HorizontalPaging",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to implement horizontal paging between fragments in an application that has an ActionBar, using a ViewPager widget.鈥�",
        "url":"samples/HorizontalPaging/index.html",
        "group":"ui",
        "keywords": ["horizontalpaging"],
        "tags": ["horizontalpaging"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"BasicGestureDetect",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to use the GestureDetector API to detect simple dragging and tapping gestures. To learn more about detecting basic touch gestures such as scrolling, flinging, and double-tapping, see Detecting Common Gestures .鈥�",
        "url":"samples/BasicGestureDetect/index.html",
        "group":"input",
        "keywords": ["basicgesturedetect"],
        "tags": ["basicgesturedetect"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"MediaRouter",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to create a custom media route provider.鈥�",
        "url":"samples/MediaRouter/index.html",
        "group":"media",
        "keywords": ["mediarouter"],
        "tags": ["mediarouter"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"BluetoothLeGatt",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to use the Bluetooth Low Energy Generic Attribute Profile (GATT) to transmit arbitrary data between devices. For more information about using Android&#39;s suppport for Bluetooth Low Energy, see Bluetooth Low Energy .鈥�",
        "url":"samples/BluetoothLeGatt/index.html",
        "group":"connectivity",
        "keywords": ["bluetoothlegatt"],
        "tags": ["bluetoothlegatt"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"ActionBarCompat-ShareActionProvider",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to use a context-sensitive ShareActionProvider that is backward compatible. The activity in this sample extends from ActionBarActivity, which provides the functionality necessary to display a compatible action bar on devices鈥�",
        "url":"samples/ActionBarCompat-ShareActionProvider/index.html",
        "group":"ui",
        "keywords": ["actionbarcompat-shareactionprovider"],
        "tags": ["actionbarcompat-shareactionprovider"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"CardReader",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to implement a low-level NFC card reader, for reading cards that do not contain NDEF or Android Beam data. This sample is designed to read the virtual loyalty card implemented in the CardEmulation sample. In particular, this鈥�",
        "url":"samples/CardReader/index.html",
        "group":"connectivity",
        "keywords": ["cardreader"],
        "tags": ["cardreader"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"AppRestrictions",
        "titleFriendly":"",
        "summary":"This sample demonstrates the use of the App Restriction feature, which is available on Android 4.3 and above tablet device with the multiuser feature. When launched under the primary User account, you can toggle between standard app restriction types 鈥�",
        "url":"samples/AppRestrictions/index.html",
        "group":"content",
        "keywords": ["apprestrictions"],
        "tags": ["apprestrictions"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"ActivityInstrumentation",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to use an InstrumentationTestCase to test the internal state of an Activity. To learn more about using Android&#39;s custom testing framework, see Testing Your Android Activity .鈥�",
        "url":"samples/ActivityInstrumentation/index.html",
        "group":"testing",
        "keywords": ["activityinstrumentation"],
        "tags": ["activityinstrumentation"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"BasicSyncAdapter",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to implement a sync adapter to fetch background data for an app that doesn&#39;t require a user-visible account type or two-way synchronization. The sample periodically downloads the feed from the Android Developers Blog and鈥�",
        "url":"samples/BasicSyncAdapter/index.html",
        "group":"connectivity",
        "keywords": ["basicsyncadapter"],
        "tags": ["basicsyncadapter"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"BasicAccessibility",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to create applications that are accessible for users with visual or physical disabilities. To learn how to make the most of the accessibility features built into the Android framework, see Implementing Accessibility .鈥�",
        "url":"samples/BasicAccessibility/index.html",
        "group":"ui",
        "keywords": ["basicaccessibility"],
        "tags": ["basicaccessibility"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"SlidingTabsBasic",
        "titleFriendly":"",
        "summary":"This sample shows how to use SlidingTabLayout to display a custom ViewPager title strip that gives continuous feedback to the user when scrolling.鈥�",
        "url":"samples/SlidingTabsBasic/index.html",
        "group":"ui",
        "keywords": ["slidingtabsbasic"],
        "tags": ["slidingtabsbasic"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"NetworkConnect",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to connect to the network and fetch raw HTML. The sample uses AsyncTask to perform the fetch on a background thread.鈥�",
        "url":"samples/NetworkConnect/index.html",
        "group":"connectivity",
        "keywords": ["networkconnect"],
        "tags": ["networkconnect"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"BasicTransition",
        "titleFriendly":"",
        "summary":"This sample demonstrates the basic use of the transition framework introduced in KitKat. Select each of the radio buttons to switch between the Scenes.鈥�",
        "url":"samples/BasicTransition/index.html",
        "group":"ui",
        "keywords": ["basictransition"],
        "tags": ["basictransition"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"BasicMultitouch",
        "titleFriendly":"",
        "summary":"This samples demonstrates how to use the MotionEvent API to keep track of individual touches across multiple touch events. To see this in action, run the sample and touch the screen with multiple fingers to show that the pointer id (also represented by鈥�",
        "url":"samples/BasicMultitouch/index.html",
        "group":"input",
        "keywords": ["basicmultitouch"],
        "tags": ["basicmultitouch"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"StorageClient",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to use the ACTION_OPEN_DOCUMENT intent to let users choose a file via the system&#39;s file browser. This intent allows a client application to access a list of document providers on the device, and choose a file from any 鈥�",
        "url":"samples/StorageClient/index.html",
        "group":"content",
        "keywords": ["storageclient"],
        "tags": ["storageclient"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"MediaRecorder",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to use the MediaRecorder API to record video from a camera or camcorder, and display a preview of the recording.鈥�",
        "url":"samples/MediaRecorder/index.html",
        "group":"media",
        "keywords": ["mediarecorder"],
        "tags": ["mediarecorder"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"BasicAndroidKeyStore",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to use a {java.security.KeyStore} to safely create and store encryption keys that only your application can access. You can also sign data using those keys. To see this in action, run the sample application and click:鈥�",
        "url":"samples/BasicAndroidKeyStore/index.html",
        "group":"security",
        "keywords": ["basicandroidkeystore"],
        "tags": ["basicandroidkeystore"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"TextLinkify",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to add clickable links to a TextView, by using these techniques:鈥�",
        "url":"samples/TextLinkify/index.html",
        "group":"views",
        "keywords": ["textlinkify"],
        "tags": ["textlinkify"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"BasicNotifications",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to display events in the system&#39;s notification bar. The NotificationCompat API is used for compatibility with devices running Android 2.2 or higher.鈥�",
        "url":"samples/BasicNotifications/index.html",
        "group":"ui",
        "keywords": ["basicnotifications"],
        "tags": ["basicnotifications"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"DisplayingBitmaps",
        "titleFriendly":"",
        "summary":"This is a sample application for the Displaying Bitmaps Efficiently Android Training class. The sample demonstrates:鈥�",
        "url":"samples/DisplayingBitmaps/index.html",
        "group":"ui",
        "keywords": ["displayingbitmaps"],
        "tags": ["displayingbitmaps"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"CustomChoiceList",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to implement a custom single-choice or multi-choice ListView user interface.鈥�",
        "url":"samples/CustomChoiceList/index.html",
        "group":"ui",
        "keywords": ["customchoicelist"],
        "tags": ["customchoicelist"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"BasicMediaDecoder",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to decode a video using the MediaCodec API and render in an activity.鈥�",
        "url":"samples/BasicMediaDecoder/index.html",
        "group":"media",
        "keywords": ["basicmediadecoder"],
        "tags": ["basicmediadecoder"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"RenderScriptIntrinsic",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to use RenderScript intrinsics . The app creates several RenderScript intrinsics and shows a filtering result with various parameters. The sample also shows how to extend RadioButton with StateListDrawable.鈥�",
        "url":"samples/RenderScriptIntrinsic/index.html",
        "group":"renderscript",
        "keywords": ["renderscriptintrinsic"],
        "tags": ["renderscriptintrinsic"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"BasicContactables",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to use the Data table to search for contacts. The sample sends consolidated query strings to the Data table to match both contact names and phone numbers. This approach helps to reduce the number of queries needed when searching鈥�",
        "url":"samples/BasicContactables/index.html",
        "group":"content",
        "keywords": ["basiccontactables"],
        "tags": ["basiccontactables"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"RepeatingAlarm",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to implement a repeating alarm using an AlarmManager.鈥�",
        "url":"samples/RepeatingAlarm/index.html",
        "group":"background",
        "keywords": ["repeatingalarm"],
        "tags": ["repeatingalarm"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"StorageProvider",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to use the DocumentsProvider API to manage documents and expose them to the Android system for sharing.鈥�",
        "url":"samples/StorageProvider/index.html",
        "group":"content",
        "keywords": ["storage access framework","storage","documents"],
        "tags": ["storageaccessframework","storage","documents"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"CustomNotifications",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to implement expanded notifications that display custom views.鈥�",
        "url":"samples/CustomNotifications/index.html",
        "group":"ui",
        "keywords": ["customnotifications"],
        "tags": ["customnotifications"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"BasicNetworking",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to use the ConnectivityManager to determine if the device has an active network connection, and if so, retrieve the connection type.鈥�",
        "url":"samples/BasicNetworking/index.html",
        "group":"connectivity",
        "keywords": ["basicnetworking"],
        "tags": ["basicnetworking"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"ActionBarCompat-Styled",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to use a backward compatible ActionBar with a customized theme. The activity in this sample extends from ActionBarActivity, which provides the functionality necessary to display a compatible action bar on devices running Android鈥�",
        "url":"samples/ActionBarCompat-Styled/index.html",
        "group":"ui",
        "keywords": ["actionbarcompat-styled"],
        "tags": ["actionbarcompat-styled"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"CardEmulation",
        "titleFriendly":"",
        "summary":"This sample demonstrates how to emulate an NFC card, using the Host Card Emulation feature added in Android 4.4. This sample makes the device appear as a loyalty card whenever the screen is on and the user taps their device on an appropriately configured鈥�",
        "url":"samples/CardEmulation/index.html",
        "group":"connectivity",
        "keywords": ["cardemulation"],
        "tags": ["cardemulation"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"AdvancedImmersiveMode",
        "titleFriendly":"",
        "summary":"Android 4.4 introduces a way for you to provide a more immersive screen experience in your app by letting users show or hide the status bar and the navigation bar with a swipe. This sample demonstrates how this feature interacts with some of the other鈥�",
        "url":"samples/AdvancedImmersiveMode/index.html",
        "group":"ui",
        "keywords": ["advancedimmersivemode"],
        "tags": ["advancedimmersivemode"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"Input",
        "titleFriendly":"",
        "summary":"",
        "url":"samples/input.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"Media",
        "titleFriendly":"",
        "summary":"",
        "url":"samples/media.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"Background",
        "titleFriendly":"",
        "summary":"",
        "url":"samples/background.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"UI",
        "titleFriendly":"",
        "summary":"",
        "url":"samples/ui.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"Sensors",
        "titleFriendly":"",
        "summary":"",
        "url":"samples/sensors.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"Content",
        "titleFriendly":"",
        "summary":"",
        "url":"samples/content.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"Renderscript",
        "titleFriendly":"",
        "summary":"",
        "url":"samples/renderscript.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"Security",
        "titleFriendly":"",
        "summary":"",
        "url":"samples/security.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"Connectivity",
        "titleFriendly":"",
        "summary":"",
        "url":"samples/connectivity.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"Samples",
        "titleFriendly":"",
        "summary":"Welcome to code samples for Android developers. Here you can browse sample code and learn how to build different components for your applications. Use the categories on the left to browse the available samples. Each sample is a fully functioning Android鈥�",
        "url":"samples/index.html",
        "group":"",
        "keywords": ["samples","examples","code"],
        "tags": ["samples","examples","code"],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"Testing",
        "titleFriendly":"",
        "summary":"",
        "url":"samples/testing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"samples"
      }, 
      {
        "title":"Views",
        "titleFriendly":"",
        "summary":"",
        "url":"samples/views.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"samples"
      }
];

var TOOLS_RESOURCES = [
      {
        "title":"Introduction",
        "titleFriendly":"",
        "summary":"To develop apps for Android devices, you use a set of tools that are included in the Android SDK. Once you&#39;ve downloaded and installed the SDK, you can access these tools right from your Eclipse IDE, through the ADT plugin, or from the command line鈥�",
        "url":"tools/workflow/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/developing/developing_overview.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Service Testing",
        "titleFriendly":"",
        "summary":"Android provides a testing framework for Service objects that can run them in isolation and provides mock objects. The test case class for Service objects is ServiceTestCase. Since the Service class assumes that it is separate from its clients, you can鈥�",
        "url":"tools/testing/service_testing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"UI Testing",
        "titleFriendly":"",
        "summary":"In addition to unit testing the individual components that make up your Android application (such as activities, services, and content providers), it is also important that you test the behavior of your application鈥檚 user interface (UI) when it is running鈥�",
        "url":"tools/testing/testing_ui.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/testing/UIAutomatorViewer.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Testing from Eclipse with ADT",
        "titleFriendly":"",
        "summary":"This topic explains how create and run tests of Android applications in Eclipse with ADT. Before you read this topic, you should read about how to create an Android application with the basic processes for creating and running applications with ADT, as鈥�",
        "url":"tools/testing/testing_eclipse.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/testing/eclipse_test_results.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Content Provider Testing",
        "titleFriendly":"",
        "summary":"Content providers, which store and retrieve data and make it accessible across applications, are a key part of the Android API. As an application developer you&#39;re allowed to provide your own public providers for use by other applications. If you do鈥�",
        "url":"tools/testing/contentprovider_testing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Activity Testing",
        "titleFriendly":"",
        "summary":"Activity testing is particularly dependent on the Android instrumentation framework. Unlike other components, activities have a complex lifecycle based on callback methods; these can&#39;t be invoked directly except by instrumentation. Also, the only 鈥�",
        "url":"tools/testing/activity_testing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Testing Fundamentals",
        "titleFriendly":"",
        "summary":"The Android testing framework, an integral part of the development environment, provides an architecture and powerful tools that help you test every aspect of your application at every level from unit to framework. The testing framework has these key 鈥�",
        "url":"tools/testing/testing_android.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/testing/test_framework.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Activity Testing Tutorial",
        "titleFriendly":"",
        "summary":"Android includes powerful tools for testing applications. The tools extend JUnit with additional features, provide convenience classes for mock Android system objects, and use instrumentation to give you control over your main application while you are鈥�",
        "url":"tools/testing/activity_test.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/testing/eclipse_new_android_project_complete_callouts.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Accessibility Testing Checklist",
        "titleFriendly":"",
        "summary":"Testing is an important part of making your application accessible to users with varying abilities. Following design and development guidelines for accessibility are important steps toward that goal, but testing for accessibility can uncover problems 鈥�",
        "url":"tools/testing/testing_accessibility.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"What To Test",
        "titleFriendly":"",
        "summary":"As you develop Android applications, knowing what to test is as important as knowing how to test. This document lists some most common Android-related situations that you should consider when you test, even at the unit test level. This is not an exhaustive鈥�",
        "url":"tools/testing/what_to_test.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Testing",
        "titleFriendly":"",
        "summary":"The Android framework includes an integrated testing framework that helps you test all aspects of your application and the SDK tools include tools for setting up and running test applications. Whether you are working in Eclipse with ADT or working from鈥�",
        "url":"tools/testing/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Testing from Other IDEs",
        "titleFriendly":"",
        "summary":"This document describes how to create and run tests directly from the command line. You can use the techniques described here if you are developing in an IDE other than Eclipse or if you prefer to work from the command line. This document assumes that鈥�",
        "url":"tools/testing/testing_otheride.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Support Library Setup",
        "titleFriendly":"",
        "summary":"How you setup the Android Support Libraries in your development project depends on what features you want to use and what range of Android platform versions you want to support with your application. This document guides you through downloading the Support鈥�",
        "url":"tools/support-library/setup.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/tools/sdk-manager-support-libs.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Support Library Features",
        "titleFriendly":"",
        "summary":"The Android Support Library package contains several libraries that can be included in your application. Each of these libraries supports a specific range of Android platform versions and set of features. This guide explains the important features and鈥�",
        "url":"tools/support-library/features.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Support Library",
        "titleFriendly":"",
        "summary":"The Android Support Library package is a set of code libraries that provide backward-compatible versions of Android framework APIs as well as features that are only available through the library APIs. Each Support Library is backward-compatible to a specific鈥�",
        "url":"tools/support-library/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Managing Projects from Eclipse with ADT",
        "titleFriendly":"",
        "summary":"Eclipse and the ADT plugin provide GUIs and wizards to create all three types of projects (Android project, Library project, and Test project): The ADT plugin provides a New Project Wizard that you can use to quickly create a new Android project (or a鈥�",
        "url":"tools/projects/projects-eclipse.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/tools/eclipse-new.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Using Code Templates",
        "titleFriendly":"",
        "summary":"The SDK tools provide templates for quickly creating Android application projects with the basic structure or for adding components to your existing projects. The code templates provided by the Android SDK follow the Android design and development guidelines鈥�",
        "url":"tools/projects/templates.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/code_templates/ba-no-navigation.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Managing Projects from the Command Line",
        "titleFriendly":"",
        "summary":"The android tool provides you with commands to create all three types of projects. An Android project contains all of the files and resources that are needed to build a project into an .apk file for installation. To create an Android project, you must鈥�",
        "url":"tools/projects/projects-cmdline.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Managing Projects",
        "titleFriendly":"",
        "summary":"Projects act as containers for storing things such as code and resource files. The SDK tools expect your projects to follow a specific structure so it can compile and package your application correctly, so it is highly recommended that you create them鈥�",
        "url":"tools/projects/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"logcat",
        "titleFriendly":"",
        "summary":"The Android logging system provides a mechanism for collecting and viewing system debug output. Logs from various applications and portions of the system are collected in a series of circular buffers, which then can be viewed and filtered by the logcat鈥�",
        "url":"tools/help/logcat.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Hierarchy Viewer",
        "titleFriendly":"",
        "summary":"Hierarchy Viewer allows you to debug and optimize your user interface. It provides a visual representation of the layout&#39;s View hierarchy (the Layout View) and a magnified inspector of the display (the Pixel Perfect View). To start Hierarchy Viewer鈥�",
        "url":"tools/help/hierarchy-viewer.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"AVD Manager",
        "titleFriendly":"",
        "summary":"The AVD Manager provides a graphical user interface in which you can create and manage Android Virtual Devices (AVDs), which are required by the Android Emulator . You can launch the AVD Manager in one of the following ways: For more information, see 鈥�",
        "url":"tools/help/avd-manager.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Android Developer Tools",
        "titleFriendly":"",
        "summary":"ADT (Android Developer Tools) is a plugin for Eclipse that provides a suite of tools that are integrated with the Eclipse IDE. It offers you access to many features that help you develop Android applications quickly. ADT provides GUI access to many of鈥�",
        "url":"tools/help/adt.html",
        "group":"",
        "keywords": ["adt"],
        "tags": ["adt"],
        "image":"images/layout_editor.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"sqlite3",
        "titleFriendly":"",
        "summary":"From a remote shell to your device or from your host machine, you can use the sqlite3 command-line program to manage SQLite databases created by Android applications. The sqlite3 tool includes many useful commands, such as .dump to print out the contents鈥�",
        "url":"tools/help/sqlite3.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"android",
        "titleFriendly":"",
        "summary":"android is an important development tool that lets you:鈥�",
        "url":"tools/help/android.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"layoutopt",
        "titleFriendly":"",
        "summary":"layoutopt is a command-line tool that helps you optimize the layouts and layout hierarchies of your applications. This document is a reference to the available command line options. For more information and sample output of the tool, see Optimizing layouts鈥�",
        "url":"tools/help/layoutopt.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"MonkeyDevice",
        "titleFriendly":"",
        "summary":"A monkeyrunner class that represents a device or emulator accessible by the workstation running monkeyrunner . This class is used to control an Android device or emulator. The methods send UI events, retrieve information, install and remove applications鈥�",
        "url":"tools/help/MonkeyDevice.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"bmgr",
        "titleFriendly":"",
        "summary":"bmgr is a shell tool you can use to interact with the Backup Manager on Android devices supporting API Level 8 or greater. It provides commands to induce backup and restore operations so that you don&#39;t need to repeatedly wipe data or take similar 鈥�",
        "url":"tools/help/bmgr.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"monkeyrunner",
        "titleFriendly":"",
        "summary":"The monkeyrunner tool provides an API for writing programs that control an Android device or emulator from outside of Android code. With monkeyrunner, you can write a Python program that installs an Android application or test package, runs it, sends 鈥�",
        "url":"tools/help/monkeyrunner_concepts.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Tracer for OpenGL ES",
        "titleFriendly":"",
        "summary":"Tracer is a tool for analyzing OpenGL for Embedded Systems (ES) code in your Android application. The tool allows you to capture OpenGL ES commands and frame by frame images to help you understand how your graphics commands are being executed. Tracer 鈥�",
        "url":"tools/help/gltracer.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/gltracer/dialog-trace.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Android Debug Bridge",
        "titleFriendly":"",
        "summary":"Android Debug Bridge (adb) is a versatile command line tool that lets you communicate with an emulator instance or connected Android-powered device. It is a client-server program that includes three components: You can find the adb tool in am) and package鈥�",
        "url":"tools/help/adb.html",
        "group":"",
        "keywords": ["adb"],
        "tags": ["adb"],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"ProGuard",
        "titleFriendly":"",
        "summary":"The ProGuard tool shrinks, optimizes, and obfuscates your code by removing unused code and renaming classes, fields, and methods with semantically obscure names. The result is a smaller sized .apk file that is more difficult to reverse engineer. Because鈥�",
        "url":"tools/help/proguard.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"MonkeyRunner",
        "titleFriendly":"",
        "summary":"A monkeyrunner class that contains static utility methods. Displays an alert dialog to the process running the current program. The dialog is modal, so the program pauses until the user clicks the dialog&#39;s button. Displays a dialog with a list of 鈥�",
        "url":"tools/help/MonkeyRunner.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Traceview",
        "titleFriendly":"",
        "summary":"Traceview is a graphical viewer for execution logs saved by your application. Traceview can help you debug your application and profile its performance. To start Traceview, enter the following command from the SDK tools&#47; directory: For more information鈥�",
        "url":"tools/help/traceview.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"lint",
        "titleFriendly":"",
        "summary":"The Android lint tool is a static code analysis tool that checks your Android project source files for potential bugs and optimization improvements for correctness, security, performance, usability, accessibility, and internationalization. For more information鈥�",
        "url":"tools/help/lint.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"HPROF Converter",
        "titleFriendly":"",
        "summary":"The hprof-conv tool converts the HPROF file that is generated by the Android SDK tools to a standard format so you can view the file in a profiling tool of your choice. You can use &quot;-&quot; for &lt;infile&gt; or &lt;outfile&gt; to specify stdin or鈥�",
        "url":"tools/help/hprof-conv.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"mksdcard",
        "titleFriendly":"",
        "summary":"The mksdcard tool lets you quickly create a FAT32 disk image that you can load in the emulator, to simulate the presence of an SD card in the device. Because you can specify an SD card while creating an AVD in the AVD Manager, you usually use that feature鈥�",
        "url":"tools/help/mksdcard.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"MonkeyImage",
        "titleFriendly":"",
        "summary":"A monkeyrunner class to hold an image of the device or emulator&#39;s screen. The image is copied from the screen buffer during a screenshot. This object&#39;s methods allow you to convert the image into various storage formats, write the image to a file鈥�",
        "url":"tools/help/MonkeyImage.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"IAutomationSupport",
        "titleFriendly":"",
        "summary":"Provides auxiliary support for running test cases Allows the running test cases to send out interim status鈥�",
        "url":"tools/help/uiautomator/IAutomationSupport.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"UiWatcher",
        "titleFriendly":"",
        "summary":"Represents a conditional watcher on the target device. To learn how to register a conditional watcher, see UiDevice.registerWatcher() . The testing framework calls this handler method automatically when the framework is unable to find a match using the鈥�",
        "url":"tools/help/uiautomator/UiWatcher.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"UiObject",
        "titleFriendly":"",
        "summary":"A UiObject is a representation of a view. It is not in any way directly bound to a view as an object reference. A UiObject contains information to help it locate a matching view at runtime based on the UiSelector properties specified in its constructor鈥�",
        "url":"tools/help/uiautomator/UiObject.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"UiObjectNotFoundException",
        "titleFriendly":"",
        "summary":"Generated in test runs when a UiSelector selector could not be matched to any UI element displayed.鈥�",
        "url":"tools/help/uiautomator/UiObjectNotFoundException.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"UiScrollable",
        "titleFriendly":"",
        "summary":"A UiCollection that supports searching for items in scrollable layout elements. This class can be used with horizontally or vertically scrollable controls. Constructor. Performs a backwards fling action with the default number of fling steps (5). If the鈥�",
        "url":"tools/help/uiautomator/UiScrollable.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"UiDevice",
        "titleFriendly":"",
        "summary":"Provides access to state information about the device. You can also use this class to simulate user actions on the device, such as pressing the d-pad or pressing the Home and Menu buttons. Clears the text from the last UI traversal event. See getLastTraversedText鈥�",
        "url":"tools/help/uiautomator/UiDevice.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"UiCollection",
        "titleFriendly":"",
        "summary":"Used to enumerate a container&#39;s user interface (UI) elements for the purpose of counting, or targeting a sub elements by a child&#39;s text or description. Searches for child UI element within the constraints of this UiSelector selector. It looks 鈥�",
        "url":"tools/help/uiautomator/UiCollection.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"UiSelector",
        "titleFriendly":"",
        "summary":"Specifies the elements in the layout hierarchy for tests to target, filtered by properties such as text value, content-description, class name, and state information. You can also target an element by its location in a layout hierarchy. Set the search鈥�",
        "url":"tools/help/uiautomator/UiSelector.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Configurator",
        "titleFriendly":"",
        "summary":"Allows you to set key parameters for running uiautomator tests. The new settings take effect immediately and can be changed any time during a test run. To modify parameters using Configurator , first obtain an instance by calling getInstance() . As a 鈥�",
        "url":"tools/help/uiautomator/Configurator.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"uiautomator",
        "titleFriendly":"",
        "summary":"The uiautomator testing framework lets you test your user interface (UI) efficiently by creating automated functional UI testcases that can be run against your app on one or more devices. For more information on testing with the uiautomator framework,鈥�",
        "url":"tools/help/uiautomator/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"UiAutomatorTestCase",
        "titleFriendly":"",
        "summary":"UI automation tests should extend this class. This class provides access to the following: Provides support for running tests to report interim status Get command line parameters. On the command line when passing -e key value pairs, the Bundle will have鈥�",
        "url":"tools/help/uiautomator/UiAutomatorTestCase.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"zipalign",
        "titleFriendly":"",
        "summary":"zipalign is an archive alignment tool that provides important optimization to Android application (.apk) files. The purpose is to ensure that all uncompressed data starts with a particular alignment relative to the start of the file. Specifically, it 鈥�",
        "url":"tools/help/zipalign.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"UI&#47;Application Exerciser Monkey",
        "titleFriendly":"",
        "summary":"The Monkey is a program that runs on your emulator or device and generates pseudo-random streams of user events such as clicks, touches, or gestures, as well as a number of system-level events. You can use the Monkey to stress-test applications that you鈥�",
        "url":"tools/help/monkey.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Draw 9-patch",
        "titleFriendly":"",
        "summary":"The Draw 9-patch tool allows you to easily create a NinePatch graphic using a WYSIWYG editor. For an introduction to Nine-patch graphics and how they work, please read the section about Nine-patch in the 2D Graphics document. Here&#39;s a quick guide 鈥�",
        "url":"tools/help/draw9patch.html",
        "group":"",
        "keywords": ["ninepatch"],
        "tags": ["ninepatch"],
        "image":"images/draw9patch-norm.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"dmtracedump",
        "titleFriendly":"",
        "summary":"dmtracedump is a tool that gives you an alternate way of generating graphical call-stack diagrams from trace log files (instead of using Traceview). This document is a reference to the available command line options. For more information on generating鈥�",
        "url":"tools/help/dmtracedump.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"etc1tool",
        "titleFriendly":"",
        "summary":"etc1tool is a command line utility that lets you encode PNG images to the ETC1 compression standard and decode ETC1 compressed images back to PNG. The usage for etc1tool is:鈥�",
        "url":"tools/help/etc1tool.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Device Monitor",
        "titleFriendly":"",
        "summary":"Android Device Monitor is a stand-alone tool that provides a graphical user interface for several Android application debugging and analysis tools. The Monitor tool does not require installation of an integrated development environment, such as Eclipse鈥�",
        "url":"tools/help/monitor.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Tools Help",
        "titleFriendly":"",
        "summary":"The Android SDK includes a variety of tools that help you develop mobile applications for the Android platform. The tools are classified into two groups: SDK tools and platform tools. SDK tools are platform independent and are required no matter which鈥�",
        "url":"tools/help/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Android Emulator",
        "titleFriendly":"",
        "summary":"The Android SDK includes a mobile device emulator 鈥� a virtual mobile device that runs on your computer. The emulator lets you develop and test Android applications without using a physical device. This document is a reference to the available command 鈥�",
        "url":"tools/help/emulator.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"SDK Manager",
        "titleFriendly":"",
        "summary":"The Android SDK separates tools, platforms, and other components into packages you can download using the SDK Manager. For example, when the SDK Tools are updated or a new version of the Android platform is released, you can use the SDK Manager to quickly鈥�",
        "url":"tools/help/sdk-manager.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/sdk_manager_packages.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Systrace",
        "titleFriendly":"",
        "summary":"The Systrace tool helps analyze the performance of your application by capturing and displaying execution times of your applications processes and other Android system processes. The tool combines data from the Android kernel such as the CPU scheduler鈥�",
        "url":"tools/help/systrace.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/systrace/systrace-button.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"JOBB",
        "titleFriendly":"",
        "summary":"The jobb tool allows you to build encrypted and unencrypted APK expansion files in Opaque Binary Blob (OBB) format. You can download and mount these expansion files in your application using StorageManager on devices with Android 2.3 (API Level 9) or 鈥�",
        "url":"tools/help/jobb.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Using DDMS",
        "titleFriendly":"",
        "summary":"Android ships with a debugging tool called the Dalvik Debug Monitor Server (DDMS), which provides port-forwarding services, screen capture on the device, thread and heap information on the device, logcat, process, and radio state information, incoming鈥�",
        "url":"tools/debugging/ddms.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/debug-ddms.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Debugging from Other IDEs",
        "titleFriendly":"",
        "summary":"If you are not using Eclipse to develop, you can still take advantage of all the tools that the Android SDK provides for debugging. A basic debugging environment consists of: You need to obtain a JDWP-compliant Java debugger to properly debug your application鈥�",
        "url":"tools/debugging/debugging-projects-cmdline.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Investigating Your RAM Usage",
        "titleFriendly":"",
        "summary":"Because Android is designed for mobile devices, you should always be careful about how much random-access memory (RAM) your app uses. Although Android鈥檚 Dalvik virtual machine performs routine garbage collection, this doesn鈥檛 mean you can ignore when 鈥�",
        "url":"tools/debugging/debugging-memory.html",
        "group":"",
        "keywords": ["memory","outofmemoryerror"],
        "tags": ["memory","outofmemoryerror"],
        "image":"images/tools/monitor-vmheap@2x.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Improving Your Code with lint",
        "titleFriendly":"",
        "summary":"In addition to testing that your Android application meets its functional requirements, it&#39;s important to ensure that your code has no structural problems. Poorly structured code can impact the reliability and efficiency of your Android apps and make鈥�",
        "url":"tools/debugging/improving-w-lint.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/tools/lint.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Reading and Writing Logs",
        "titleFriendly":"",
        "summary":"The Android logging system provides a mechanism for collecting and viewing system debug output. Logcat dumps a log of system messages, which include things such as stack traces when the emulator throws an error and messages that you have written from 鈥�",
        "url":"tools/debugging/debugging-log.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Profiling with Traceview and dmtracedump",
        "titleFriendly":"",
        "summary":"Traceview is a graphical viewer for execution logs that you create by using the Debug class to log tracing information in your code. Traceview can help you debug your application and profile its performance. When you have a trace log file (generated by鈥�",
        "url":"tools/debugging/debugging-tracing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/traceview_timeline.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Optimizing Your UI",
        "titleFriendly":"",
        "summary":"Sometimes your application&#39;s layout can slow down your application. To help debug issues in your layout, the Android SDK provides the Hierarchy Viewer and lint tools. The Hierarchy Viewer application allows you to debug and optimize your user interface鈥�",
        "url":"tools/debugging/debugging-ui.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/developing/hv_device_window.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Using the Dev Tools App",
        "titleFriendly":"",
        "summary":"The Dev Tools application is installed by default on all system images included with the SDK, so you can use it with the Android Emulator. With the Dev Tools application, you can enable a number of settings on your device that will make it easier to test鈥�",
        "url":"tools/debugging/debugging-devtools.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Debugging from Eclipse with ADT",
        "titleFriendly":"",
        "summary":"If you are developing in Eclipse with the ADT plugin, you can use the built-in Java Debugger, along with DDMS, to debug your applications. To access the debugger and DDMS, Eclipse displays the debugger and DDMS features as perspectives, which are customized鈥�",
        "url":"tools/debugging/debugging-projects.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Debugging",
        "titleFriendly":"",
        "summary":"The Android SDK provides most of the tools that you need to debug your applications. You need a JDWP-compliant debugger if you want to be able to do things such as step through code, view variable values, and pause execution of an application. If you 鈥�",
        "url":"tools/debugging/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/debugging.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Analyzing Display and Performance",
        "titleFriendly":"",
        "summary":"After building features, eliminating bugs, and cleaning up your code, you should spend some time looking at the performance of your application. The speed and smoothness with which your application draws pixels and performs operations has an significant鈥�",
        "url":"tools/debugging/systrace.html",
        "group":"",
        "keywords": ["systrace","speed"],
        "tags": ["systrace","speed"],
        "image":"images/systrace/report.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Accessory Development Kit 2012 Guide",
        "titleFriendly":"",
        "summary":"The Android Accessory Development Kit (ADK) for 2012 is the latest reference implementation of an Android Open Accessory device, designed to help Android hardware accessory builders and software developers create accessories for Android. The ADK 2012 鈥�",
        "url":"tools/adk/adk2.html",
        "group":"",
        "keywords": ["adk"],
        "tags": ["adk"],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Accessory Development Kit 2011 Guide",
        "titleFriendly":"",
        "summary":"The Android Open Accessory Development Kit (ADK) is a reference implementation of an Android Open Accessory, based on the Arduino open source electronics prototyping platform . The accessory&#39;s hardware design files, code that implements the accessory鈥�",
        "url":"tools/adk/adk.html",
        "group":"",
        "keywords": ["adk"],
        "tags": ["adk"],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Accessory Development Kit",
        "titleFriendly":"",
        "summary":"The Accessory Development Kit (ADK) is a reference implementation for hardware manufacturers and hobbyists to use as a starting point for building accessories for Android. Each ADK release is provided with source code and hardware specifications to make鈥�",
        "url":"tools/adk/index.html",
        "group":"",
        "keywords": ["adk"],
        "tags": ["adk"],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Build Tools",
        "titleFriendly":"",
        "summary":"Build Tools is a component of the Android SDK required for building Android application code. The latest version of these tools is included in the SDK starter package and installed in the &lt;sdk&gt;&#47;build-tools&#47; directory. You should always keep鈥�",
        "url":"tools/revisions/build-tools.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Platforms",
        "titleFriendly":"",
        "summary":"This document provides information about Android platform releases. In order to compile your application against a particular platform release, you must download and install the SDK Platform for that release. If you want to test your application on an鈥�",
        "url":"tools/revisions/platforms.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Revisions",
        "titleFriendly":"",
        "summary":"The Android SDK is composed of individual packages that may undergo an update at their own schedule, so some have their own set of release notes. You can find information about some of the packages in this section, including the core SDK Tools and the鈥�",
        "url":"tools/revisions/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Building and Running from the Command Line",
        "titleFriendly":"",
        "summary":"There are two ways to build your application using the Ant build script: one for testing&#47;debugging your application 鈥� debug mode 鈥� and one for building your final package for release 鈥� release mode . Regardless of which way you build your application鈥�",
        "url":"tools/building/building-cmdline.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Building and Running from Eclipse with ADT",
        "titleFriendly":"",
        "summary":"Eclipse and ADT provide an environment where most of the details of the build process are hidden from you. By default, the build process constantly runs in the background as you make changes to your project. When Eclipse automatically builds your application鈥�",
        "url":"tools/building/building-eclipse.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Building and Running",
        "titleFriendly":"",
        "summary":"During the build process, your Android projects are compiled and packaged into an .apk file, the container for your application binary. It contains all of the information necessary to run your application on a device or emulator, such as compiled .dex鈥�",
        "url":"tools/building/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/build-simplified.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Versioning Your Applications",
        "titleFriendly":"",
        "summary":"Versioning is a critical component of your application upgrade and maintenance strategy. Versioning is important because: The Android system does not use app version information to enforce restrictions on upgrades, downgrades, or compatibility of third-party鈥�",
        "url":"tools/publishing/versioning.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Preparing for Release",
        "titleFriendly":"",
        "summary":"Before you distribute your Android application to users you need to prepare it for release. The preparation process is a required development task for all Android applications and is the first step in the publishing process (see figure 1). When you prepare鈥�",
        "url":"tools/publishing/preparing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/publishing/publishing_overview_prep.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Publishing Overview",
        "titleFriendly":"",
        "summary":"Publishing is the general process that makes your Android applications available to users. When you publish an Android application you perform two main tasks: During the preparation step you build a release version of your application, which users can鈥�",
        "url":"tools/publishing/publishing_overview.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/publishing/publishing_overview.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Signing Your Applications",
        "titleFriendly":"",
        "summary":"The Android system requires that all installed applications be digitally signed with a certificate whose private key is held by the application&#39;s developer. The Android system uses the certificate as a means of identifying the author of an application鈥�",
        "url":"tools/publishing/app-signing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Managing AVDs from the Command Line",
        "titleFriendly":"",
        "summary":"The android tool lets you manage AVDs on the command line. For a complete reference of the command line options that you can use, see the reference for the android tool. To generate a list of system image targets, use this command: The android tool scans鈥�",
        "url":"tools/devices/managing-avds-cmdline.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Managing AVDs with AVD Manager",
        "titleFriendly":"",
        "summary":"The AVD Manager is an easy to use user interface to manage your AVD (Android Virtual Device) configurations. An AVD is a device configuration for the Android emulator that allows you to model different configurations of Android-powered devices. When you鈥�",
        "url":"tools/devices/managing-avds.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/avd-manager.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Managing Virtual Devices",
        "titleFriendly":"",
        "summary":"An Android Virtual Device (AVD) is an emulator configuration that lets you model an actual device by defining hardware and software options to be emulated by the Android Emulator. The easiest way to create an AVD is to use the graphical AVD Manager , 鈥�",
        "url":"tools/devices/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Using the Emulator",
        "titleFriendly":"",
        "summary":"The Android SDK includes a virtual mobile device emulator that runs on your computer. The emulator lets you prototype, develop and test Android applications without using a physical device. The Android emulator mimics all of the hardware and software 鈥�",
        "url":"tools/devices/emulator.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/emulator-wvga800l.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"OEM USB Drivers",
        "titleFriendly":"",
        "summary":"If you are developing on Windows and would like to connect an Android-powered device to test your applications, then you need to install the appropriate USB driver. This document provides links to the web sites for several original equipment manufacturers鈥�",
        "url":"tools/extras/oem-usb.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Extras",
        "titleFriendly":"",
        "summary":"SDK extras add functionality to your development environment. You can download all of the SDK extras into your development environment using the SDK Manager.鈥�",
        "url":"tools/extras/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Using Hardware Devices",
        "titleFriendly":"",
        "summary":"When building a mobile application, it&#39;s important that you always test your application on a real device before releasing it to users. This page describes how to set up your development environment and Android-powered device for testing and debugging鈥�",
        "url":"tools/device.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/tools/dev-options-inmilk.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Android NDK",
        "titleFriendly":"",
        "summary":"Before installing the Android NDK, you must agree to the following terms and conditions. I have read and agree with the above terms and conditions The NDK is a toolset that allows you to implement parts of your app using native-code languages such as 鈥�",
        "url":"tools/sdk/ndk/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"ADT Plugin",
        "titleFriendly":"",
        "summary":"Android Development Tools (ADT) is a plugin for the Eclipse IDE that is designed to give you a powerful, integrated environment in which to build Android applications. ADT extends the capabilities of Eclipse to let you quickly set up new Android projects鈥�",
        "url":"tools/sdk/eclipse-adt.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Developer Tools",
        "titleFriendly":"",
        "summary":"The Android Developer Tools (ADT) plugin for Eclipse provides a professional-grade development environment for building Android apps. It&#39;s a full Java IDE with advanced features to help you build, test, debug, and package your Android apps. Free, 鈥�",
        "url":"tools/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/tools-home.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Introduction",
        "titleFriendly":"",
        "summary":"Developing applications for Android devices is facilitated by a group of tools that are provided with the SDK. You can access these tools through an Eclipse plugin called ADT (Android Development Tools) or from the command line. Developing with Eclipse鈥�",
        "url":"tools/workflow.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/developing/developing_overview.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Android Studio Tips and Tricks",
        "titleFriendly":"",
        "summary":"If you&#39;re unfamiliar with the IntelliJ IDEA interface, you might be wondering how to accomplish some common tasks in Android Studio. This page provides some tips to help you get going. For complete user documentation for the IntelliJ IDEA interface鈥�",
        "url":"sdk/installing/studio-tips.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/tools/project-layout.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Using the Layout Editor",
        "titleFriendly":"",
        "summary":"What&#39;s New in Android Developer Tools Android Studio offers an advanced layout editor that allows you to drag-and-drop widgets into your layout and preview your layout while editing the XML. Within the layout editor, you can switch between the Text鈥�",
        "url":"sdk/installing/studio-layout.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/tools/as-preview-icon.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Android Studio",
        "titleFriendly":"",
        "summary":"Learn about the new features in the beta release of our new IDE.",
        "url":"sdk/installing/studio.html",
        "group":"",
        "keywords": ["studio"],
        "tags": ["studio"],
        "image":"images/resource-card-android-studio.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Migrating from Eclipse",
        "titleFriendly":"",
        "summary":"If you&#39;ve previously developed for Android using Eclipse and would like to migrate to Android Studio, you should export your projects from Eclipse in order to generate Gradle build files. You can then import your project into Android Studio. Your 鈥�",
        "url":"sdk/installing/migrate.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Setting Up the ADT Bundle",
        "titleFriendly":"",
        "summary":"",
        "url":"sdk/installing/bundle.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Creating a Project",
        "titleFriendly":"",
        "summary":"Android Studio makes it easy to create Android apps for several form factors, such as phone, tablet, TV, Wear, and Google Glass. The New Project wizard lets you choose the form factors for your app and populates the project structure with everything you鈥�",
        "url":"sdk/installing/create-project.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/tools/wizard2.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Building Your Project with Gradle",
        "titleFriendly":"",
        "summary":"What&#39;s New in Android Developer Tools The Android Studio build system is the toolkit you use to build, test, run and package your apps. The build system is independent from Android Studio, so you can invoke it from Android Studio or from the command鈥�",
        "url":"sdk/installing/studio-build.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/tools/as-mainscreen.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Adding SDK Packages",
        "titleFriendly":"",
        "summary":"By default, the Android SDK does not include everything you need to start developing. The SDK separates tools, platforms, and other components into packages you can download as needed using the Android SDK Manager . So before you can start, there are 鈥�",
        "url":"sdk/installing/adding-packages.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/tools/sdk-manager-studio.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Installing the Android SDK",
        "titleFriendly":"",
        "summary":"The Eclipse ADT Bundle provides everything you need to start developing apps, including the Android SDK tools and a version of the Eclipse IDE with built-in ADT (Android Developer Tools) to streamline your Android app development. If you didn&#39;t download鈥�",
        "url":"sdk/installing/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Installing the Eclipse Plugin",
        "titleFriendly":"",
        "summary":"Android offers a custom plugin for the Eclipse IDE, called Android Development Tools (ADT). This plugin provides a powerful, integrated environment in which to develop Android apps. It extends the capabilities of Eclipse to let you quickly set up new 鈥�",
        "url":"sdk/installing/installing-adt.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Debugging with Android Studio",
        "titleFriendly":"",
        "summary":"Android Studio enables you to debug apps running on the emulator or on an Android device. With Android Studio, you can: To debug your app, Android Studio builds a debuggable version of your app, connects to a device or to the emulator, installs the app鈥�",
        "url":"sdk/installing/studio-debug.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/tools/as-debugdevices.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please go to Installing the Android SDK .鈥�",
        "url":"sdk/1.5_r3/installing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please go to System Requirements .鈥�",
        "url":"sdk/1.5_r3/requirements.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Google USB Driver",
        "titleFriendly":"",
        "summary":"I have read and agree with the above terms and conditions The Google USB Driver is required for Windows only in order to perform adb debugging with any of the Google Nexus devices . The one exception is the Galaxy Nexus: the driver for Galaxy Nexus is鈥�",
        "url":"sdk/win-usb.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/developing/sdk-usb-driver.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please go to Installing the Android SDK .鈥�",
        "url":"sdk/1.6_r1/installing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please go to System Requirements .鈥�",
        "url":"sdk/1.6_r1/requirements.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please go to Installing the Android SDK .鈥�",
        "url":"sdk/1.5_r1/installing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please go to System Requirements .鈥�",
        "url":"sdk/1.5_r1/requirements.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Terms and Conditions",
        "titleFriendly":"",
        "summary":"",
        "url":"sdk/terms.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please go to Installing the Android SDK .鈥�",
        "url":"sdk/1.5_r2/installing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please go to System Requirements .鈥�",
        "url":"sdk/1.5_r2/requirements.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please go to Installing the Android SDK .鈥�",
        "url":"sdk/1.1_r1/installing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please go to System Requirements .鈥�",
        "url":"sdk/1.1_r1/requirements.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please go to Installing the Android SDK .鈥�",
        "url":"sdk/1.0_r2/installing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please go to System Requirements .鈥�",
        "url":"sdk/1.0_r2/requirements.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"Android SDK",
        "titleFriendly":"",
        "summary":"Download the official Android SDK to develop apps for Android-powered devices.",
        "url":"sdk/index.html",
        "group":"",
        "keywords": ["download"],
        "tags": ["download"],
        "image":"images/tools-home.png",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please go to Installing the Android SDK .鈥�",
        "url":"sdk/1.0_r1/installing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"You should have already been redirected by your browser. Please go to System Requirements .鈥�",
        "url":"sdk/1.0_r1/requirements.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"tools"
      }
];

var TRAINING_RESOURCES = [
      {
        "title":"Implementing Adaptative UI Flows",
        "titleFriendly":"",
        "summary":"袗谢谐芯褉懈褌屑 锌芯谢褜蟹芯胁邪褌械谢褜褋泻芯谐芯 懈薪褌械褉褎械泄褋邪 蟹邪胁懈褋懈褌 芯褌 屑邪泻械褌邪, 泻芯褌芯褉褘泄 胁 写邪薪薪褘泄 屑芯屑械薪褌 芯褌芯斜褉邪卸邪械褌褋褟. 袧邪锌褉懈屑械褉, 械褋谢懈 锌褉懈谢芯卸械薪懈械 褉邪斜芯褌邪械褌 胁 写胁褍褏锌邪薪械谢褜薪芯屑 褉械卸懈屑械, 褌芯 锌褉懈 薪邪卸邪褌懈懈 薪邪 褝谢械屑械薪褌 胁 谢械胁芯泄 锌邪薪械谢懈 褋芯写械褉卸邪薪懈械 芯褌芯斜褉邪蟹懈褌褋褟 胁 锌褉邪胁芯泄. 袙 芯写薪芯锌邪薪械谢褜薪芯屑 褉械卸懈屑械 鈥�",
        "url":"intl/ru/training/multiscreen/adaptui.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ru",
        "type":"training"
      }, 
      {
        "title":"Supporting Different Densities",
        "titleFriendly":"",
        "summary":"袙 褝褌芯屑 褍褉芯泻械 褉邪褋褋泻邪蟹褘胁邪械褌褋褟, 泻邪泻 褋芯蟹写邪褌褜 懈薪褌械褉褎械泄褋, 锌芯写写械褉卸懈胁邪褞褖懈泄 褉邪蟹薪褘械 褉邪蟹褉械褕械薪懈褟 褝泻褉邪薪邪, 蟹邪 褋褔械褌 懈褋锌芯谢褜蟹芯胁邪薪懈褟 褉邪蟹薪褘褏 褉械褋褍褉褋芯胁 懈 薪械 蟹邪胁懈褋褟褖懈褏 芯褌 褉邪蟹褉械褕械薪懈褟 械写懈薪懈褑 懈蟹屑械褉械薪懈褟. 袪邪蟹褉邪斜芯褌褔懈泻懈 褔邪褋褌芯 写芯锌褍褋泻邪褞褌 芯写薪褍 懈 褌褍 卸械 芯褕懈斜泻褍 锌褉懈 褋芯蟹写邪薪懈懈 屑邪泻械褌芯胁聽鈥� 褍泻邪蟹褘胁邪褞褌鈥�",
        "url":"intl/ru/training/multiscreen/screendensities.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ru",
        "type":"training"
      }, 
      {
        "title":"Supporting Different Screen Sizes",
        "titleFriendly":"",
        "summary":"袙 褝褌芯屑 褍褉芯泻械 芯锌懈褋邪薪褘 褋谢械写褍褞褖懈械 邪褋锌械泻褌褘 芯斜械褋锌械褔械薪懈褟 褋芯胁屑械褋褌懈屑芯褋褌懈 懈薪褌械褉褎械泄褋邪 褋 褉邪蟹薪褘屑懈 褝泻褉邪薪邪屑懈: 效褌芯斜褘 褋芯蟹写邪褌褜 屑邪褋褕褌邪斜懈褉褍械屑褘泄 屑邪泻械褌, 褋锌芯褋芯斜薪褘泄 邪写邪锌褌懈褉芯胁邪褌褜褋褟 泻 褉邪蟹薪褘屑 褝泻褉邪薪邪屑, 懈褋锌芯谢褜蟹褍泄褌械 胁 泻邪褔械褋褌胁械 蟹薪邪褔械薪懈泄 褕懈褉懈薪褘 懈 胁褘褋芯褌褘 芯褌写械谢褜薪褘褏 泻芯屑锌芯薪械薪褌芯胁 锌褉械写褋褌邪胁谢械薪懈褟鈥�",
        "url":"intl/ru/training/multiscreen/screensizes.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/layout-hvga.png",
        "lang":"ru",
        "type":"training"
      }, 
      {
        "title":"Designing for Multiple Screens",
        "titleFriendly":"",
        "summary":"袧邪 锌谢邪褌褎芯褉屑械 Android 褉邪斜芯褌邪褞褌 褍褋褌褉芯泄褋褌胁邪 褋 褋邪屑褘屑懈 褉邪蟹薪褘屑懈 褉邪蟹屑械褉邪屑懈 褝泻褉邪薪邪: 芯褌 褌械谢械褎芯薪芯胁 写芯 褌械谢械胁懈蟹芯褉芯胁. 效褌芯斜褘 褋 胁邪褕懈屑 锌褉懈谢芯卸械薪懈械屑 屑芯谐谢懈 褉邪斜芯褌邪褌褜 泻邪泻 屑芯卸薪芯 斜芯谢褜褕械 锌芯谢褜蟹芯胁邪褌械谢械泄, 芯薪芯 写芯谢卸薪芯 泻芯褉褉械泻褌薪芯 芯褌芯斜褉邪卸邪褌褜褋褟 薪邪 胁褋械褏 褝褌懈褏 褍褋褌褉芯泄褋褌胁邪褏. 袨写薪邪泻芯 褋芯胁屑械褋褌懈屑芯褋褌褜鈥�",
        "url":"intl/ru/training/multiscreen/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ru",
        "type":"training"
      }, 
      {
        "title":"Determining and Monitoring the Docking State and Type",
        "titleFriendly":"",
        "summary":"校褋褌褉芯泄褋褌胁邪 锌芯写 褍锌褉邪胁谢械薪懈械屑 袨小 Android 屑芯卸薪芯 锌芯写泻谢褞褔邪褌褜 泻 薪械褋泻芯谢褜泻懈屑 褌懈锌邪屑 写芯泻-褋褌邪薪褑懈泄: 薪邪褋褌芯谢褜薪褘屑, 泻芯褌芯褉褘械 写械谢褟褌褋褟 薪邪 褑懈褎褉芯胁褘械 懈 邪薪邪谢芯谐芯胁褘械, 懈 邪胁褌芯屑芯斜懈谢褜薪褘屑. 袙 斜芯谢褜褕懈薪褋褌胁械 褋谢褍褔邪械胁 褍褋褌褉芯泄褋褌胁邪 蟹邪褉褟卸邪褞褌褋褟 锌褉懈 锌芯写泻谢褞褔械薪懈懈 泻 写芯泻-褋褌邪薪褑懈懈, 锌芯褝褌芯屑褍 褋芯褋褌芯褟薪懈械 鈥�",
        "url":"intl/ru/training/monitoring-device-state/docking-monitoring.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ru",
        "type":"training"
      }, 
      {
        "title":"Monitoring the Battery Level and Charging State",
        "titleFriendly":"",
        "summary":"袝褋谢懈 胁褘 褏芯褌懈褌械 懈蟹屑械薪懈褌褜 褔邪褋褌芯褌褍 褎芯薪芯胁褘褏 芯斜薪芯胁谢械薪懈泄, 褔褌芯斜褘 锌褉芯写谢懈褌褜 胁褉械屑褟 褉邪斜芯褌褘 褍褋褌褉芯泄褋褌胁邪 芯褌 斜邪褌邪褉械懈, 褋薪邪褔邪谢邪 褉械泻芯屑械薪写褍械褌褋褟 锌褉芯胁械褉懈褌褜 褌械泻褍褖懈泄 褍褉芯胁械薪褜 蟹邪褉褟写邪 懈 褋芯褋褌芯褟薪懈械 蟹邪褉褟写泻懈. 袠屑械薪薪芯 芯褌 褝褌懈褏 写胁褍褏 褎邪泻褌芯褉芯胁 蟹邪胁懈褋懈褌, 泻邪泻 芯斜薪芯胁谢械薪懈褟 锌芯胁谢懈褟褞褌 薪邪 胁褉械屑褟 褉邪斜芯褌褘鈥�",
        "url":"intl/ru/training/monitoring-device-state/battery-monitoring.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ru",
        "type":"training"
      }, 
      {
        "title":"Optimizing Battery Life",
        "titleFriendly":"",
        "summary":"袣邪褔械褋褌胁械薪薪芯械 锌褉懈谢芯卸械薪懈械 写芯谢卸薪芯 芯泻邪蟹褘胁邪褌褜 屑懈薪懈屑邪谢褜薪芯械 胁谢懈褟薪懈械 薪邪 胁褉械屑褟 褉邪斜芯褌褘 褍褋褌褉芯泄褋褌胁邪 芯褌 斜邪褌邪褉械懈. 袙 褝褌芯屑 褍褉芯泻械 胁褘 薪邪褍褔懈褌械褋褜 褋芯蟹写邪胁邪褌褜 锌褉懈谢芯卸械薪懈褟, 褋锌芯褋芯斜薪褘械 懈蟹屑械薪褟褌褜 褎褍薪泻褑懈芯薪邪谢 懈 褉械卸懈屑 褉邪斜芯褌褘 胁 蟹邪胁懈褋懈屑芯褋褌懈 芯褌 褋芯褋褌芯褟薪懈褟 褍褋褌褉芯泄褋褌胁邪. 袨褌泻谢褞褔械薪懈械 芯斜薪芯胁谢械薪懈褟鈥�",
        "url":"intl/ru/training/monitoring-device-state/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ru",
        "type":"training"
      }, 
      {
        "title":"Manipulating Broadcast Receivers On Demand",
        "titleFriendly":"",
        "summary":"小邪屑褘泄 锌褉芯褋褌芯泄 褋锌芯褋芯斜 芯褌褋谢械卸懈胁邪褌褜 懈蟹屑械薪械薪懈褟 褋芯褋褌芯褟薪懈褟 褍褋褌褉芯泄褋褌胁邪聽鈥� 褋芯蟹写邪褌褜 锌褉懈械屑薪懈泻懈 BroadcastReceiver 写谢褟 泻邪卸写芯谐芯 芯褌褋谢械卸懈胁邪械屑芯谐芯 褋芯褋褌芯褟薪懈褟 懈 蟹邪褉械谐懈褋褌褉懈褉芯胁邪褌褜 懈褏 胁 屑邪薪懈褎械褋褌械 锌褉懈谢芯卸械薪懈褟. 袟邪褌械屑 胁 泻邪卸写芯屑 懈蟹 褝褌懈褏 锌褉懈械屑薪懈泻芯胁 屑芯卸薪芯 锌械褉械芯锌褉械写械谢褟褌褜 谐褉邪褎懈泻 锌芯胁褌芯褉褟褞褖懈褏褋褟鈥�",
        "url":"intl/ru/training/monitoring-device-state/manifest-receivers.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ru",
        "type":"training"
      }, 
      {
        "title":"Determining and Monitoring the Connectivity Status",
        "titleFriendly":"",
        "summary":"效邪褖械 胁褋械谐芯 锌芯胁褌芯褉褟褞褖懈械褋褟 芯锌芯胁械褖械薪懈褟 懈 褎芯薪芯胁褘械 褋谢褍卸斜褘 懈褋锌芯谢褜蟹褍褞褌褋褟 写谢褟 锌谢邪薪芯胁芯谐芯 芯斜薪芯胁谢械薪懈褟 锌褉懈谢芯卸械薪懈褟 懈蟹 袠薪褌械褉薪械褌邪, 泻褝褕懈褉芯胁邪薪懈褟 懈谢懈 蟹邪谐褉褍蟹泻懈 斜芯谢褜褕懈褏 芯斜褗械屑芯胁 写邪薪薪褘褏. 袨写薪邪泻芯 械褋谢懈 锌芯写泻谢褞褔械薪懈械 泻 袠薪褌械褉薪械褌褍 薪械 褍褋褌邪薪芯胁谢械薪芯 懈谢懈 褋泻芯褉芯褋褌褜 褋芯械写懈薪械薪懈褟 褋谢懈褕泻芯屑 薪懈蟹泻邪褟鈥�",
        "url":"intl/ru/training/monitoring-device-state/connectivity-monitoring.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ru",
        "type":"training"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"順勳灛 鞎犿攲毽紑鞚挫厴鞚� 響滌嫓頃橂姅 霠堨澊鞎勳泝鞐� 霐半澕 UI 頂岆臧€ 雼澕歆� 靾� 鞛堨姷雼堧嫟. 鞓堧ゼ 霌れ柎 鞎犿攲毽紑鞚挫厴鞚� 鞚挫 彀� 氇摐搿� 霅橃柎 鞛堧姅 瓴届毎鞐愲姅 鞕检 彀届棎 鞛堧姅 頃鞚� 韥措Ν頃橂┐ 鞓るジ飒� 彀届棎 旖橅厫旄犼皜 響滌嫓霅橁碃, 雼澕 彀� 氇摐搿� 霅橃柎 鞛堧姅 瓴届毎鞐愲姅 旖橅厫旄犼皜 頃措嫻 彀届棎 響滌嫓霅╇媹雼�(雼るジ 鞎№嫲牍勴嫲鞐愳劀). 臧� 霠堨澊鞎勳泝鞚� 甑槃頃橂姅 氚╈嫕鞚� 鞎疥皠鞌� 雼るゴ氙€搿� 臧€鞛� 毹检爛 頃挫暭 頃� 鞚检潃 順勳灛 靷毄鞛愳棎瓴� 鞏措枻 霠堨澊鞎勳泝鞚� 響滌嫓霅橂姅歆€ 頇曥澑頃橂姅 瓴冹瀰雼堧嫟. 鞓堧ゼ 霌れ柎, 靷毄鞛愱皜 &鈥�",
        "url":"intl/ko/training/multiscreen/adaptui.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ko",
        "type":"training"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"鞚� 臧曥潣鞐愳劀電� 雼れ枒頃� 毽唽鞀るゼ 鞝滉车頃橁碃 頃挫儊霃� 霃呺順�(resolution-independent) 旄§爼 雼渼毳� 靷毄頃溂搿滌崹 雼れ枒頃� 頇旊┐ 氚€霃勲ゼ 歆€鞗愴晿電� 氚╇矔鞚� 靹る獏頃╇媹雼�. 霠堨澊鞎勳泝鞚� 霐旍瀽鞚疙暊 霑� 氩旐晿旮� 靿毚 鞁れ垬 欷� 頃橂倶電� 鞝堧寑 頂届厐(absolute pixel)鞚� 靷毄頃橃棳 瓯半Μ雮� 韥赴毳� 鞝曥潣頃橂姅 瓴冹瀰雼堧嫟. 臧� 頇旊┐鞚€ 頂届厐 氚€霃勱皜 靹滊 雼るジ雿� 霠堨澊鞎勳泝 韥赴毳� 頂届厐搿� 鞝曥潣頃橂┐ 霃欖澕頃� 頂届厐 靾橃箻臧€ 雼るジ 旮瓣赴鞐愳劀 雼るジ 氍茧Μ鞝� 韥赴鞕€ 雽€鞚戫暊 靾� 鞛堨柎 氍胳牅臧€鈥�",
        "url":"intl/ko/training/multiscreen/screendensities.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ko",
        "type":"training"
      }, 
      {
        "title":"雼れ枒頃� 頇旊┐ 韥赴 歆€鞗�",
        "titleFriendly":"",
        "summary":"鞚� 臧曥潣鞐愳劀電� 雼れ枒頃� 頇旊┐ 韥赴毳� 歆€鞗愴晿電� 氚╇矔鞚� 靹る獏頃╇媹雼�. 霠堨澊鞎勳泝鞚� 雼れ枒頃� 頇旊┐ 韥赴鞐� 霐半澕 鞙犾棸頃橁矊 臁办爼霅橂弰搿� 頃橂牑氅� 鞚茧秬 敕� 甑劚鞖旍唽鞚� 雱堧箘鞕€ 雴掛澊鞐� &quot;wrap_content&quot; 氚� &quot;match_parent&quot; 毳� 靷毄頃挫暭 頃╇媹雼�. &quot;wrap_content&quot; 毳� 靷毄頃橂┐ 敕办潣 雱堧箘鞕€ 雴掛澊臧€ 頃措嫻 敕� 雮挫棎 旖橅厫旄犼皜 霌れ柎臧€電旊嵃 頃勳殧頃� 斓滌唽 韥赴搿� 靹れ爼霅橂姅 氚橂┐, &quot;match_parent鈥�",
        "url":"intl/ko/training/multiscreen/screensizes.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/layout-hvga.png",
        "lang":"ko",
        "type":"training"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"Android電� 靻岉槙 頊措寑鞝勴檾鞐愳劀攵€韯� 雽€順� TV鞐� 鞚措ゴ旮瓣箤歆€ 雼れ枒頃� 頇旊┐ 韥赴鞚� 靾橂鞚€ 旮瓣赴 鞙犿槙鞚� 歆€鞗愴暕雼堧嫟. 霐半澕靹� 鞎犿攲毽紑鞚挫厴鞚� 氇摖 頇旊┐ 韥赴鞕€ 順疙櫂霅橃柎 斓滊寑頃� 毵庫潃 靷毄鞛愱皜 靷毄頃� 靾� 鞛堧弰搿� 霐旍瀽鞚疙晿電� 瓴冹澊 欷戩殧頃╇媹雼�. 頃橃毵� 雼れ枒頃� 旮瓣赴 鞙犿槙瓿� 順疙櫂霅橂姅 瓴冸鞙茧電� 於╇秳頃橃 鞎婌姷雼堧嫟. 臧� 頇旊┐ 韥赴鞐� 霐半澕 靷毄鞛� 靸來樃鞛戩毄鞐� 鞙犽Μ頃� 鞝愱臣 攵堧Μ頃� 鞝愳澊 雼る雼堧嫟. 霐半澕靹� 靷毄鞛愳棎瓴� 毵岇”鞚� 欤缄碃 旯婌潃 鞚胳儊鞚� 鞁柎欤茧牑氅� 鞎犿攲毽紑鞚挫厴鞚� 雼 鞐煬 鈥�",
        "url":"intl/ko/training/multiscreen/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ko",
        "type":"training"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"Android 旮瓣赴電� 鞐煬 膦呺鞚� 霃勴伂搿� 霃勴偣霅� 靾� 鞛堨姷雼堧嫟. 鞐赴鞐愲姅 旃错彴 霕愲姅 頇� 霃勴伂鞕€ 霐旍韯� 氚� 鞎勲偁搿滉犯 霃勴伂臧€ 韽暔霅╇媹雼�. 毵庫潃 霃勴伂臧€ 霃勴偣霅� 旮瓣赴鞐� 鞝勱赴毳� 瓿店笁頃橂瘈搿� 鞚茧皹鞝侅溂搿� 於╈爠 靸來儨鞕€ 霃勴伂 靸來儨電� 氚€鞝戫暅 甏€霠澊 鞛堨姷雼堧嫟. 鞝勴檾鞚� 霃勴伂 靸來儨臧€ 鞐呺嵃鞚错姼 牍堧弰鞐� 鞏措柣瓴� 鞓來枼鞚� 氙胳箻電旍電� 鞎膘棎 霐半澕 雼る雼堧嫟. 鞀ろ彫旄� 靹柬劙 鞎膘澊霛茧┐ 雿办姢韥啽 霃勴伂鞐愳劀 鞐呺嵃鞚错姼 牍堧弰毳� 雴掛澊瓿� 旃错彴 霃勴伂鞐� 鞐瓣舶霅� 瓴届毎 鞐呺嵃鞚错姼毳� 鞕勳爠頌� 靷毄 欷戩頃措弰 膦嬱姷雼堧嫟.鈥�",
        "url":"intl/ko/training/monitoring-device-state/docking-monitoring.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ko",
        "type":"training"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"氚标犯霛检毚霌� 鞐呺嵃鞚错姼臧€ 氚绊劙毽� 靾橂獏鞐� 氙胳箻電� 鞓來枼鞚� 欷勳澊旮� 鞙勴晿鞐� 氚标犯霛检毚霌� 鞐呺嵃鞚错姼 牍堧弰靾橂ゼ 氤€瓴巾晿電� 瓴届毎, 順勳灛 氚绊劙毽� 靾橃瓿� 於╈爠 靸來儨攵€韯� 頇曥澑頃橂姅 瓴冹澊 膦嬱姷雼堧嫟. 鞎犿攲毽紑鞚挫厴 鞐呺嵃鞚错姼 靾橅枆鞚� 氚绊劙毽� 靾橂獏鞐� 氙胳箻電� 鞓來枼鞚€ 氚绊劙毽� 靾橃 氚� 旮瓣赴鞚� 於╈爠 靸來儨鞐� 霐半澕 雼る雼堧嫟. 旮瓣赴毳� AC 於╈爠旮半 於╈爠頃橂姅 霃欖晥 鞐呺嵃鞚错姼 靾橅枆鞚� 氙胳箻電� 鞓來枼鞚€ 氍挫嫓頃措弰 膦嬱姷雼堧嫟. 霐半澕靹� 旮瓣赴臧€ 氩旍毄 於╈爠旮办棎 鞐瓣舶霅橃柎 鞛堨潉 霑岆姅 雽€攵€攵� 靸堧瓿犾龚 牍堧弰毳� 斓滊寑頇旐暊 靾� 鞛堨姷雼堧嫟鈥�",
        "url":"intl/ko/training/monitoring-device-state/battery-monitoring.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ko",
        "type":"training"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"膦嬱潃 鞎膘潃 順胳姢韸� 旮瓣赴鞚� 氚绊劙毽� 靾橂獏鞐� 氙胳箻電� 鞓來枼鞚� 氙鸽頃挫暭 頃╇媹雼�. 臧曥潣毳� 韱淀暣 順胳姢韸� 旮瓣赴鞚� 靸來儨鞐� 霐半澕 旮半姤瓿� 霃欖瀾鞚� 靾橃爼頃橂姅 瓴冹潉 氇媹韯半頃橂姅 鞎膘潉 甑稌頃� 靾� 鞛堦矊 霅╇媹雼�. 鞐瓣舶鞚� 雭婈布鞚� 霑� 氚标犯霛检毚霌� 靹滊箘鞀� 鞐呺嵃鞚错姼毳� 靷毄 欷戩頃橁卑雮�, 氚绊劙毽� 靾橃鞚� 雮潉 霑� 鞐呺嵃鞚错姼 牍堧弰毳� 欷勳澊電� 臁办箻毳� 旆晿鞐�, 靷毄鞛� 頇橁步鞚� 靻愳儊鞁滍偆歆€ 鞎婈碃 氚绊劙毽� 靾橂獏鞐� 氙胳箻電� 鞓來枼鞚� 斓滌唽頇旐暊 靾� 鞛堨姷雼堧嫟.鈥�",
        "url":"intl/ko/training/monitoring-device-state/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ko",
        "type":"training"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"旮瓣赴 靸來儨 氤€瓴届潉 氇媹韯半頃橂姅 臧€鞛� 臧勲嫧頃� 氚╇矔鞚€ 氇媹韯半頃橂姅 臧� 靸來儨鞐� 雽€頃� BroadcastReceiver毳� 毵岆摛鞏� 臧侁皝鞚� 鞎犿攲毽紑鞚挫厴 毵る媹韼橃姢韸胳棎 霌彪頃橂姅 瓴冹瀰雼堧嫟. 攴鸽煬氅� 臧� 毽嫓氩� 雮挫棎靹� 順勳灛 旮瓣赴 靸來儨毳� 旮半皹鞙茧 氚橂车 鞎岆瀸鞚� 鞚检爼鞚� 臧勲嫧頌� 氤€瓴巾暊 靾� 鞛堨姷雼堧嫟. 鞚� 氚╇矔鞚� 攵€鞛戩毄鞚€ 毽嫓氩� 欷� 頃橂倶霛茧弰 鞁ろ枆霅橂┐ 毵る矆 鞎膘澊 旮瓣赴鞚� 鞝堨爠 氇摐毳� 頃挫牅鞁滍偍雼る姅 瓴冹瀰雼堧嫟. 雿� 雮橃潃 氚╇矔鞚€ 霟绊儉鞛� 霑� 敫岆霌滌簮鞀ろ姼 毽嫓氩勲ゼ 靷毄 欷戩 霕愲姅 靷毄頃橂弰搿� 鈥�",
        "url":"intl/ko/training/monitoring-device-state/manifest-receivers.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ko",
        "type":"training"
      }, 
      {
        "title":"",
        "titleFriendly":"",
        "summary":"氚橂车 鞎岆瀸瓿� 氚标犯霛检毚霌� 靹滊箘鞀る姅 鞚茧皹鞝侅溂搿� 鞚疙劙雱� 毽唽鞀� 氚� 旌愳嫓 雿办澊韯半攵€韯� 鞎犿攲毽紑鞚挫厴鞚� 鞐呺嵃鞚错姼毳� 鞓堨暯頃橁卑雮� 旮� 鞁滉皠鞚� 頃勳殧頃� 雼れ毚搿滊摐毳� 鞁ろ枆頃橂姅 雿� 靷毄霅╇媹雼�. 頃橃毵� 鞚疙劙雱缝棎 鞐瓣舶霅橃柎 鞛堨 鞎婈卑雮� 鞐瓣舶鞚� 毵れ毎 電愲牑 雼れ毚搿滊摐毳� 鞕勲頃橃 氇豁暅雼る┐ 鞐呺嵃鞚错姼 鞓堨暯鞚� 頃措弰 靻岇毄鞚� 鞐嗞矤欤�? 鞚疙劙雱缝棎 鞐瓣舶霅橃棃電旍, 鞏措枻 鞐瓣舶 氚╈嫕鞚胳毳� 頇曥澑頃橁赴 鞙勴晿鞐� ConnectivityManager毳� 靷毄頃� 靾� 鞛堨姷雼堧嫟. 鞚疙劙雱缝棎 鞐瓣舶霅橃柎 鞛堨 鞎婋姅 瓴届毎 鞚疙劙雱封€�",
        "url":"intl/ko/training/monitoring-device-state/connectivity-monitoring.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ko",
        "type":"training"
      }, 
      {
        "title":"闋嗗繙鎬с伄銇傘倠 UI 銉曘儹銉笺伄瀹熻",
        "titleFriendly":"",
        "summary":"銈儣銉亴鐝惧湪琛ㄧず銇椼仸銇勩倠銉偆銈偊銉堛伀銈堛仯銇︺€乁I 銉曘儹銉笺亴鐣般仾銈嬪彲鑳芥€с亴銇傘倞銇俱仚銆傘仧銇ㄣ亪銇般€併偄銉椼儶銇屻儑銉ャ偄銉儦銈ゃ兂 銉兗銉夈仹銇傘倢銇般€佸乏銉氥偆銉炽伄銈偆銉嗐儬銈掋偗銉儍銈仚銈嬨仺銆佸崢銇彸銉氥偆銉炽伀銈炽兂銉嗐兂銉勩亴琛ㄧず銇曘倢銈嬨仩銇戙仹銇欍亴銆併偡銉炽偘銉儦銈ゃ兂 銉兗銉夈仹銇傘倢銇般€併偝銉炽儐銉炽儎銇紙鍒ャ伄銈偗銉嗐偅銉撱儐銈ｅ唴銇級銈炽兂銉嗐兂銉勫皞鐢ㄣ伄銉氥偆銉炽伀琛ㄧず銇曘倢銈嬪繀瑕併亴銇傘倞銇俱仚銆� 銉偆銈偊銉堛伀銈堛仯銇﹀疅瑁呫亴澶氬皯鐣般仾銈嬨伄銇с€併伨銇氥€併儲銉笺偠銉笺亴鐝惧湪銇┿伄銈堛亞銇儸銈ゃ偄銈︺儓銈掕〃绀恒仐銇︺亜銈嬨亱銈掑垽鍒ャ仚銈嬪繀瑕併亴銇傘倞銇俱仚銆傘仧銇ㄣ亪銇般€併儲銉笺偠銉笺亴琛ㄧず銇椼仸銇勩倠銉偆銈偊銉堚€�",
        "url":"intl/ja/training/multiscreen/adaptui.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ja",
        "type":"training"
      }, 
      {
        "title":"銇曘伨銇栥伨銇敾闈㈠瘑搴︺伄銈点儩銉笺儓",
        "titleFriendly":"",
        "summary":"銇撱伄銉儍銈广兂銇с伅銆佺暟銇倠銉偨銉笺偣銈掔敓鎴愩仐銆併亱銇よВ鍍忓害闈炰緷瀛樺崢浣嶃倰浣跨敤銇椼仸銆佺暟銇倠鐢婚潰瀵嗗害銈掋偟銉濄兗銉堛仚銈嬫柟娉曘伀銇ゃ亜銇﹀缈掋仐銇俱仚銆� 銉偆銈偊銉堛倰瑷▓銇欍倠闅涖伀鍥為伩銇欍伖銇嶃倛銇忋亗銈嬭惤銇ㄣ仐绌淬伄 1 銇ゃ仺銇椼仸銆佺刀瀵俱償銈偦銉倰浣跨敤銇椼仸璺濋洟銈勩偟銈ゃ偤銈掑畾缇┿仚銈嬨亾銇ㄣ亴銇傘倞銇俱仚銆傘償銈偦銉倰浣跨敤銇椼仸銉偆銈偊銉堛伄銈点偆銈恒倰瀹氱京銇欍倠銇ㄣ€佺敾闈伀銈堛仯銇︺償銈偦銉瘑搴︺亴鐣般仾銈嬨仧銈併€佸晱椤屻亴璧枫亾銈娿伨銇欍€傘仐銇熴亴銇ｃ仸銆佸悓銇樸償銈偦銉暟銇с伅銆併儑銉愩偆銈广亴鐣般仾銈嬪牬鍚堛伀鐗╃悊銈点偆銈恒亴鐣般仾銈嬪彲鑳芥€с亴銇傘倞銇俱仚銆傘仢銇仧銈併€併偟銈ゃ偤銈掓寚瀹氥仚銈嬪牬鍚堛伅銆佸父銇� dp 鍗樹綅鈥�",
        "url":"intl/ja/training/multiscreen/screendensities.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ja",
        "type":"training"
      }, 
      {
        "title":"銇曘伨銇栥伨銇敾闈偟銈ゃ偤銇偟銉濄兗銉�",
        "titleFriendly":"",
        "summary":"銇撱伄銉儍銈广兂銇с伅銆佺暟銇倠鐢婚潰銈点偆銈恒倰浠ヤ笅銇倛銇嗐仾鏂规硶銇с偟銉濄兗銉堛仚銈嬫柟娉曘伀銇ゃ亜銇﹀缈掋仐銇俱仚: 銉偆銈偊銉堛倰銇曘伨銇栥伨銇敾闈偟銈ゃ偤銇煍杌熴伀瀵惧繙銇曘仜銈嬨伀銇€佷竴閮ㄣ伄銉撱儱銉� 銈炽兂銉濄兗銉嶃兂銉堛伄骞呫仺楂樸仌銇� &quot;wrap_content&quot; 銇� &quot;match_parent&quot; 銈掍娇鐢ㄣ仚銈嬪繀瑕併亴銇傘倞銇俱仚銆� &quot;wrap_content&quot; 銈掍娇鐢ㄣ仚銈嬨仺銆併儞銉ャ兗銇箙銈勯珮銇曘亴銇濄伄銉撱儱銉煎唴銇偝銉炽儐銉炽儎銇屽弾銇俱倠銇伀蹇呰銇渶灏忋偟銈ゃ偤銇ō瀹氥仌銈屻伨銇欍€備竴鏂广€� &quot;match_parent鈥�",
        "url":"intl/ja/training/multiscreen/screensizes.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/layout-hvga.png",
        "lang":"ja",
        "type":"training"
      }, 
      {
        "title":"瑜囨暟鐢婚潰銇儑銈躲偆銉�",
        "titleFriendly":"",
        "summary":"Android 銇€佸皬銇曘仾鎼哄腐闆昏┍銇嬨倝澶с亶銇儐銉儞銇俱仹銆佺敾闈偟銈ゃ偤銈傜ó椤炪倐銇曘伨銇栥伨銇儑銉愩偆銈广伀鎼級銇с亶銇俱仚銆傘仢銇仧銈併€併仹銇嶃倠闄愩倞澶氥亸銇儲銉笺偠銉笺亴浣跨敤銇с亶銈嬨倛銇嗐伀銆併仚銇广仸銇敾闈偟銈ゃ偤銇蹇溿仹銇嶃倠銈堛亞銈儣銉倰瑷▓銇欍倠銇撱仺銇岄噸瑕併伀銇倞銇俱仚銆� 銇椼亱銇椼€併仌銇俱仏銇俱仾绋銇儑銉愩偆銈广伀瀵惧繙銇с亶銈嬨仩銇戙仹銇崄鍒嗐仹銇亗銈娿伨銇涖倱銆傜敾闈偟銈ゃ偤銇倛銇ｃ仸銆併儲銉笺偠銉笺亴鎿嶄綔銇с亶銈嬨亾銇ㄣ亴姹恒伨銇ｃ仸銇忋倠銇熴倎銆佹湰褰撱伀銉︺兗銈躲兗銈掓簚瓒炽仌銇涖仸銈堛亜鍗拌薄銈掓寔銇ｃ仸銈傘倝銇嗐仧銈併伀銇€併偄銉椼儶銇屽崢銇鏁般伄鐢婚潰銈掋偟銉濄兗銉堛仚銈嬨仩銇戙仹銇笉鍗佸垎銇с仚: 鐢婚潰瑷畾銇斻仺銇€�",
        "url":"intl/ja/training/multiscreen/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ja",
        "type":"training"
      }, 
      {
        "title":"銉涖儷銉€銉笺伄瑁呯潃鐘舵厠銇ㄣ偪銈ゃ儣銇壒瀹氥仺鐩ｈ",
        "titleFriendly":"",
        "summary":"Android 鎼級绔湯銈掕鐫€銇с亶銈嬨儧銉儉銉笺伄绋銇伅銆併仌銇俱仏銇俱仾銈傘伄銇屻亗銈娿伨銇欍€傘仧銇ㄣ亪銇般€佽粖杓夌敤銈勫搴敤銇儧銉儉銉笺亴銇傘倞銆併儑銈搞偪銉亱銈儕銉偘銇嬨仺銇勩亞鍖哄垾銈傘亗銈娿伨銇欍€傘儧銉儉銉艰鐫€鐘舵厠銇竴鑸殑銇€佸厖闆荤姸鎱嬨仺瀵嗘帴銇儶銉炽偗銇椼仸銇勩伨銇欍€傚銇忋伄銉涖儷銉€銉笺伅銆佽鐫€銇曘倢銇︺亜銈嬬鏈伀闆诲姏銈掍緵绲︺仐銇︺亜銈嬨亱銈夈仹銇欍€� 绔湯銇儧銉儉銉艰鐫€鐘舵厠銇屾洿鏂般伄闋诲害銇仼銇倛銇嗐伀褰遍熆銇欍倠銇嬨伅銆併偄銉椼儶銇倛銇ｃ仸鐣般仾銈娿伨銇欍€傘仧銇ㄣ亪銇般€併偣銉濄兗銉� 銈汇兂銈裤兗 銈儣銉仾銈夈€佸崜涓娿儧銉儉銉艰鐫€鏅傘伀銇洿鏂伴牷搴︺倰涓娿亽銆併偒銉� 銉涖儷銉€銉艰鐫€鏅傘伀銇洿鏂般倰瀹屽叏銇仠姝⑩€�",
        "url":"intl/ja/training/monitoring-device-state/docking-monitoring.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ja",
        "type":"training"
      }, 
      {
        "title":"闆绘睜娈嬮噺銇ㄥ厖闆荤姸鎱嬨伄鐩ｈ",
        "titleFriendly":"",
        "summary":"銉愩儍銈偘銉┿偊銉炽儔鏇存柊銇岄浕姹犳秷璨婚噺銇強銇笺仚褰遍熆銈掓姂銇堛倠銇熴倎銇洿鏂般伄闋诲害銈掑鏇淬仚銈嬨伀銇€佸垵銈併伀鐝惧湪銇浕姹犳畫閲忋仺鍏呴浕鐘舵厠銈掕銇广倠銇撱仺銈掋亰銇欍仚銈併仐銇俱仚銆� 銈儣銉伄鏇存柊銇岄浕姹犳秷璨婚噺銇強銇笺仚褰遍熆銇害鍚堛亜銇€佺鏈伄闆绘睜娈嬮噺銇ㄥ厖闆荤姸鎱嬨伀銈堛仯銇︾暟銇倞銇俱仚銆侫C 闆绘簮銇嬨倝绔湯銈掑厖闆汇仐銇︺亜銈嬨仺銇嶃伅銆佹洿鏂般伄瀹熻銇倛銈嬪奖闊裤伅銇斻亸銈忋仛銇嬨仾銇仹銆併伝銇ㄣ倱銇┿伄鍫村悎銇€佺鏈亴 AC 闆绘簮銇帴缍氥仌銈屻仸銇勩倠闄愩倞銆佹洿鏂伴牷搴︺倰鏈€澶с伀銇椼仸宸仐鏀亪銇傘倞銇俱仜銈撱€傞€嗐伀銆佺鏈亴闆绘睜銇ч鍕曘仐銇︺亜銈嬨仺銇嶃伅銆佹洿鏂伴牷搴︺倰涓嬨亽銈嬨仺闆绘睜娑堣不閲忋倰鎶戙亪銈嬨亾銇ㄣ亴銇с亶銇俱仚鈥�",
        "url":"intl/ja/training/monitoring-device-state/battery-monitoring.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ja",
        "type":"training"
      }, 
      {
        "title":"闆绘睜娑堣不閲忋伄鏈€閬╁寲",
        "titleFriendly":"",
        "summary":"銈儣銉倰闁嬬櫤銇欍倠銇ㄣ亶銇€併儧銈广儓绔湯銇浕姹犳秷璨婚噺銇搞伄褰遍熆銈掓姂銇堛倠銈堛亞蹇冦亴銇戙倠蹇呰銇屻亗銈娿伨銇欍€傘亾銇偗銉┿偣銈掍慨浜嗐仚銈嬨仺銆侀枊鐧恒仚銈嬨偄銉椼儶銇腑銇с儧銈广儓绔湯銇姸鎱嬨倰鐩ｈ銇椼€併仢銈屻伀鍩恒仴銇勩仸姗熻兘銈勫嫊浣溿倰澶夋洿銇欍倠銇撱仺銇屻仹銇嶃倠銈堛亞銇仾銈娿伨銇欍€� 鎺ョ稓銇屽け銈忋倢銇熴仺銇嶃伅銉愩儍銈偘銉┿偊銉炽儔 銈点兗銉撱偣銇洿鏂般倰鍋滄銇欍倠銆侀浕姹犳畫閲忋亴浣庝笅銇椼仧銇ㄣ亶銇洿鏂般伄闋诲害銈掍笅銇掋倠銇ㄣ亜銇ｃ仧瀵剧瓥銈掕瑳銇樸倠銇撱仺銇倛銈娿€併儲銉笺偠銉� 銈ㄣ偗銈广儦銉偍銉炽偣銈掓悕銇亞銇撱仺銇亸銆併偄銉椼儶銇岄浕姹犳秷璨婚噺銇強銇笺仚褰遍熆銈掓渶灏忛檺銇姂銇堛倠銇撱仺銇屻仹銇嶃伨銇欍€傗€�",
        "url":"intl/ja/training/monitoring-device-state/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ja",
        "type":"training"
      }, 
      {
        "title":"銈兂銉囥優銉炽儔銇с伄銉栥儹銉笺儔銈儯銈广儓 銉偡銉笺儛鎿嶄綔",
        "titleFriendly":"",
        "summary":"绔湯銇姸鎱嬪鍖栥倰鐩ｈ銇欍倠鏈€銈傚崢绱斻仾鏂规硶銇€佺洠瑕栧璞°仺銇欍倠鐘舵厠銇斻仺銇� BroadcastReceiver 銈掍綔鎴愩仐銆併仢銈屻仦銈屻倰銈儣銉伄銉炪儖銉曘偋銈广儓鍐呫仹鐧婚尣銇欍倠銇ㄣ亜銇嗐倐銇仹銇欍€傘亾銈屻倝銇悇銉偡銉笺儛鍐呫仹銆佺鏈伄鐝惧湪銇姸鎱嬨伀鍩恒仴銇勩仸鍙嶅京銈儵銉笺儬銇偣銈便偢銉ャ兗銉倰鍐嶈ō瀹氥仐銇俱仚銆� 銇撱伄鏂规硶銇儑銉°儶銉冦儓銇€併亾銈屻倝銇儸銈枫兗銉愩伄銇勩仛銈屻亱銇屻儓銉偓銇曘倢銈嬨仧銇炽伀绔湯銇屻偣銉兗銉椼亱銈夊京甯般仚銈嬨亾銇ㄣ仹銇欍亴銆併亾銇亾銇ㄣ伅蹇呰浠ヤ笂銇牷绻併伀鐧虹敓銇欍倠鍙兘鎬с亴銇傘倞銇俱仚銆� 銇撱倢銈堛倞銈傝壇銇勬柟娉曘伅銆佸疅琛屾檪銇儢銉兗銉夈偔銉ｃ偣銉� 銉偡銉笺儛銈掋偑銉炽伨銇熴伅銈儠銇仚銈嬨仺銇勩亞銈傘伄銇с仚鈥�",
        "url":"intl/ja/training/monitoring-device-state/manifest-receivers.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ja",
        "type":"training"
      }, 
      {
        "title":"鎺ョ稓鐘舵厠銇壒瀹氥仺鐩ｈ",
        "titleFriendly":"",
        "summary":"鍙嶅京銈儵銉笺儬銇ㄣ儛銉冦偗銈般儵銈︺兂銉� 銈点兗銉撱偣銇敤閫斻伄銇嗐仭浠ｈ〃鐨勩仾銈傘伄銇ㄣ仐銇︺伅銆併偆銉炽偪銉笺儘銉冦儓 銉偨銉笺偣銇嬨倝銈儣銉伄銉囥兗銈裤倰瀹氭湡鐨勩伀鏇存柊銇欍倠銇熴倎銇偣銈便偢銉ャ兗銉ō瀹氥倓銆併儑銉笺偪銇偔銉ｃ儍銈枫儱銇搞伄鏍肩磵銆侀暦鏅傞枔銇強銇躲儉銈︺兂銉兗銉夈伄瀹熻銇仼銇屻亗銈娿伨銇欍€傘仐銇嬨仐銆併偆銉炽偪銉笺儘銉冦儓銇帴缍氥仌銈屻仸銇勩仾銇勩仺銇嶃倓銆侀€熷害銇屼綆銇欍亷銈嬨仧銈併伀銉€銈︺兂銉兗銉夈倰瀹屼簡銇с亶銇亜鍫村悎銇伨銇с€佹洿鏂般倰銈广偙銈搞儱銉笺儶銉炽偘銇欍倠銇熴倎銇鏈倰銈广儶銉笺儣鐘舵厠銇嬨倝寰╁赴銇曘仜銈嬪繀瑕併亴銇傘倠銇с仐銈囥亞銇嬨€� ConnectivityManager 銈掍娇鐢ㄣ仚銈嬨仺銆佺鏈亴瀹熼殯銇偆銉炽偪銉笺儘銉冦儓鈥�",
        "url":"intl/ja/training/monitoring-device-state/connectivity-monitoring.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"ja",
        "type":"training"
      }, 
      {
        "title":"瀹炴柦鑷€傚簲鐢ㄦ埛鐣岄潰娴佺▼",
        "titleFriendly":"",
        "summary":"鏍规嵁鎮ㄧ殑搴旂敤褰撳墠鏄剧ず鐨勫竷灞€锛岀敤鎴风晫闈㈡祦绋嬪彲鑳戒細鏈夋墍涓嶅悓銆備緥濡傦紝濡傛灉鎮ㄧ殑搴旂敤澶勪簬鍙岄潰鏉挎ā寮忎笅锛岀偣鍑诲乏渚ч潰鏉夸笂鐨勯」鍗冲彲鐩存帴鍦ㄥ彸渚ч潰鏉夸笂鏄剧ず鐩稿叧鍐呭锛涘鏋滆搴旂敤澶勪簬鍗曢潰鏉挎ā寮忎笅锛岀浉鍏冲唴瀹瑰氨搴斾互鍏朵粬娲诲姩鐨勫舰寮忓湪鍚屼竴闈㈡澘涓婃樉绀恒€� 鐢变簬姣忕甯冨眬鐨勫疄鏂介兘浼氱◢鏈変笉鍚岋紝鍥犳鎮ㄥ彲鑳介渶瑕佸厛纭畾褰撳墠鍚戠敤鎴锋樉绀虹殑甯冨眬銆備緥濡傦紝鎮ㄥ彲浠ヤ簡瑙ｇ敤鎴锋墍澶勭殑鏄€滃崟闈㈡澘鈥濇ā寮忚繕鏄€滃弻闈㈡澘鈥濇ā寮忋€傝鍋氬埌杩欎竴鐐癸紝鎮ㄥ彲浠ユ煡璇㈡寚瀹氳鍥炬槸鍚﹀瓨鍦ㄤ互鍙婃槸鍚﹀凡鏄剧ず鍑烘潵銆� 璇锋敞鎰忥紝杩欐浠ｇ爜鐢ㄤ簬鏌ヨ鈥滄姤閬撯€濋潰鏉挎槸鍚﹀彲鐢紝涓庨拡瀵瑰叿浣撳竷灞€鐨勭‖缂栫爜鏌ヨ鐩告瘮锛岃繖娈典唬鐮佺殑鐏垫椿鎬ц澶у緱澶氣€�",
        "url":"intl/zh-cn/training/multiscreen/adaptui.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"zh-cn",
        "type":"training"
      }, 
      {
        "title":"鏀寔鍚勭灞忓箷瀵嗗害",
        "titleFriendly":"",
        "summary":"鏈暀绋嬪皢鍚戞偍浠嬬粛濡備綍閫氳繃鎻愪緵涓嶅悓璧勬簮鍜屼娇鐢ㄧ嫭绔嬩簬鍒嗚鲸鐜囩殑娴嬮噺鍗曚綅鏉ユ敮鎸佷笉鍚屽睆骞曞瘑搴︺€� 鍦ㄨ璁″竷灞€鏃讹紝澶у缁忓父浼氳浣跨敤缁濆鍍忕礌鏉ュ畾涔夎窛绂绘垨灏哄锛屾偍涓€瀹氳閬垮厤鐘繖绉嶉敊璇€傜敱浜庡悇绉嶅睆骞曠殑鍍忕礌瀵嗗害閮芥湁鎵€涓嶅悓锛屽洜姝ょ浉鍚屾暟閲忕殑鍍忕礌鍦ㄤ笉鍚岃澶囦笂鐨勫疄闄呭ぇ灏忎篃鏈夋墍宸紓锛岃繖鏍蜂娇鐢ㄥ儚绱犲畾涔夊竷灞€灏哄灏变細浜х敓闂銆傚洜姝わ紝璇峰姟蹇呬娇鐢� dp 鎴� sp 鍗曚綅鎸囧畾灏哄銆� dp 鏄竴绉嶉潪瀵嗗害鍒剁害鍍忕礌锛屽叾灏哄涓� 160 dpi 鍍忕礌鐨勫疄闄呭昂瀵哥浉鍚屻€� sp 涔熸槸涓€绉嶅熀鏈崟浣嶏紝浣嗗畠鍙牴鎹敤鎴风殑鍋忓ソ鏂囧瓧澶у皬杩涜璋冩暣锛堝嵆灏哄害鐙珛鎬у儚绱狅級锛屽洜姝ゆ偍搴斿皢璇ユ祴閲忓崟浣嶇敤浜庡畾涔夋枃瀛楀ぇ灏忊€�",
        "url":"intl/zh-cn/training/multiscreen/screendensities.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"zh-cn",
        "type":"training"
      }, 
      {
        "title":"鏀寔鍚勭灞忓箷灏哄",
        "titleFriendly":"",
        "summary":"姝ゆ暀绋嬪皢鍚戞偍浠嬬粛濡備綍閫氳繃浠ヤ笅鏂规硶鏀寔鍚勭灏哄鐨勫睆骞曪細 瑕佺‘淇濆竷灞€鐨勭伒娲绘€у苟閫傚簲鍚勭灏哄鐨勫睆骞曪紝鎮ㄥ簲浣跨敤 &quot;wrap_content&quot; 鍜� &quot;match_parent&quot; 鎺у埗鏌愪簺瑙嗗浘缁勪欢鐨勫搴﹀拰楂樺害銆傚鏋滄偍浣跨敤 &quot;wrap_content&quot; 锛岀郴缁熷氨浼氬皢瑙嗗浘鐨勫搴︽垨楂樺害璁剧疆鎴愭墍闇€鐨勬渶灏忓昂瀵镐互閫傚簲瑙嗗浘涓殑鍐呭锛岃€� &quot;match_parent&quot; 锛堝湪浣庝簬 API 绾у埆 8 鐨勭骇鍒腑绉颁负 &quot;fill_parent&quot鈥�",
        "url":"intl/zh-cn/training/multiscreen/screensizes.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/layout-hvga.png",
        "lang":"zh-cn",
        "type":"training"
      }, 
      {
        "title":"閽堝澶氱灞忓箷杩涜璁捐",
        "titleFriendly":"",
        "summary":"Android 鏀寔鏁扮櫨绉嶅睆骞曞昂瀵镐笉鍚岀殑璁惧锛屽寘鎷皬鍨嬫墜鏈哄拰澶у瀷鐢佃鏈恒€傚洜姝わ紝璇峰姟蹇呭皢鎮ㄧ殑搴旂敤璁捐涓轰笌鎵€鏈夌殑灞忓箷灏哄鍏煎锛屼互渚胯灏藉彲鑳藉鐨勭敤鎴蜂娇鐢ㄨ搴旂敤銆� 涓嶈繃锛屼笌鍚勭绫诲瀷鐨勮澶囧吋瀹硅繕杩滆繙涓嶅銆傜敱浜庡悇绉嶅睆骞曞昂瀵稿鐢ㄦ埛浜掑姩浜х敓鐨勫埄寮婃湁鎵€涓嶅悓锛屽洜姝よ鐪熸婊¤冻鐢ㄦ埛闇€姹傚苟骞胯幏濂借瘎锛屾偍鐨勫簲鐢ㄤ笉浠呴渶瑕佹敮鎸佸绉嶅睆骞曪紝杩樺簲閽堝鍚勭被灞忓箷閰嶇疆鐨勭敤鎴蜂綋楠岃繘琛屼紭鍖栥€� 鏈暀绋嬪皢鍚戞偍浠嬬粛濡備綍閽堝澶氱灞忓箷閰嶇疆浼樺寲鍜屽疄鏂界浉搴旂殑鐢ㄦ埛鐣岄潰銆� 鍚勬暀绋嬩腑閮芥彁鍙婁簡涓€绉嶆潵鑷竴涓ず渚嬪簲鐢ㄧ殑浠ｇ爜锛岃搴旂敤灞曠ず浜嗗叧浜庨拡瀵瑰绉嶅垎杈ㄧ巼杩涜浼樺寲鐨勬渶浣冲疄璺碘€�",
        "url":"intl/zh-cn/training/multiscreen/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"zh-cn",
        "type":"training"
      }, 
      {
        "title":"纭畾鍜岀洃鎺у熀搴у鎺ョ姸鎬佸拰绫诲瀷",
        "titleFriendly":"",
        "summary":"Android 璁惧鏀寔鍑犵涓嶅悓绫诲瀷鐨勫熀搴с€傝繖浜涚被鍨嬪寘鎷溅杞芥垨瀹剁敤鍩哄骇浠ュ強鏁板瓧鍜屾ā鎷熷熀搴с€傝澶氬熀搴у彲鐢ㄤ簬涓烘彃鍏ョ殑璁惧鍏呯數锛屽洜姝ゅ熀搴х姸鎬侀€氬父涓庡厖鐢电姸鎬佺揣瀵嗙浉鍏炽€� 鎮ㄥ彲浠ユ牴鎹墜鏈虹殑鍩哄骇鐘舵€佽皟鏁存洿鏂伴鐜囷紝鍏蜂綋鍙栧喅浜庣浉鍏冲簲鐢ㄣ€傚鏋滆澶囨彃鍏ョ殑鏄闈㈠熀搴э紝鎮ㄥ氨鍙互鎻愰珮浣撹偛涓績绫诲簲鐢ㄧ殑鏇存柊棰戠巼锛涘鏋滆澶囨彃鍏ョ殑鏄溅杞藉熀搴э紝鎮ㄥ氨鍙互瀹屽叏鍋滅敤姝ょ被鏇存柊銆傜浉鍙嶏紝濡傛灉璁惧鎻掑叆鐨勬槸杞﹁浇鍩哄骇涓斿悗鍙版湇鍔℃鍦ㄦ洿鏂拌矾鍐碉紝鎮ㄥ氨鍙互鏈€澶х▼搴﹀湴鎻愰珮鏇存柊棰戠巼銆� 绯荤粺鏄互鎸佺画 Intent 鐨勫舰寮忓箍鎾熀搴х姸鎬佺殑锛岃繖鏍锋偍灏卞彲浠ユ煡璇㈣澶囨槸鍚︽彃鍏ヤ簡鍩哄骇鈥�",
        "url":"intl/zh-cn/training/monitoring-device-state/docking-monitoring.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"zh-cn",
        "type":"training"
      }, 
      {
        "title":"鐩戞帶鐢垫睜鐢甸噺鍜屽厖鐢电姸鎬�",
        "titleFriendly":"",
        "summary":"濡傛灉鎮ㄨ鏇存敼鍚庡彴鏇存柊棰戠巼锛屼粠鑰屽噺灏戞洿鏂板鐢垫睜浣跨敤鏃堕棿鐨勫奖鍝嶏紝鏈€濂藉厛鏌ョ湅褰撳墠鐨勭數姹犵數閲忓拰鍏呯數鐘舵€併€� 瀵瑰簲鐢ㄨ繘琛屾洿鏂颁細褰卞搷鐢垫睜浣跨敤鏃堕棿锛屽叿浣撳彇鍐充簬璁惧鐨勭數姹犵數閲忓拰鍏呯數鐘舵€併€傚鏋滅敤鎴锋鍦ㄩ€氳繃浜ゆ祦鐢垫簮涓鸿澶囧厖鐢碉紝鏇存柊搴旂敤鐨勫奖鍝嶅氨鍙互蹇界暐涓嶈銆傚洜姝わ紝鍦ㄥぇ澶氭暟鎯呭喌涓嬶紝鍙璁惧杩炴帴浜嗗厖鐢靛櫒锛屾偍灏卞彲浠ユ渶澶х▼搴﹀湴鎻愰珮鍒锋柊棰戠巼銆傜浉鍙嶏紝濡傛灉璁惧鍦ㄦ秷鑰楃數姹犵數閲忥紝閭ｄ箞闄嶄綆鏇存柊棰戠巼灏卞彲浠ュ欢闀跨數姹犱娇鐢ㄦ椂闂淬€� 鍚屾牱锛屾偍涔熷彲浠ユ煡鐪嬬數姹犵數閲忥紝濡傛灉鐢甸噺鍗冲皢鑰楀敖锛屾偍灏卞彲浠ラ檷浣庢洿鏂伴鐜囷紝鐢氳嚦鍋滄鏇存柊銆� 璇峰厛纭畾褰撳墠鐨勫厖鐢电姸鎬併€侭atteryManager鈥�",
        "url":"intl/zh-cn/training/monitoring-device-state/battery-monitoring.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"zh-cn",
        "type":"training"
      }, 
      {
        "title":"浼樺寲鐢垫睜浣跨敤鏃堕棿",
        "titleFriendly":"",
        "summary":"涓轰簡鎵撻€犱竴涓紭绉€鐨勫簲鐢紝鎮ㄥ簲璁炬硶闄嶄綆搴旂敤瀵圭數姹犱娇鐢ㄦ椂闂寸殑褰卞搷銆傞槄璇诲畬鏈暀绋嬪悗锛屾偍灏卞彲浠ヨ鑷繁鏋勫缓鐨勫簲鐢ㄦ牴鎹叾鎵€鍦ㄨ澶囩殑鐘舵€佹潵鐩戞帶鍜岃皟鏁磋嚜韬殑鍔熻兘鍜岃涓恒€� 瑕佺‘淇濆湪涓嶅奖鍝嶇敤鎴蜂綋楠岀殑鎯呭喌涓嬫渶澶х▼搴﹀湴闄嶄綆搴旂敤瀵圭數姹犱娇鐢ㄦ椂闂寸殑褰卞搷锛屾偍鍙互閲囧彇涓€浜涙帾鏂斤紝渚嬪鍦ㄧ綉缁滆繛鎺ユ柇寮€鏃跺仠鐢ㄥ悗鍙版湇鍔℃洿鏂帮紝鎴栧湪鐢垫睜鐢甸噺杈冧綆鏃堕檷浣庢绫绘洿鏂扮殑棰戠巼銆傗€�",
        "url":"intl/zh-cn/training/monitoring-device-state/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"zh-cn",
        "type":"training"
      }, 
      {
        "title":"鏍规嵁闇€瑕佹搷浣滃箍鎾帴鏀跺櫒",
        "titleFriendly":"",
        "summary":"鐩戞帶璁惧鐘舵€佸彉鍖栫殑鏈€绠€鍗曟柟娉曞氨鏄紝涓烘偍鐩戞帶鐨勬瘡绉嶇姸鎬佸垱寤� BroadcastReceiver 骞跺湪搴旂敤娓呭崟涓€愪竴杩涜娉ㄥ唽銆傜劧鍚庯紝鎮ㄥ彧闇€鏍规嵁褰撳墠璁惧鐘舵€佸湪姣忎釜鎺ユ敹鍣ㄤ腑閲嶆柊瀹夋帓閲嶅鎻愰啋鍗冲彲銆� 姝ゆ柟娉曠殑璐熼潰褰卞搷鍦ㄤ簬锛屽彧瑕佺郴缁熻Е鍙戜簡杩欎簺鎺ユ敹鍣ㄤ腑鐨勪换浣曚竴涓紝鐩稿叧搴旂敤灏变細鍞ら啋璁惧锛屽叾棰戠巼鍙兘浼氳繙杩滆秴杩囨墍闇€鐨勬按骞炽€� 鏇村ソ鐨勬柟娉曟槸鍦ㄨ繍琛屾椂鍋滅敤鎴栧惎鐢ㄥ箍鎾帴鏀跺櫒銆傝繖鏍风殑璇濓紝鎮ㄥ氨鍙互灏嗚嚜宸卞湪娓呭崟涓０鏄庣殑鎺ユ敹鍣ㄧ敤浣滆鍔ㄦ彁閱掞紝鍙湁鍦ㄩ渶瑕佹椂鎵嶄細鐢辩郴缁熶簨浠惰Е鍙戙€� 鎮ㄥ彲浠ヤ娇鐢� PackageManager 鍒囨崲娓呭崟涓畾涔夌殑浠绘剰缁勪欢鐨勫惎鐢ㄧ姸鎬佲€�",
        "url":"intl/zh-cn/training/monitoring-device-state/manifest-receivers.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"zh-cn",
        "type":"training"
      }, 
      {
        "title":"纭畾鍜岀洃鎺х綉缁滆繛鎺ョ姸鎬�",
        "titleFriendly":"",
        "summary":"閲嶅鎻愰啋鍜屽悗鍙版湇鍔℃渶甯歌鐨勭敤閫斾箣涓€锛屽氨鏄负鏉ヨ嚜浜掕仈缃戣祫婧愮殑搴旂敤鏁版嵁銆佺紦瀛樻暟鎹畨鎺掑畾鏈熸洿鏂版垨鎵ц闀挎椂闂磋繍琛岀殑涓嬭浇浠诲姟銆備絾鏄紝濡傛灉鎮ㄦ病鏈夎繛鎺ヤ簰鑱旂綉锛屾垨鍥犺繛鎺ヨ繃鎱㈣€屾棤娉曞畬鎴愪笅杞斤紝閭ｅ氨鏍规湰娌″繀瑕佸敜閱掕澶囧苟瀹夋帓鏇存柊浜嗐€� 鎮ㄥ彲浠ヤ娇鐢� ConnectivityManager 鏌ョ湅鏄惁纭疄宸茶繛鎺ヤ簰鑱旂綉锛屽鏋滃凡杩炴帴锛屾偍杩樺彲浠ヤ簡瑙ｅ綋鍓嶇殑杩炴帴绫诲瀷銆� 濡傛灉璁惧鏈繛鎺ヤ簰鑱旂綉锛屽氨娌℃湁蹇呰鏍规嵁浜掕仈缃戣祫婧愬畨鎺掓洿鏂颁簡銆備互涓嬩唬鐮佹璇存槑濡備綍浣跨敤 ConnectivityManager 鏌ヨ鏈夋晥缃戠粶骞剁‘瀹氳缃戠粶鏄惁宸茶繛鎺ヤ簰鑱旂綉銆� 鎮ㄤ篃鍙互纭畾褰撳墠鍙敤鐨勪簰鑱旂綉杩炴帴鐨勭被鍨嬧€�",
        "url":"intl/zh-cn/training/monitoring-device-state/connectivity-monitoring.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"zh-cn",
        "type":"training"
      }, 
      {
        "title":"C贸mo implementar interfaces de usuario adaptables",
        "titleFriendly":"",
        "summary":"En funci贸n del dise帽o actual de tu aplicaci贸n, la interfaz puede variar. Por ejemplo, si tu aplicaci贸n est谩 en modo de panel dual, haz clic en un elemento del panel izquierdo para que aparezca en el panel de la derecha. Asimismo, si est谩 en modo de panel鈥�",
        "url":"intl/es/training/multiscreen/adaptui.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"es",
        "type":"training"
      }, 
      {
        "title":"C贸mo admitir varias densidades de pantalla",
        "titleFriendly":"",
        "summary":"En esta secci贸n se explica c贸mo proporcionar diferentes recursos y utilizar unidades de medida de resoluci贸n independiente para admitir diferentes densidades de pantalla. Un error com煤n que debes evitar al crear tus dise帽os es utilizar p铆xeles absolutos鈥�",
        "url":"intl/es/training/multiscreen/screendensities.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"es",
        "type":"training"
      }, 
      {
        "title":"C贸mo admitir varios tama帽os de pantalla",
        "titleFriendly":"",
        "summary":"En esta secci贸n se explica c贸mo admitir varios tama帽os de pantalla. Para ello, sigue estos pasos: Para garantizar que el dise帽o es flexible y que se adapta a varios tama帽os de pantalla, debes utilizar los valores &quot;wrap_content&quot; y &quot;match_parent鈥�",
        "url":"intl/es/training/multiscreen/screensizes.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/layout-hvga.png",
        "lang":"es",
        "type":"training"
      }, 
      {
        "title":"C贸mo dise帽ar aplicaciones para varias pantallas",
        "titleFriendly":"",
        "summary":"Android se utiliza en cientos de dispositivos con diferentes tama帽os de pantalla, desde peque帽os tel茅fonos hasta enormes televisores. Por ello, es importante que dise帽es tu aplicaci贸n para que sea compatible con todos los tama帽os de pantalla y est茅 disponible鈥�",
        "url":"intl/es/training/multiscreen/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"es",
        "type":"training"
      }, 
      {
        "title":"C贸mo determinar y controlar el tipo de conector y el estado de la conexi贸n",
        "titleFriendly":"",
        "summary":"Los dispositivos Android se pueden conectar a distintos tipos de conectores. Por ejemplo, se puede utilizar conectores para coche o dom茅sticos y tanto digitales como anal贸gicos. Normalmente, el estado del conector est谩 vinculado al estado de carga, ya鈥�",
        "url":"intl/es/training/monitoring-device-state/docking-monitoring.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"es",
        "type":"training"
      }, 
      {
        "title":"C贸mo controlar el nivel de bater铆a y el estado de carga",
        "titleFriendly":"",
        "summary":"Al modificar la frecuencia de las actualizaciones en segundo plano para reducir el efecto de las mismas en la duraci贸n de la bater铆a, te recomendamos que comiences por comprobar el estado de carga y el nivel actual de la bater铆a. El impacto derivado de鈥�",
        "url":"intl/es/training/monitoring-device-state/battery-monitoring.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"es",
        "type":"training"
      }, 
      {
        "title":"C贸mo optimizar la duraci贸n de la bater铆a",
        "titleFriendly":"",
        "summary":"Uno de los objetivos de tu aplicaci贸n debe ser limitar su impacto en la duraci贸n de la bater铆a del dispositivo en el que est茅 instalada. Despu茅s de leer estas secciones, podr谩s desarrollar aplicaciones que optimizar谩n el uso de la bater铆a en funci贸n del鈥�",
        "url":"intl/es/training/monitoring-device-state/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"es",
        "type":"training"
      }, 
      {
        "title":"C贸mo manipular los receptores de emisi贸n bajo demanda",
        "titleFriendly":"",
        "summary":"La forma m谩s sencilla de controlar los cambios en el estado del dispositivo es crear un BroadcastReceiver para cada estado que vayas a controlar y registrar cada uno de ellos en el archivo de manifiesto de tu aplicaci贸n. A continuaci贸n, en cada uno de鈥�",
        "url":"intl/es/training/monitoring-device-state/manifest-receivers.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"es",
        "type":"training"
      }, 
      {
        "title":"C贸mo determinar y controlar el estado de la conectividad",
        "titleFriendly":"",
        "summary":"Algunos de los usos m谩s comunes para las alarmas con repetici贸n y los servicios en segundo plano es programar actualizaciones regulares de los datos de aplicaciones a partir de recursos de Internet, almacenar datos en la memoria cach茅 o ejecutar descargas鈥�",
        "url":"intl/es/training/monitoring-device-state/connectivity-monitoring.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"es",
        "type":"training"
      }, 
      {
        "title":"Implementing Adaptative UI Flows",
        "titleFriendly":"",
        "summary":"Depending on the layout that your application is currently showing, the UI flow may be different. For example, if your application is in the dual-pane mode, clicking on an item on the left pane will simply display the content on the right pane; if it 鈥�",
        "url":"training/multiscreen/adaptui.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Supporting Different Densities",
        "titleFriendly":"",
        "summary":"Providing sets of layouts and drawable resources for specific ranges of device screens.",
        "url":"training/multiscreen/screendensities.html",
        "group":"",
        "keywords": [],
        "tags": ["multiplescreens"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Supporting Different Screen Sizes",
        "titleFriendly":"",
        "summary":"This lesson shows you how to support different screen sizes by: To ensure that your layout is flexible and adapts to different screen sizes, you should use &quot;wrap_content&quot; and &quot;match_parent&quot; for the width and height of some view components鈥�",
        "url":"training/multiscreen/screensizes.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/layout-hvga.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Designing for Multiple Screens",
        "titleFriendly":"",
        "summary":"Training on how to add intuitive, effective navigation for tablets and other devices.",
        "url":"training/multiscreen/index.html",
        "group":"",
        "keywords": ["tablet","tv","fragments","support"],
        "tags": ["tablet","tv","fragments","support"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Requesting a Shared File",
        "titleFriendly":"",
        "summary":"When an app wants to access a file shared by another app, the requesting app (the client) usually sends a request to the app sharing the files (the server). In most cases, the request starts an Activity in the server app that displays the files it can鈥�",
        "url":"training/secure-file-sharing/request-file.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Sharing a File",
        "titleFriendly":"",
        "summary":"Once you have set up your app to share files using content URIs, you can respond to other apps&#39; requests for those files. One way to respond to these requests is to provide a file selection interface from the server app that other applications can鈥�",
        "url":"training/secure-file-sharing/share-file.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Retrieving File Information",
        "titleFriendly":"",
        "summary":"Before a client app tries to work with a file for which it has a content URI, the app can request information about the file from the server app, including the file&#39;s data type and file size. The data type helps the client app to determine if it can鈥�",
        "url":"training/secure-file-sharing/retrieve-info.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Setting Up File Sharing",
        "titleFriendly":"",
        "summary":"To securely offer a file from your app to another app, you need to configure your app to offer a secure handle to the file, in the form of a content URI. The Android FileProvider component generates content URIs for files, based on specifications you 鈥�",
        "url":"training/secure-file-sharing/setup-sharing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Sharing Files",
        "titleFriendly":"",
        "summary":"Apps often have a need to offer one or more of their files to another app. For example, an image gallery may want to offer files to image editors, or a file management app may want to allow users to copy and paste files between areas in external storage鈥�",
        "url":"training/secure-file-sharing/index.html",
        "group":"",
        "keywords": ["fileprovider","share","contentprovider"],
        "tags": ["fileprovider","share","contentprovider"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating a Custom Account Type",
        "titleFriendly":"",
        "summary":"So far we&#39;ve talked about accessing Google APIs, which use accounts and users defined by Google. If you have your own online service, though, it won&#39;t have Google accounts or users, so what do you do? It turns out to be relatively straightforward鈥�",
        "url":"training/id-auth/custom_auth.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Authenticating to OAuth2 Services",
        "titleFriendly":"",
        "summary":"In order to securely access an online service, users need to authenticate to the service鈥攖hey need to provide proof of their identity. For an application that accesses a third-party service, the security problem is even more complicated. Not only does鈥�",
        "url":"training/id-auth/authenticate.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/oauth_dance.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Remembering Your User",
        "titleFriendly":"",
        "summary":"Everyone likes it when you remember their name. One of the simplest, most effective things you can do to make your app more lovable is to remember who your user is鈥攅specially when the user upgrades to a new device or starts carrying a tablet as well as鈥�",
        "url":"training/id-auth/identify.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Remembering Users",
        "titleFriendly":"",
        "summary":"Android users get attached to their devices and to applications that they love. One way to make your application lovable is to make it personal. Android devices know who your user is, what services they have access to, and where they store your data. 鈥�",
        "url":"training/id-auth/index.html",
        "group":"",
        "keywords": ["privacy","oauth","accounts"],
        "tags": ["privacy","oauth","accounts"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Supporting Different Languages",
        "titleFriendly":"",
        "summary":"It鈥檚 always a good practice to extract UI strings from your app code and keep them in an external file. Android makes this easy with a resources directory in each Android project. If you created your project using the Android SDK Tools (read Creating 鈥�",
        "url":"training/basics/supporting-devices/languages.html",
        "group":"",
        "keywords": ["localizing","localization","resources","formats","l10n"],
        "tags": ["localizing","localization","resources","formats","l10n"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Supporting Different Platform Versions",
        "titleFriendly":"",
        "summary":"Training on how to declare support for minimum and target API levels.",
        "url":"training/basics/supporting-devices/platforms.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Supporting Different Screens",
        "titleFriendly":"",
        "summary":"Android categorizes device screens using two general properties: size and density. You should expect that your app will be installed on devices with screens that range in both size and density. As such, you should include some alternative resources that鈥�",
        "url":"training/basics/supporting-devices/screens.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Supporting Different Devices",
        "titleFriendly":"",
        "summary":"Android devices come in many shapes and sizes all around the world. With a wide range of device types, you have an opportunity to reach a huge audience with your app. In order to be as successful as possible on Android, your app needs to adapt to various鈥�",
        "url":"training/basics/supporting-devices/index.html",
        "group":"",
        "keywords": ["resources","screens","versions","localization"],
        "tags": ["resources","screens","versions","localization"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Connecting to the Network",
        "titleFriendly":"",
        "summary":"This lesson shows you how to implement a simple application that connects to the network. It explains some of the best practices you should follow in creating even the simplest network-connected app. Note that to perform the network operations described鈥�",
        "url":"training/basics/network-ops/connecting.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Parsing XML Data",
        "titleFriendly":"",
        "summary":"Extensible Markup Language (XML) is a set of rules for encoding documents in machine-readable form. XML is a popular format for sharing data on the internet. Websites that frequently update their content, such as news sites or blogs, often provide an 鈥�",
        "url":"training/basics/network-ops/xml.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Managing Network Usage",
        "titleFriendly":"",
        "summary":"This lesson describes how to write applications that have fine-grained control over their usage of network resources. If your application performs a lot of network operations, you should provide user settings that allow users to control your app鈥檚 data鈥�",
        "url":"training/basics/network-ops/managing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/basics/network-settings1.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Performing Network Operations",
        "titleFriendly":"",
        "summary":"This class explains the basic tasks involved in connecting to the network, monitoring the network connection (including connection changes), and giving users control over an app&#39;s network usage. It also describes how to parse and consume XML data.鈥�",
        "url":"training/basics/network-ops/index.html",
        "group":"",
        "keywords": ["network","wireless"],
        "tags": ["network","wireless"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Allowing Other Apps to Start Your Activity",
        "titleFriendly":"",
        "summary":"The previous two lessons focused on one side of the story: starting another app&#39;s activity from your app. But if your app can perform an action that might be useful to another app, your app should be prepared to respond to action requests from other鈥�",
        "url":"training/basics/intents/filters.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Sending the User to Another App",
        "titleFriendly":"",
        "summary":"One of Android&#39;s most important features is an app&#39;s ability to send the user to another app based on an &quot;action&quot; it would like to perform. For example, if your app has the address of a business that you&#39;d like to show on a map, 鈥�",
        "url":"training/basics/intents/sending.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/basics/intents-choice.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Interacting with Other Apps",
        "titleFriendly":"",
        "summary":"An Android app typically has several activities . Each activity displays a user interface that allows the user to perform a specific task (such as view a map or take a photo). To take the user from one activity to another, your app must use an Intent 鈥�",
        "url":"training/basics/intents/index.html",
        "group":"",
        "keywords": ["intents","activity"],
        "tags": ["intents","activity"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Getting a Result from an Activity",
        "titleFriendly":"",
        "summary":"Starting another activity doesn&#39;t have to be one-way. You can also start another activity and receive a result back. To receive a result, call startActivityForResult() (instead of startActivity()). For example, your app can start a camera app and 鈥�",
        "url":"training/basics/intents/result.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Recreating an Activity",
        "titleFriendly":"",
        "summary":"There are a few scenarios in which your activity is destroyed due to normal app behavior, such as when the user presses the Back button or your activity signals its own destruction by calling finish(). The system may also destroy your activity if it&#39鈥�",
        "url":"training/basics/activity-lifecycle/recreating.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/basics/basic-lifecycle-savestate.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Starting an Activity",
        "titleFriendly":"",
        "summary":"Unlike other programming paradigms in which apps are launched with a main() method, the Android system initiates code in an Activity instance by invoking specific callback methods that correspond to specific stages of its lifecycle. There is a sequence鈥�",
        "url":"training/basics/activity-lifecycle/starting.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/basics/basic-lifecycle.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Stopping and Restarting an Activity",
        "titleFriendly":"",
        "summary":"Properly stopping and restarting your activity is an important process in the activity lifecycle that ensures your users perceive that your app is always alive and doesn&#39;t lose their progress. There are a few of key scenarios in which your activity鈥�",
        "url":"training/basics/activity-lifecycle/stopping.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/basics/basic-lifecycle-stopped.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Managing the Activity Lifecycle",
        "titleFriendly":"",
        "summary":"As a user navigates through, out of, and back to your app, the Activity instances in your app transition between different states in their lifecycle. For instance, when your activity starts for the first time, it comes to the foreground of the system 鈥�",
        "url":"training/basics/activity-lifecycle/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Pausing and Resuming an Activity",
        "titleFriendly":"",
        "summary":"During normal app use, the foreground activity is sometimes obstructed by other visual components that cause the activity to pause . For example, when a semi-transparent activity opens (such as one in the style of a dialog), the previous activity pauses鈥�",
        "url":"training/basics/activity-lifecycle/pausing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/basics/basic-lifecycle-paused.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Starting Another Activity",
        "titleFriendly":"",
        "summary":"After completing the previous lesson , you have an app that shows an activity (a single screen) with a text field and a button. In this lesson, you鈥檒l add some code to MainActivity that starts a new activity when the user clicks the Send button. To respond鈥�",
        "url":"training/basics/firstapp/starting-activity.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/firstapp/adt-new-activity.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating an Android Project",
        "titleFriendly":"",
        "summary":"An Android project contains all the files that comprise the source code for your Android app. The Android SDK tools make it easy to start a new Android project with a set of default project directories and files. This lesson shows how to create a new 鈥�",
        "url":"training/basics/firstapp/creating-project.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/tools/eclipse-new.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Building a Simple User Interface",
        "titleFriendly":"",
        "summary":"The graphical user interface for an Android app is built using a hierarchy of View and ViewGroup objects. View objects are usually UI widgets such as buttons or text fields and ViewGroup objects are invisible view containers that define how the child 鈥�",
        "url":"training/basics/firstapp/building-ui.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/viewgroup.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Running Your App",
        "titleFriendly":"",
        "summary":"If you followed the previous lesson to create an Android project, it includes a default set of &quot;Hello World&quot; source files that allow you to immediately run the app. How you run your app depends on two things: whether you have a real Android-powered鈥�",
        "url":"training/basics/firstapp/running-app.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/tools/eclipse-run.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Building Your First App",
        "titleFriendly":"",
        "summary":"If you're new to Android app development, this where you should begin. This series of lessons shows you how to create a new project, build a simple app, and run it on a device or emulator.",
        "url":"training/basics/firstapp/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating a Fragment",
        "titleFriendly":"",
        "summary":"You can think of a fragment as a modular section of an activity, which has its own lifecycle, receives its own input events, and which you can add or remove while the activity is running (sort of like a &quot;sub activity&quot; that you can reuse in different鈥�",
        "url":"training/basics/fragments/creating.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Building a Flexible UI",
        "titleFriendly":"",
        "summary":"When designing your application to support a wide range of screen sizes, you can reuse your fragments in different layout configurations to optimize the user experience based on the available screen space. For example, on a handset device it might be 鈥�",
        "url":"training/basics/fragments/fragment-ui.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/basics/fragments-screen-mock.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Using the Support Library",
        "titleFriendly":"",
        "summary":"The Android Support Library provides a JAR file with an API library that allows you to use some of the more recent Android APIs in your app while running on earlier versions of Android. For instance, the Support Library provides a version of the Fragment鈥�",
        "url":"training/basics/fragments/support-lib.html",
        "group":"",
        "keywords": ["support library"],
        "tags": ["supportlibrary"],
        "image":"images/training/basics/sdk-manager.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Communicating with Other Fragments",
        "titleFriendly":"",
        "summary":"In order to reuse the Fragment UI components, you should build each as a completely self-contained, modular component that defines its own layout and behavior. Once you have defined these reusable Fragments, you can associate them with an Activity and鈥�",
        "url":"training/basics/fragments/communicating.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Building a Dynamic UI with Fragments",
        "titleFriendly":"",
        "summary":"To create a dynamic and multi-pane user interface on Android, you need to encapsulate UI components and activity behaviors into modules that you can swap into and out of your activities. You can create these modules with the Fragment class, which behaves鈥�",
        "url":"training/basics/fragments/index.html",
        "group":"",
        "keywords": ["fragments","user interface","support library"],
        "tags": ["fragments","userinterface","supportlibrary"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Adding Action Buttons",
        "titleFriendly":"",
        "summary":"The action bar allows you to add buttons for the most important action items relating to the app&#39;s current context. Those that appear directly in the action bar with an icon and&#47;or text are known as action buttons . Actions that can&#39;t fit 鈥�",
        "url":"training/basics/actionbar/adding-buttons.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/basics/actionbar-actions.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Adding the Action Bar",
        "titleFriendly":"",
        "summary":"Action Bar The action bar is one of the most important design elements you can implement for your app&#39;s activities. It provides several user interface features that make your app immediately familiar to users by offering consistency between other 鈥�",
        "url":"training/basics/actionbar/index.html",
        "group":"",
        "keywords": ["actionbar"],
        "tags": ["actionbar"],
        "image":"images/training/basics/actionbar-actions.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Overlaying the Action Bar",
        "titleFriendly":"",
        "summary":"By default, the action bar appears at the top of your activity window, slightly reducing the amount of space available for the rest of your activity&#39;s layout. If, during the course of user interaction, you want to hide and show the action bar, you鈥�",
        "url":"training/basics/actionbar/overlaying.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/basics/actionbar-overlay@2x.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Styling the Action Bar",
        "titleFriendly":"",
        "summary":"The action bar provides your users a familiar and predictable way to perform actions and navigate your app, but that doesn&#39;t mean it needs to look exactly the same as it does in other apps. If you want to style the action bar to better fit your product鈥�",
        "url":"training/basics/actionbar/styling.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/basics/actionbar-theme-dark@2x.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Setting Up the Action Bar",
        "titleFriendly":"",
        "summary":"In its most basic form, the action bar displays the title for the activity and the app icon on the left. Even in this simple form, the action bar is useful for all activities to inform users about where they are and to maintain a consistent identity for鈥�",
        "url":"training/basics/actionbar/setting-up.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/basics/actionbar-basic.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Saving Files",
        "titleFriendly":"",
        "summary":"Android uses a file system that&#39;s similar to disk-based file systems on other platforms. This lesson describes how to work with the Android file system to read and write files with the File APIs. A File object is suited to reading or writing large鈥�",
        "url":"training/basics/data-storage/files.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Saving Data in SQL Databases",
        "titleFriendly":"",
        "summary":"Saving data to a database is ideal for repeating or structured data, such as contact information. This class assumes that you are familiar with SQL databases in general and helps you get started with SQLite databases on Android. The APIs you&#39;ll need鈥�",
        "url":"training/basics/data-storage/databases.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Saving Data",
        "titleFriendly":"",
        "summary":"Most Android apps need to save data, even if only to save information about the app state during onPause() so the user&#39;s progress is not lost. Most non-trivial apps also need to save user settings, and some apps must manage large amounts of information鈥�",
        "url":"training/basics/data-storage/index.html",
        "group":"",
        "keywords": ["data storage","files","sql","database","preferences"],
        "tags": ["datastorage","files","sql","database","preferences"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Saving Key-Value Sets",
        "titleFriendly":"",
        "summary":"If you have a relatively small collection of key-values that you&#39;d like to save, you should use the SharedPreferences APIs. A SharedPreferences object points to a file containing key-value pairs and provides simple methods to read and write them. 鈥�",
        "url":"training/basics/data-storage/shared-preferences.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Using Big View Styles",
        "titleFriendly":"",
        "summary":"Notifications in the notification drawer appear in two main visual styles, normal view and big view. The big view of a notification only appears when the notification is expanded. This happens when the notification is at the top of the drawer, or the 鈥�",
        "url":"training/notify-user/expanded.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/notifications-normalview.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Preserving Navigation when Starting an Activity",
        "titleFriendly":"",
        "summary":"Part of designing a notification is preserving the user&#39;s expected navigation experience. For a detailed discussion of this topic, see the Notifications API guide. There are two general situations: To set up a PendingIntent that starts a direct entry鈥�",
        "url":"training/notify-user/navigation.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Updating Notifications",
        "titleFriendly":"",
        "summary":"When you need to issue a notification multiple times for the same type of event, you should avoid making a completely new notification. Instead, you should consider updating a previous notification, either by changing some of its values or by adding to鈥�",
        "url":"training/notify-user/managing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Building a Notification",
        "titleFriendly":"",
        "summary":"This lesson explains how to create and issue a notification. The examples in this class are based on the Builder class. Builder is in the Support Library . You should use NotificationCompat and its subclasses, particularly Builder, to provide the best鈥�",
        "url":"training/notify-user/build-notification.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Notifying the User",
        "titleFriendly":"",
        "summary":"A notification is a user interface element that you display outside your app&#39;s normal UI to indicate that an event has occurred. Users can choose to view the notification while using other apps and respond to it when it&#39;s convenient for them. 鈥�",
        "url":"training/notify-user/index.html",
        "group":"",
        "keywords": ["notifications"],
        "tags": ["notifications"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Displaying Progress in a Notification",
        "titleFriendly":"",
        "summary":"Notifications can include an animated progress indicator that shows users the status of an ongoing operation. If you can estimate how long the operation takes and how much of it is complete at any time, use the &quot;determinate&quot; form of the indicator鈥�",
        "url":"training/notify-user/display-progress.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/ui/notifications/progress_bar_summary.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Optimizing Layout Hierarchies",
        "titleFriendly":"",
        "summary":"It is a common misconception that using the basic layout structures leads to the most efficient layouts. However, each widget and layout you add to your application requires initialization, layout, and drawing. For example, using nested instances of LinearLayout鈥�",
        "url":"training/improving-layouts/optimizing-layout.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/layout-listitem.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Loading Views On Demand",
        "titleFriendly":"",
        "summary":"Sometimes your layout might require complex views that are rarely used. Whether they are item details, progress indicators, or undo messages, you can reduce memory usage and speed up rendering by loading the views only when they are needed. ViewStub is鈥�",
        "url":"training/improving-layouts/loading-ondemand.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Making ListView Scrolling Smooth",
        "titleFriendly":"",
        "summary":"The key to a smoothly scrolling ListView is to keep the application鈥檚 main thread (the UI thread) free from heavy processing. Ensure you do any disk access, network access, or SQL access in a separate thread. To test the status of your app, you can enable鈥�",
        "url":"training/improving-layouts/smooth-scrolling.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Re-using Layouts with &lt;include&#47;&gt;",
        "titleFriendly":"",
        "summary":"Although Android offers a variety of widgets to provide small and re-usable interactive elements, you might also need to re-use larger components that require a special layout. To efficiently re-use complete layouts, you can use the View, you can do it鈥�",
        "url":"training/improving-layouts/reusing-layouts.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Improving Layout Performance",
        "titleFriendly":"",
        "summary":"DevBytes: Optimising Layouts with Hierarchy Viewer Layouts are a key part of Android applications that directly affect the user experience. If implemented poorly, your layout can lead to a memory hungry application with slow UIs. The Android SDK includes鈥�",
        "url":"training/improving-layouts/index.html",
        "group":"",
        "keywords": ["include","merge","viewstub","listview"],
        "tags": ["include","merge","viewstub","listview"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Using Google Play to Distribute &amp; Monetize",
        "titleFriendly":"",
        "summary":"These classes focus on the business aspects of your app strategy, including techniques for distributing your app on Google Play and techniques for building revenue.鈥�",
        "url":"training/distribute.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating a Manager for Multiple Threads",
        "titleFriendly":"",
        "summary":"The previous lesson showed how to define a task that executes on a separate thread. If you only want to run the task once, this may be all you need. If you want to run a task repeatedly on different sets of data, but you only need one execution running鈥�",
        "url":"training/multiple-threads/create-threadpool.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Communicating with the UI Thread",
        "titleFriendly":"",
        "summary":"In the previous lesson you learned how to start a task on a thread managed by ThreadPoolExecutor. This final lesson shows you how to send data from the task to objects running on the user interface (UI) thread. This feature allows your tasks to do background鈥�",
        "url":"training/multiple-threads/communicate-ui.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Specifying the Code to Run on a Thread",
        "titleFriendly":"",
        "summary":"This lesson shows you how to implement a Runnable class, which runs the code in its run() method on a separate thread. You can also pass a Runnable to another object that can then attach it to a thread and run it. One or more Runnable objects that perform鈥�",
        "url":"training/multiple-threads/define-runnable.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Running Code on a Thread Pool Thread",
        "titleFriendly":"",
        "summary":"The previous lesson showed you how to define a class that manages thread pools and the tasks that run on them. This lesson shows you how to run a task on a thread pool. To do this, you add the task to the pool&#39;s work queue. When a thread becomes available鈥�",
        "url":"training/multiple-threads/run-code.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Sending Operations to Multiple Threads",
        "titleFriendly":"",
        "summary":"The speed and efficiency of a long-running, data-intensive operation often improves when you split it into smaller operations running on multiple threads. On a device that has a CPU with multiple processors (cores), the system can run the threads in parallel鈥�",
        "url":"training/multiple-threads/index.html",
        "group":"",
        "keywords": ["threadpool","runnable"],
        "tags": ["threadpool","runnable"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Resolving Cloud Save Conflicts",
        "titleFriendly":"",
        "summary":"This article describes how to design a robust conflict resolution strategy for apps that save data to the cloud using the Cloud Save service . The Cloud Save service allows you to store application data for each user of an application on Google&#39;s 鈥�",
        "url":"training/cloudsave/conflict-res.html",
        "group":"",
        "keywords": ["cloud"],
        "tags": ["cloud"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Supporting Multiple Game Controllers",
        "titleFriendly":"",
        "summary":"While most games are designed to support a single user per Android device, it&#39;s also possible to support multiple users with game controllers that are connected simultaneously on the same Android device. This lesson covers some basic techniques for鈥�",
        "url":"training/game-controllers/multiple-controllers.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Supporting Controllers Across Android Versions",
        "titleFriendly":"",
        "summary":"If you are supporting game controllers in your game, it&#39;s your responsibility to make sure that your game responds to controllers consistently across devices running on different versions of Android. This lets your game reach a wider audience, and鈥�",
        "url":"training/game-controllers/compatibility.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/backward-compatible-inputmanager.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Handling Controller Actions",
        "titleFriendly":"",
        "summary":"At the system level, Android reports input event codes from game controllers as Android key codes and axis values. In your game, you can receive these codes and values and convert them to specific in-game actions. When players physically connect or wirelessly鈥�",
        "url":"training/game-controllers/controller-input.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/game-controller-profiles.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Supporting Game Controllers",
        "titleFriendly":"",
        "summary":"You can greatly enhance the user experience in your game by letting players use their favorite game controllers. The Android framework provides APIs for detecting and processing user input from game controllers. This class shows how to make your game 鈥�",
        "url":"training/game-controllers/index.html",
        "group":"",
        "keywords": ["game controller"],
        "tags": ["gamecontroller"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Building Apps with User Info &amp; Location",
        "titleFriendly":"",
        "summary":"These classes teach you how to add user personalization to your app. Some of the ways you can do this is by identifying users, providing information that&#39;s relevant to them, and providing information about the world around them.鈥�",
        "url":"training/building-userinfo.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Setting Up a RequestQueue",
        "titleFriendly":"",
        "summary":"Volley: Easy, Fast Networking for Android The previous lesson showed you how to use the convenience method Volley.newRequestQueue to set up a RequestQueue, taking advantage of Volley&#39;s default behaviors. This lesson walks you through the explicit 鈥�",
        "url":"training/volley/requestqueue.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Implementing a Custom Request",
        "titleFriendly":"",
        "summary":"Volley: Easy, Fast Networking for Android This lesson describes how to implement your own custom request types, for types that don&#39;t have out-of-the-box Volley support. For cases where you do need to implement a custom request, this is all you need鈥�",
        "url":"training/volley/request-custom.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Making a Standard Request",
        "titleFriendly":"",
        "summary":"Volley: Easy, Fast Networking for Android This lesson describes how to use the common request types that Volley supports: If your expected response is one of these types, you probably won&#39;t have to implement a custom request. This lesson describes鈥�",
        "url":"training/volley/request.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Sending a Simple Request",
        "titleFriendly":"",
        "summary":"Volley: Easy, Fast Networking for Android At a high level, you use Volley by creating a RequestQueue and passing it Request objects. The RequestQueue manages worker threads for running the network operations, reading from and writing to the cache, and鈥�",
        "url":"training/volley/simple.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/volley-request.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Transmitting Network Data Using Volley",
        "titleFriendly":"",
        "summary":"Volley: Easy, Fast Networking for Android Volley is an HTTP library that makes networking for Android apps easier and most importantly, faster. Volley is available through the open AOSP repository. Volley offers the following benefits: Volley excels at鈥�",
        "url":"training/volley/index.html",
        "group":"",
        "keywords": [""],
        "tags": [""],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Advanced Training",
        "titleFriendly":"",
        "summary":"Advanced Training contains a variety of classes that teach you best practices in Android development. These classes simplify the steps required to enhance your app with powerful platform features or effectively optimize your app performance. What you 鈥�",
        "url":"training/advanced.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating a Stub Authenticator",
        "titleFriendly":"",
        "summary":"The sync adapter framework assumes that your sync adapter transfers data between device storage associated with an account and server storage that requires login access. For this reason, the framework expects you to provide a component called an authenticator鈥�",
        "url":"training/sync-adapters/creating-authenticator.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating a Stub Content Provider",
        "titleFriendly":"",
        "summary":"The sync adapter framework is designed to work with device data managed by the flexible and highly secure content provider framework. For this reason, the sync adapter framework expects that an app that uses the framework has already defined a content鈥�",
        "url":"training/sync-adapters/creating-stub-provider.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating a Sync Adapter",
        "titleFriendly":"",
        "summary":"The sync adapter component in your app encapsulates the code for the tasks that transfer data between the device and a server. Based on the scheduling and triggers you provide in your app, the sync adapter framework runs the code in the sync adapter component鈥�",
        "url":"training/sync-adapters/creating-sync-adapter.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Running a Sync Adapter",
        "titleFriendly":"",
        "summary":"In the previous lessons in this class, you learned how to create a sync adapter component that encapsulates data transfer code, and how to add the additional components that allow you to plug the sync adapter into the system. You now have everything you鈥�",
        "url":"training/sync-adapters/running-sync-adapter.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Transferring Data Using Sync Adapters",
        "titleFriendly":"",
        "summary":"Synchronizing data between an Android device and web servers can make your application significantly more useful and compelling for your users. For example, transferring data to a web server makes a useful backup, and transferring data from a server makes鈥�",
        "url":"training/sync-adapters/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Optimizing Layouts for TV",
        "titleFriendly":"",
        "summary":"When your application is running on a television set, you should assume that the user is sitting about ten feet away from the screen. This user environment is referred to as the 10-foot UI . To provide your users with a usable and enjoyable experience鈥�",
        "url":"training/tv/optimizing-layouts-tv.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/panoramio-grid.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Optimizing Navigation for TV",
        "titleFriendly":"",
        "summary":"An important aspect of the user experience when operating a TV is the direct human interface: a remote control. As you optimize your Android application for TVs, you should pay special attention to how the user actually navigates around your application鈥�",
        "url":"training/tv/optimizing-navigation-tv.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/cool-places.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Handling Features Not Supported on TV",
        "titleFriendly":"",
        "summary":"TVs are much different from other Android-powered devices: Because TVs have a different purpose from other devices, they usually don&#39;t have hardware features that other Android-powered devices often have. For this reason, the Android system does not鈥�",
        "url":"training/tv/unsupported-features-tv.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Designing for TV",
        "titleFriendly":"",
        "summary":"DevBytes: Design for Large Displays - Part 1 Smart TVs powered by Android bring your favorite Android apps to the best screen in your house. Thousands of apps in the Google Play Store are already optimized for TVs. This class shows how you can optimize鈥�",
        "url":"training/tv/index.html",
        "group":"",
        "keywords": ["input","screens"],
        "tags": ["input","screens"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Receiving Files from Another Device",
        "titleFriendly":"",
        "summary":"Android Beam file transfer copies files to a special directory on the receiving device. It also scans the copied files using the Android Media Scanner and adds entries for media files to the MediaStore provider. This lesson shows you how to respond when鈥�",
        "url":"training/beam-files/receive-files.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Sending Files to Another Device",
        "titleFriendly":"",
        "summary":"This lesson shows you how to design your app to send large files to another device using Android Beam file transfer. To send files, you request permission to use NFC and external storage, test to ensure your device supports NFC, and provide URIs to Android鈥�",
        "url":"training/beam-files/send-files.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Sharing Files with NFC",
        "titleFriendly":"",
        "summary":"Android allows you to transfer large files between devices using the Android Beam file transfer feature. This feature has a simple API and allows users to start the transfer process by simply touching devices. In response, Android Beam file transfer automatically鈥�",
        "url":"training/beam-files/index.html",
        "group":"",
        "keywords": ["nfcadapter","android beam","share","file transfer"],
        "tags": ["nfcadapter","androidbeam","share","filetransfer"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Monetizing Your App",
        "titleFriendly":"",
        "summary":"Apart from offering paid apps, there are a number of other ways to monetize your mobile applications. In this class, we are going to examine a number of typical methods (more lessons are to come) and their associated technical best practices. Obviously鈥�",
        "url":"training/monetization/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Advertising without Compromising User Experience",
        "titleFriendly":"",
        "summary":"Advertising is one of the means to monetize (make money with) mobile applications. In this lesson, you are going to learn how to incorporate banner ads in your Android application. While this lesson and the sample application use AdMob to serve ads, the鈥�",
        "url":"training/monetization/ads-and-ux.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/ads-eclipse-build-path.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Building Apps with Graphics &amp; Animation",
        "titleFriendly":"",
        "summary":"These classes teach you how to accomplish tasks with graphics that can give your app an edge on the competition. If you want to go beyond the basic user interface to create a beautiful visual experience, these classes will help you get there.鈥�",
        "url":"training/building-graphics.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Redundant Downloads are Redundant",
        "titleFriendly":"",
        "summary":"The most fundamental way to reduce your downloads is to download only what you need. In terms of data, that means implementing REST APIs that allow you to specify query criteria that limit the returned data by using parameters such as the time of your鈥�",
        "url":"training/efficient-downloads/redundant_redundant.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Minimizing the Effect of Regular Updates",
        "titleFriendly":"",
        "summary":"The optimal frequency of regular updates will vary based on device state, network connectivity, user behavior, and explicit user preferences. Optimizing Battery Life discusses how to build battery-efficient apps that modify their refresh frequency based鈥�",
        "url":"training/efficient-downloads/regular_updates.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Optimizing Downloads for Efficient Network Access",
        "titleFriendly":"",
        "summary":"Using the wireless radio to transfer data is potentially one of your app&#39;s most significant sources of battery drain. To minimize the battery drain associated with network activity, it&#39;s critical that you understand how your connectivity model鈥�",
        "url":"training/efficient-downloads/efficient-network-access.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/efficient-downloads/mobile_radio_state_machine.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Modifying your Download Patterns Based on the Connectivity Type",
        "titleFriendly":"",
        "summary":"When it comes to impact on battery life, not all connection types are created equal. Not only does the Wi-Fi radio use significantly less battery than its wireless radio counterparts, but the radios used in different wireless radio technologies have different鈥�",
        "url":"training/efficient-downloads/connectivity_patterns.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Transferring Data Without Draining the Battery",
        "titleFriendly":"",
        "summary":"In this class you will learn to minimize the battery life impact of downloads and network connections, particularly in relation to the wireless radio.This class demonstrates the best practices for scheduling and executing downloads using techniques such鈥�",
        "url":"training/efficient-downloads/index.html",
        "group":"",
        "keywords": ["battery","network","wireless"],
        "tags": ["battery","network","wireless"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Making the Most of Google Cloud Messaging",
        "titleFriendly":"",
        "summary":"Google Cloud Messaging (GCM) is a free service for sending messages to Android devices. GCM messaging can greatly enhance the user experience. Your application can stay up to date without wasting battery power on waking up the radio and polling the server鈥�",
        "url":"training/cloudsync/gcm.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Using the Backup API",
        "titleFriendly":"",
        "summary":"When a user purchases a new device or resets their existing one, they might expect that when Google Play restores your app back to their device during the initial setup, the previous data associated with the app restores as well. By default, that doesn鈥�",
        "url":"training/cloudsync/backupapi.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Syncing to the Cloud",
        "titleFriendly":"",
        "summary":"By providing powerful APIs for internet connectivity, the Android framework helps you build rich cloud-enabled apps that sync their data to a remote web service, making sure all your devices always stay in sync, and your valuable data is always backed鈥�",
        "url":"training/cloudsync/index.html",
        "group":"",
        "keywords": ["cloud","sync","backup"],
        "tags": ["cloud","sync","backup"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Best Practices for Performance",
        "titleFriendly":"",
        "summary":"These classes and articles help you build an app that&#39;s smooth, responsive, and uses as little battery as possible.鈥�",
        "url":"training/best-performance.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Building Apps with Content Sharing",
        "titleFriendly":"",
        "summary":"These classes teach you how to create apps that share data between apps and devices.鈥�",
        "url":"training/building-content-sharing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Building an OpenGL ES Environment",
        "titleFriendly":"",
        "summary":"In order to draw graphics with OpenGL ES in your Android application, you must create a view container for them. One of the more straight-forward ways to do this is to implement both a GLSurfaceView and a Renderer. A GLSurfaceView is a view container 鈥�",
        "url":"training/graphics/opengl/environment.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Defining Shapes",
        "titleFriendly":"",
        "summary":"Being able to define shapes to be drawn in the context of an OpenGL ES view is the first step in creating your high-end graphics masterpiece. Drawing with OpenGL ES can be a little tricky without knowing a few basic things about how OpenGL ES expects 鈥�",
        "url":"training/graphics/opengl/shapes.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/opengl/ccw-square.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Responding to Touch Events",
        "titleFriendly":"",
        "summary":"Making objects move according to a preset program like the rotating triangle is useful for getting some attention, but what if you want to have users interact with your OpenGL ES graphics? The key to making your OpenGL ES application touch interactive鈥�",
        "url":"training/graphics/opengl/touch.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/opengl/ogl-triangle-touch.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Drawing Shapes",
        "titleFriendly":"",
        "summary":"After you define shapes to be drawn with OpenGL, you probably want to draw them. Drawing shapes with the OpenGL ES 2.0 takes a bit more code than you might imagine, because the API provides a great deal of control over the graphics rendering pipeline.鈥�",
        "url":"training/graphics/opengl/draw.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/opengl/ogl-triangle.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Adding Motion",
        "titleFriendly":"",
        "summary":"Drawing objects on screen is a pretty basic feature of OpenGL, but you can do this with other Android graphics framwork classes, including Canvas and Drawable objects. OpenGL ES provides additional capabilities for moving and transforming drawn objects鈥�",
        "url":"training/graphics/opengl/motion.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Displaying Graphics with OpenGL ES",
        "titleFriendly":"",
        "summary":"The Android framework provides plenty of standard tools for creating attractive, functional graphical user interfaces. However, if you want more control of what your application draws on screen, or are venturing into three dimensional graphics, you need鈥�",
        "url":"training/graphics/opengl/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Applying Projection and Camera Views",
        "titleFriendly":"",
        "summary":"In the OpenGL ES environment, projection and camera views allow you to display drawn objects in a way that more closely resembles how you see physical objects with your eyes. This simulation of physical viewing is done with mathematical transformations鈥�",
        "url":"training/graphics/opengl/projection.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/opengl/ogl-triangle-projected.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Building Apps with Connectivity &amp; the Cloud",
        "titleFriendly":"",
        "summary":"These classes teach you how to connect your app to the world beyond the user&#39;s device. You&#39;ll learn how to connect to other devices in the area, connect to the Internet, backup and sync your app&#39;s data, and more.鈥�",
        "url":"training/building-connectivity.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Scheduling Repeating Alarms",
        "titleFriendly":"",
        "summary":"The App Clinic: Cricket DevBytes: Efficient Data Transfers Alarms (based on the AlarmManager class) give you a way to perform time-based operations outside the lifetime of your application. For example, you could use an alarm to initiate a long-running鈥�",
        "url":"training/scheduling/alarms.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Managing Device Awake State",
        "titleFriendly":"",
        "summary":"When an Android device is left idle, it will first dim, then turn off the screen, and ultimately turn off the CPU. This prevents the device&#39;s battery from quickly getting drained. Yet there are times when your application might require a different鈥�",
        "url":"training/scheduling/index.html",
        "group":"",
        "keywords": [""],
        "tags": [""],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Keeping the Device Awake",
        "titleFriendly":"",
        "summary":"To avoid draining the battery, an Android device that is left idle quickly falls asleep. However, there are times when an application needs to wake up the screen or the CPU and keep it awake to complete some work. The approach you take depends on the 鈥�",
        "url":"training/scheduling/wakelock.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Running a Query with a CursorLoader",
        "titleFriendly":"",
        "summary":"A CursorLoader runs an asynchronous query in the background against a ContentProvider, and returns the results to the Activity or FragmentActivity from which it was called. This allows the Activity or FragmentActivity to continue to interact with the 鈥�",
        "url":"training/load-data-background/setup-loader.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Handling the Results",
        "titleFriendly":"",
        "summary":"As shown in the previous lesson, you should begin loading your data with a CursorLoader in your implementation of onCreateLoader(). The loader then provides the query results to your Activity or FragmentActivity in your implementation of onLoadFinished鈥�",
        "url":"training/load-data-background/handle-results.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Loading Data in the Background",
        "titleFriendly":"",
        "summary":"Querying a ContentProvider for data you want to display takes time. If you run the query directly from an Activity, it may get blocked and cause the system to issue an &quot;Application Not Responding&quot; message. Even if it doesn&#39;t, users will 鈥�",
        "url":"training/load-data-background/index.html",
        "group":"",
        "keywords": ["cursorloader"],
        "tags": ["cursorloader"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Best Practices for User Interface",
        "titleFriendly":"",
        "summary":"These classes teach you how to build a user interface using Android layouts for all types of devices. Android provides a flexible framework for UI design that allows your app to display different layouts for different devices, create custom UI widgets鈥�",
        "url":"training/best-ui.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Animating Layout Changes",
        "titleFriendly":"",
        "summary":"A layout animation is a pre-loaded animation that the system runs each time you make a change to the layout configuration. All you need to do is set an attribute in the layout to tell the Android system to animate these layout changes, and system-default鈥�",
        "url":"training/animation/layout.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Displaying Card Flip Animations",
        "titleFriendly":"",
        "summary":"This lesson shows you how to do a card flip animation with custom fragment animations. Card flips animate between views of content by showing an animation that emulates a card flipping over. Here&#39;s what a card flip looks like: If you want to jump 鈥�",
        "url":"training/animation/cardflip.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Zooming a View",
        "titleFriendly":"",
        "summary":"This lesson demonstrates how to do a touch-to-zoom animation, which is useful for apps such as photo galleries to animate a view from a thumbnail to a full-size image that fills the screen. Here&#39;s what a touch-to-zoom animation looks like that expands鈥�",
        "url":"training/animation/zoom.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Crossfading Two Views",
        "titleFriendly":"",
        "summary":"Crossfade animations (also know as dissolve) gradually fade out one UI component while simultaneously fading in another. This animation is useful for situations where you want to switch content or views in your app. Crossfades are very subtle and short鈥�",
        "url":"training/animation/crossfade.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Using ViewPager for Screen Slides",
        "titleFriendly":"",
        "summary":"Screen slides are transitions between one entire screen to another and are common with UIs like setup wizards or slideshows. This lesson shows you how to do screen slides with a ViewPager provided by the support library . ViewPagers can animate screen鈥�",
        "url":"training/animation/screen-slide.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Adding Animations",
        "titleFriendly":"",
        "summary":"Animations can add subtle visual cues that notify users about what&#39;s going on in your app and improve their mental model of your app&#39;s interface. Animations are especially useful when the screen changes state, such as when content loads or new鈥�",
        "url":"training/animation/index.html",
        "group":"",
        "keywords": ["animator","views","layout","user interface"],
        "tags": ["animator","views","layout","userinterface"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Best Practices for Background Jobs",
        "titleFriendly":"",
        "summary":"These classes show you how to run jobs in the background to boost your application&#39;s performance and minimize its drain on the battery.鈥�",
        "url":"training/best-background.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Printing HTML Documents",
        "titleFriendly":"",
        "summary":"Printing out content beyond a simple photo on Android requires composing text and graphics in a print document. The Android framework provides a way to use HTML to compose a document and print it with a minimum of code. In Android 4.4 (API level 19), 鈥�",
        "url":"training/printing/html-docs.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Printing Photos",
        "titleFriendly":"",
        "summary":"Taking and sharing photos is one of the most popular uses for mobile devices. If your application takes photos, displays them, or allows users to share images, you should consider enabling printing of those images in your application. The Android Support鈥�",
        "url":"training/printing/photos.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Printing Custom Documents",
        "titleFriendly":"",
        "summary":"For some applications, such as drawing apps, page layout apps and other apps that focus on graphic output, creating beautiful printed pages is a key feature. In this case, it is not enough to print an image or an HTML document. The print output for these鈥�",
        "url":"training/printing/custom-docs.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Printing Content",
        "titleFriendly":"",
        "summary":"DevBytes: Android 4.4 Printing API Android users frequently view content solely on their devices, but there are times when showing someone a screen is not an adequate way to share information. Being able to print information from your Android application鈥�",
        "url":"training/printing/index.html",
        "group":"",
        "keywords": ["print","navigation","gesturedetector","scroller"],
        "tags": ["print","navigation","gesturedetector","scroller"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating Multiple APKs with 2+ Dimensions",
        "titleFriendly":"",
        "summary":"When developing your Android application to take advantage of multiple APKs on Google Play, it鈥檚 important to adopt some good practices from the get-go, and prevent unnecessary headaches further into the development process. This lesson shows you how 鈥�",
        "url":"training/multiple-apks/multiple.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating Multiple APKs for Different Screen Sizes",
        "titleFriendly":"",
        "summary":"When developing your Android application to take advantage of multiple APKs on Google Play, it鈥檚 important to adopt some good practices from the get-go, and prevent unnecessary headaches further into the development process. This lesson shows you how 鈥�",
        "url":"training/multiple-apks/screensize.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating Multiple APKs for Different GL Textures",
        "titleFriendly":"",
        "summary":"When developing your Android application to take advantage of multiple APKs on Google Play, it鈥檚 important to adopt some good practices from the get-go, and prevent unnecessary headaches further into the development process. This lesson shows you how 鈥�",
        "url":"training/multiple-apks/texture.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating Multiple APKs for Different API Levels",
        "titleFriendly":"",
        "summary":"When developing your Android application to take advantage of multiple APKs on Google Play, it鈥檚 important to adopt some good practices from the get-go, and prevent unnecessary headaches further into the development process. This lesson shows you how 鈥�",
        "url":"training/multiple-apks/api.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Maintaining Multiple APKs",
        "titleFriendly":"",
        "summary":"Multiple APK support is a feature of Google Play that allows you to publish multiple APKs under the same application listing. Each APK is a complete instance of your application, optimized to target specific device configurations. Each APK can target 鈥�",
        "url":"training/multiple-apks/index.html",
        "group":"",
        "keywords": ["support"],
        "tags": ["support"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Using Immersive Full-Screen Mode",
        "titleFriendly":"",
        "summary":"DevBytes: Android 4.4 Immersive Mode Android 4.4 (API Level 19) introduces a new SYSTEM_UI_FLAG_IMMERSIVE flag for setSystemUiVisibility() that lets your app go truly &quot;full screen.&quot; This flag, when combined with the SYSTEM_UI_FLAG_HIDE_NAVIGATION鈥�",
        "url":"training/system-ui/immersive.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/imm-states.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Responding to UI Visibility Changes",
        "titleFriendly":"",
        "summary":"This lesson describes how to register a listener so that your app can get notified of system UI visibility changes. This is useful if you want to synchronize other parts of your UI with the hiding&#47;showing of system bars. To get notified of system 鈥�",
        "url":"training/system-ui/visibility.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Hiding the Navigation Bar",
        "titleFriendly":"",
        "summary":"This lesson describes how to hide the navigation bar, which was introduced in Android 4.0 (API level 14). Even though this lesson focuses on hiding the navigation bar, you should design your app to hide the status bar at the same time, as described in鈥�",
        "url":"training/system-ui/navigation.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/navigation-bar.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Dimming the System Bars",
        "titleFriendly":"",
        "summary":"This lesson describes how to dim the system bars (that is, the status and the navigation bars) on Android 4.0 (API level 14) and higher. Android does not provide a built-in way to dim the system bars on earlier versions. When you use this approach, the鈥�",
        "url":"training/system-ui/dim.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/low_profile_hide2x.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Managing the System UI",
        "titleFriendly":"",
        "summary":"System Bars DevBytes: Android 4.4 Immersive Mode The system bars are screen areas dedicated to the display of notifications, communication of device status, and device navigation. Typically the system bars (which consist of the status and navigation bars鈥�",
        "url":"training/system-ui/index.html",
        "group":"",
        "keywords": [""],
        "tags": [""],
        "image":"images/training/system-ui.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Hiding the Status Bar",
        "titleFriendly":"",
        "summary":"This lesson describes how to hide the status bar on different versions of Android. Hiding the status bar (and optionally, the navigation bar) lets the content use more of the display space, thereby providing a more immersive user experience. Figure 1 鈥�",
        "url":"training/system-ui/status.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/status_bar_show.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Best Practices for Interaction and Engagement",
        "titleFriendly":"",
        "summary":"These classes teach you how to engage and retain your users by implementing the best interaction patterns for Android. For instance, to help users quickly discover content in your app, your app should match their expectations for user interaction on Android鈥�",
        "url":"training/best-ux.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Determining and Monitoring the Docking State and Type",
        "titleFriendly":"",
        "summary":"Android devices can be docked into several different kinds of docks. These include car or home docks and digital versus analog docks. The dock-state is typically closely linked to the charging state as many docks provide power to docked devices. How the鈥�",
        "url":"training/monitoring-device-state/docking-monitoring.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Monitoring the Battery Level and Charging State",
        "titleFriendly":"",
        "summary":"When you&#39;re altering the frequency of your background updates to reduce the effect of those updates on battery life, checking the current battery level and charging state is a good place to start. The battery-life impact of performing application 鈥�",
        "url":"training/monitoring-device-state/battery-monitoring.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Optimizing Battery Life",
        "titleFriendly":"",
        "summary":"For your app to be a good citizen, it should seek to limit its impact on the battery life of its host device. After this class you will be able to build apps that monitor modify their functionality and behavior based on the state of the host device. By鈥�",
        "url":"training/monitoring-device-state/index.html",
        "group":"",
        "keywords": ["network","internet"],
        "tags": ["network","internet"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Manipulating Broadcast Receivers On Demand",
        "titleFriendly":"",
        "summary":"The simplest way to monitor device state changes is to create a BroadcastReceiver for each state you&#39;re monitoring and register each of them in your application manifest. Then within each of these receivers you simply reschedule your recurring alarms鈥�",
        "url":"training/monitoring-device-state/manifest-receivers.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Determining and Monitoring the Connectivity Status",
        "titleFriendly":"",
        "summary":"Some of the most common uses for repeating alarms and background services is to schedule regular updates of application data from Internet resources, cache data, or execute long running downloads. But if you aren&#39;t connected to the Internet, or the鈥�",
        "url":"training/monitoring-device-state/connectivity-monitoring.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Handling Input Method Visibility",
        "titleFriendly":"",
        "summary":"When input focus moves into or out of an editable text field, Android shows or hides the input method (such as the on-screen keyboard) as appropriate. The system also makes decisions about how your UI and the text field appear above the input method. 鈥�",
        "url":"training/keyboard-input/visibility.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Supporting Keyboard Navigation",
        "titleFriendly":"",
        "summary":"In addition to soft input methods (such as on-screen keyboards), Android supports physical keyboards attached to the device. A keyboard offers not only a convenient mode for text input, but also offers a way for users to navigate and interact with your鈥�",
        "url":"training/keyboard-input/navigation.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Handling Keyboard Actions",
        "titleFriendly":"",
        "summary":"When the user gives focus to an editable text view such as an EditText element and the user has a hardware keyboard attached, all input is handled by the system. If, however, you&#39;d like to intercept or directly handle the keyboard input yourself, 鈥�",
        "url":"training/keyboard-input/commands.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Specifying the Input Method Type",
        "titleFriendly":"",
        "summary":"Every text field expects a certain type of text input, such as an email address, phone number, or just plain text. So it&#39;s important that you specify the input type for each text field in your app so the system displays the appropriate soft input 鈥�",
        "url":"training/keyboard-input/style.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/ui/edittext-phone.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Handling Keyboard Input",
        "titleFriendly":"",
        "summary":"The Android system shows an on-screen keyboard鈥攌nown as a soft input method 鈥攚hen a text field in your UI receives focus. To provide the best user experience, you can specify characteristics about the type of input you expect (such as whether it&#39;s鈥�",
        "url":"training/keyboard-input/index.html",
        "group":"",
        "keywords": ["edittext","accessibility"],
        "tags": ["edittext","accessibility"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Establishing In-app Billing Products for Sale",
        "titleFriendly":"",
        "summary":"Before publishing your In-app Billing application, you&#39;ll need to define the product list of digital goods available for purchase in the Google Play Developer Console . From the Developer Console, you can define product information for in-app products鈥�",
        "url":"training/in-app-billing/list-iab-products.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Testing Your In-app Billing Application",
        "titleFriendly":"",
        "summary":"To ensure that In-app Billing is functioning correctly in your application, you should test the test the application before you publish it on Google Play. Early testing also helps to ensure that the user flow for purchasing in-app items is not confusing鈥�",
        "url":"training/in-app-billing/test-iab-app.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Preparing Your In-app Billing Application",
        "titleFriendly":"",
        "summary":"Before you can start using the In-app Billing service, you&#39;ll need to add the library that contains the In-app Billing Version 3 API to your Android project. You also need to set the permissions for your application to communicate with Google Play鈥�",
        "url":"training/in-app-billing/preparing-iab-app.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Purchasing In-app Billing Products",
        "titleFriendly":"",
        "summary":"Once your application is connected to Google Play, you can initiate purchase requests for in-app products. Google Play provides a checkout interface for users to enter their payment method, so your application does not need to handle payment transactions鈥�",
        "url":"training/in-app-billing/purchase-iab-products.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Selling In-app Products",
        "titleFriendly":"",
        "summary":"In this class, you&#39;ll learn how to perform common In-app Billing operations from Android applications. In-app billing is a service hosted on Google Play that lets you charge for digital content or for upgrades in your app. The In-app Billing API makes鈥�",
        "url":"training/in-app-billing/index.html",
        "group":"",
        "keywords": ["billing"],
        "tags": ["billing"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Retrieving a List of Contacts",
        "titleFriendly":"",
        "summary":"This lesson shows you how to retrieve a list of contacts whose data matches all or part of a search string, using the following techniques: To do any type of search of the Contacts Provider, your app must have READ_CONTACTS permission. To request this鈥�",
        "url":"training/contacts-provider/retrieve-names.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Modifying Contacts Using Intents",
        "titleFriendly":"",
        "summary":"This lesson shows you how to use an Intent to insert a new contact or modify a contact&#39;s data. Instead of accessing the Contacts Provider directly, an Intent starts the contacts app, which runs the appropriate Activity. For the modification actions鈥�",
        "url":"training/contacts-provider/modify-data.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Accessing Contacts Data",
        "titleFriendly":"",
        "summary":"The Contacts Provider is the central repository of the user&#39;s contacts information, including data from contacts apps and social networking apps. In your apps, you can access Contacts Provider information directly by calling ContentResolver methods鈥�",
        "url":"training/contacts-provider/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Retrieving Details for a Contact",
        "titleFriendly":"",
        "summary":"This lesson shows how to retrieve detail data for a contact, such as email addresses, phone numbers, and so forth. It&#39;s the details that users are looking for when they retrieve a contact. You can give them all the details for a contact, or only display鈥�",
        "url":"training/contacts-provider/retrieve-details.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Displaying the Quick Contact Badge",
        "titleFriendly":"",
        "summary":"This lesson shows you how to add a QuickContactBadge to your UI and how to bind data to it. A QuickContactBadge is a widget that initially appears as a thumbnail image. Although you can use any Bitmap for the thumbnail image, you usually use a Bitmap 鈥�",
        "url":"training/contacts-provider/display-contact-badge.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Abstracting the New APIs",
        "titleFriendly":"",
        "summary":"Suppose you want to use action bar tabs as the primary form of top-level navigation in your application. Unfortunately, the ActionBar APIs are only available in Android 3.0 or later (API level 11+). Thus, if you want to distribute your application to 鈥�",
        "url":"training/backward-compatible-ui/abstracting.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/backward-compatible-ui-classes.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Proxying to the New APIs",
        "titleFriendly":"",
        "summary":"This lesson shows you how to subclass the CompatTab and TabHelper abstract classes and use new APIs. Your application can use this implementation on devices running a platform version that supports them. The concrete classes for CompatTab and TabHelper鈥�",
        "url":"training/backward-compatible-ui/new-implementation.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/backward-compatible-ui-classes-honeycomb.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating an Implementation with Older APIs",
        "titleFriendly":"",
        "summary":"This lesson discusses how to create an implementation that mirrors newer APIs yet supports older devices. The most challenging task in using newer UI features in a backward-compatible way is deciding on and implementing an older (fallback) solution for鈥�",
        "url":"training/backward-compatible-ui/older-implementation.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/backward-compatible-ui-classes-eclair.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating Backward-Compatible UIs",
        "titleFriendly":"",
        "summary":"This class demonstrates how to use UI components and APIs available in newer versions of Android in a backward-compatible way, ensuring that your application still runs on previous versions of the platform. Throughout this class, the new Action Bar Tabs鈥�",
        "url":"training/backward-compatible-ui/index.html",
        "group":"",
        "keywords": ["widgets","support"],
        "tags": ["widgets","support"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Using the Version-Aware Component",
        "titleFriendly":"",
        "summary":"Now that you have two implementations of TabHelper and CompatTab 鈥攐ne for Android 3.0 and later and one for earlier versions of the platform鈥攊t&#39;s time to do something with these implementations. This lesson discusses creating the logic for switching鈥�",
        "url":"training/backward-compatible-ui/using-component.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/backward-compatible-ui-gb.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Best Practices for Security &amp; Privacy",
        "titleFriendly":"",
        "summary":"These classes and articles provide information about how to keep your app&#39;s data secure.鈥�",
        "url":"training/best-security.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Building Apps for Wearables",
        "titleFriendly":"",
        "summary":"Learn how to build notifications, send and sync data, and use voice actions.",
        "url":"training/building-wearables.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"wear/images/notifications.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Specifying App Content for Indexing",
        "titleFriendly":"",
        "summary":"Google&#39;s web crawling bot ( Googlebot ), which crawls and indexes web sites for the Google search engine, can also index content in your Android app. By opting in, you can allow Googlebot to crawl the content in the APK through the Google Play Store鈥�",
        "url":"training/app-indexing/enabling-app-indexing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Making Your App Content Searchable by Google",
        "titleFriendly":"",
        "summary":"DevBytes: App Indexing As mobile apps become more pervasive, users are looking for relevant information not only from web sites but also from apps they have installed. You can enable Google to crawl through your app content and present your Android app鈥�",
        "url":"training/app-indexing/index.html",
        "group":"",
        "keywords": ["app indexing"],
        "tags": ["appindexing"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Enabling Deep Links for App Content",
        "titleFriendly":"",
        "summary":"To enable Google to crawl your app content and allow users to enter your app from search results, you must add intent filters for the relevant activities in your app manifest. These intent filters allow deep linking to the content in any of your activities鈥�",
        "url":"training/app-indexing/deep-linking.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Planning for Multiple Touchscreen Sizes",
        "titleFriendly":"",
        "summary":"Designing an intuitive, effective navigation for tablets and other devices.",
        "url":"training/design-navigation/multiple-sizes.html",
        "group":"",
        "keywords": [],
        "tags": ["multiplescreens"],
        "image":"images/training/app-navigation-multiple-sizes-strategy-stack.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Planning Screens and Their Relationships",
        "titleFriendly":"",
        "summary":"Most apps have an inherent information model that can be expressed as a tree or graph of object types. In more obvious terms, you can draw a diagram of different kinds of information that represents the types of things users interact with in your app.鈥�",
        "url":"training/design-navigation/screen-planning.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/app-navigation-screen-planning-erd.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Putting it All Together: Wireframing the Example App",
        "titleFriendly":"",
        "summary":"Now that we have a solid understanding of navigation patterns and screen grouping techniques, it&#39;s time to apply them to our screens. Let&#39;s take another look at our exhaustive screen map for the example news application from the first lesson ,鈥�",
        "url":"training/design-navigation/wireframing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/app-navigation-screen-planning-exhaustive-map.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Providing Descendant and Lateral Navigation",
        "titleFriendly":"",
        "summary":"One way of providing access to the full range of an application&#39;s screens is to expose hierarchical navigation. In this lesson we discuss descendant navigation , allowing users to descend &#39;down&#39; a screen hierarchy into a child screen, and 鈥�",
        "url":"training/design-navigation/descendant-lateral.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/app-navigation-descendant-lateral-desc.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Providing Ancestral and Temporal Navigation",
        "titleFriendly":"",
        "summary":"Now that users can navigate deep into the application&#39;s screen hierarchy, we need to provide a method for navigating up the hierarchy, to parent and ancestor screens. Additionally, we should ensure that temporal navigation via the Back button is respected鈥�",
        "url":"training/design-navigation/ancestral-temporal.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/app-navigation-ancestral-navigate-back.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Designing Effective Navigation",
        "titleFriendly":"",
        "summary":"This class is not specific to any particular version of the Android platform. It is also primarily design-focused and does not require knowledge of the Android SDK. That said, you should have experience using an Android device for a better understanding鈥�",
        "url":"training/design-navigation/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Best Practices for User Input",
        "titleFriendly":"",
        "summary":"These classes cover various subjects of user input, such as touch screen gestures and text input through on-screen input methods and hardware keyboards.鈥�",
        "url":"training/best-user-input.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Adding an Easy Share Action",
        "titleFriendly":"",
        "summary":"Implementing an effective and user friendly share action in your ActionBar is made even easier with the introduction of ActionProvider in Android 4.0 (API Level 14). An ActionProvider, once attached to a menu item in the action bar, handles both the appearance鈥�",
        "url":"training/sharing/shareaction.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/ui/actionbar-shareaction.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Receiving Simple Data from Other Apps",
        "titleFriendly":"",
        "summary":"Just as your application can send data to other applications, so too can it easily receive data from applications. Think about how users interact with your application, and what data types you want to receive from other applications. For example, a social鈥�",
        "url":"training/sharing/receive.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Sharing Simple Data",
        "titleFriendly":"",
        "summary":"One of the great things about Android applications is their ability to communicate and integrate with each other. Why reinvent functionality that isn&#39;t core to your application when it already exists in another application? This class covers some 鈥�",
        "url":"training/sharing/index.html",
        "group":"",
        "keywords": ["intents","share"],
        "tags": ["intents","share"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Sending Simple Data to Other Apps",
        "titleFriendly":"",
        "summary":"When you construct an intent, you must specify the action you want the intent to &quot;trigger.&quot; Android defines several actions, including ACTION_SEND which, as you can probably guess, indicates that the intent is sending data from one activity 鈥�",
        "url":"training/sharing/send.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/sharing/share-text-screenshot.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating a View Class",
        "titleFriendly":"",
        "summary":"A well-designed custom view is much like any other well-designed class. It encapsulates a specific set of functionality with an easy to use interface, it uses CPU and memory efficiently, and so forth. In addition to being a well-designed class, though鈥�",
        "url":"training/custom-views/create-view.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Making the View Interactive",
        "titleFriendly":"",
        "summary":"Drawing a UI is only one part of creating a custom view. You also need to make your view respond to user input in a way that closely resembles the real-world action you&#39;re mimicking. Objects should always act in the same way that real objects do. 鈥�",
        "url":"training/custom-views/making-interactive.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Custom Drawing",
        "titleFriendly":"",
        "summary":"The most important part of a custom view is its appearance. Custom drawing can be easy or complex according to your application&#39;s needs. This lesson covers some of the most common operations. The most important step in drawing a custom view is to 鈥�",
        "url":"training/custom-views/custom-drawing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Optimizing the View",
        "titleFriendly":"",
        "summary":"Now that you have a well-designed view that responds to gestures and transitions between states, you need to ensure that the view runs fast. To avoid a UI that feels sluggish or stutters during playback, you must ensure that your animations consistently鈥�",
        "url":"training/custom-views/optimizing-view.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating Custom Views",
        "titleFriendly":"",
        "summary":"The Android framework has a large set of View classes for interacting with the user and displaying various types of data. But sometimes your app has unique needs that aren鈥檛 covered by the built-in views. This class shows you how to create your own views鈥�",
        "url":"training/custom-views/index.html",
        "group":"",
        "keywords": ["widgets","ui","layout"],
        "tags": ["widgets","ui","layout"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Providing Up Navigation",
        "titleFriendly":"",
        "summary":"All screens in your app that are not the main entrance to your app (the &quot;home&quot; screen) should offer the user a way to navigate to the logical parent screen in the app&#39;s hierarchy by pressing the Up button in the action bar . This lesson 鈥�",
        "url":"training/implementing-navigation/ancestral.html",
        "group":"",
        "keywords": ["up navigation","navutils","taskstackbuilder"],
        "tags": ["upnavigation","navutils","taskstackbuilder"],
        "image":"images/training/implementing-navigation-up.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating Swipe Views with Tabs",
        "titleFriendly":"",
        "summary":"Swipe views provide lateral navigation between sibling screens such as tabs with a horizontal finger gesture (a pattern sometimes known as horizontal paging). This lesson teaches you how to create a tab layout with swipe views for switching between tabs鈥�",
        "url":"training/implementing-navigation/lateral.html",
        "group":"",
        "keywords": ["viewpager","horizontal","paging","swipe view","tabs"],
        "tags": ["viewpager","horizontal","paging","swipeview","tabs"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Implementing Descendant Navigation",
        "titleFriendly":"",
        "summary":"Descendant navigation is navigation down the application&#39;s information hierarchy. This is described in Designing Effective Navigation and also covered in Android Design: Application Structure . Descendant navigation is usually implemented using Intent鈥�",
        "url":"training/implementing-navigation/descendant.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Providing Proper Back Navigation",
        "titleFriendly":"",
        "summary":"Back navigation is how users move backward through the history of screens they previously visited. All Android devices provide a Back button for this type of navigation, so your app should not add a Back button to the UI . In almost all situations, the鈥�",
        "url":"training/implementing-navigation/temporal.html",
        "group":"",
        "keywords": ["back navigation","navutils","taskstackbuilder"],
        "tags": ["backnavigation","navutils","taskstackbuilder"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating a Navigation Drawer",
        "titleFriendly":"",
        "summary":"The navigation drawer is a panel that displays the app鈥檚 main navigation options on the left edge of the screen. It is hidden most of the time, but is revealed when the user swipes a finger from the left edge of the screen or, while at the top level of鈥�",
        "url":"training/implementing-navigation/nav-drawer.html",
        "group":"",
        "keywords": ["drawerlayout","navigation"],
        "tags": ["drawerlayout","navigation"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Implementing Effective Navigation",
        "titleFriendly":"",
        "summary":"This class demonstrates how to implement the key navigation design patterns detailed in the Designing Effective Navigation class. After reading the lessons in this class, you should have a strong understanding of how to implement navigation patterns with鈥�",
        "url":"training/implementing-navigation/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Using Network Service Discovery",
        "titleFriendly":"",
        "summary":"Adding Network Service Discovery (NSD) to your app allows your users to identify other devices on the local network that support the services your app requests. This is useful for a variety of peer-to-peer applications such as file sharing or multi-player鈥�",
        "url":"training/connect-devices-wirelessly/nsd.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating P2P Connections with Wi-Fi",
        "titleFriendly":"",
        "summary":"The Wi-Fi peer-to-peer (P2P) APIs allow applications to connect to nearby devices without needing to connect to a network or hotspot (Android&#39;s Wi-Fi P2P framework complies with the Wi-Fi Direct鈩� certification program). Wi-Fi P2P allows your application鈥�",
        "url":"training/connect-devices-wirelessly/wifi-direct.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Using Wi-Fi P2P for Service Discovery",
        "titleFriendly":"",
        "summary":"The first lesson in this class, Using Network Service Discovery , showed you how to discover services that are connected to a local network. However, using Wi-Fi Peer-to-Peer (P2P) Service Discovery allows you to discover the services of nearby devices鈥�",
        "url":"training/connect-devices-wirelessly/nsd-wifi-direct.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Connecting Devices Wirelessly",
        "titleFriendly":"",
        "summary":"DevBytes: Network Service Discovery Besides enabling communication with the cloud, Android&#39;s wireless APIs also enable communication with other devices on the same local network, and even devices which are not on a network, but are physically nearby鈥�",
        "url":"training/connect-devices-wirelessly/index.html",
        "group":"",
        "keywords": ["wifi","network","wireless"],
        "tags": ["wifi","network","wireless"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Tracking Movement",
        "titleFriendly":"",
        "summary":"This lesson describes how to track movement in touch events. A new onTouchEvent() is triggered with an ACTION_MOVE event whenever the current touch contact position, pressure, or size changes. As described in Detecting Common Gestures , all of these events鈥�",
        "url":"training/gestures/movement.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Managing Touch Events in a ViewGroup",
        "titleFriendly":"",
        "summary":"Handling touch events in a ViewGroup takes special care, because it&#39;s common for a ViewGroup to have children that are targets for different touch events than the ViewGroup itself. To make sure that each view correctly receives the touch events intended鈥�",
        "url":"training/gestures/viewgroup.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Handling Multi-Touch Gestures",
        "titleFriendly":"",
        "summary":"A multi-touch gesture is when multiple pointers (fingers) touch the screen at the same time. This lesson describes how to detect gestures that involve multiple pointers. When multiple pointers touch the screen at the same time, the system generates the鈥�",
        "url":"training/gestures/multi.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Detecting Common Gestures",
        "titleFriendly":"",
        "summary":"A &quot;touch gesture&quot; occurs when a user places one or more fingers on the touch screen, and your application interprets that pattern of touches as a particular gesture. There are correspondingly two phases to gesture detection: The examples in 鈥�",
        "url":"training/gestures/detector.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Dragging and Scaling",
        "titleFriendly":"",
        "summary":"This lesson describes how to use touch gestures to drag and scale on-screen objects, using onTouchEvent() to intercept touch events. A common operation for a touch gesture is to use it to drag an object across the screen. The following snippet lets the鈥�",
        "url":"training/gestures/scale.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Animating a Scroll Gesture",
        "titleFriendly":"",
        "summary":"In Android, scrolling is typically achieved by using the ScrollView class. Any standard layout that might extend beyond the bounds of its container should be nested in a ScrollView to provide a scrollable view that&#39;s managed by the framework. Implementing鈥�",
        "url":"training/gestures/scroll.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Using Touch Gestures",
        "titleFriendly":"",
        "summary":"This class describes how to write apps that allow users to interact with an app via touch gestures. Android provides a variety of APIs to help you create and detect gestures. Although your app should not depend on touch gestures for basic behaviors (since鈥�",
        "url":"training/gestures/index.html",
        "group":"",
        "keywords": ["input","navigation","gesturedetector","scroller"],
        "tags": ["input","navigation","gesturedetector","scroller"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Recording Videos Simply",
        "titleFriendly":"",
        "summary":"This lesson explains how to capture video using existing camera applications. Your application has a job to do, and integrating videos is only a small part of it. You want to take videos with minimal fuss, and not reinvent the camcorder. Happily, most鈥�",
        "url":"training/camera/videobasics.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Taking Photos Simply",
        "titleFriendly":"",
        "summary":"This lesson explains how to capture photos using an existing camera application. Suppose you are implementing a crowd-sourced weather service that makes a global weather map by blending together pictures of the sky taken by devices running your client鈥�",
        "url":"training/camera/photobasics.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Controlling the Camera",
        "titleFriendly":"",
        "summary":"In this lesson, we discuss how to control the camera hardware directly using the framework APIs. Directly controlling a device camera requires a lot more code than requesting pictures or videos from existing camera applications. However, if you want to鈥�",
        "url":"training/camera/cameradirect.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Capturing Photos",
        "titleFriendly":"",
        "summary":"The world was a dismal and featureless place before rich media became prevalent. Remember Gopher? We don&#39;t, either. For your app to become part of your users&#39; lives, give them a way to put their lives into it. Using the on-board cameras, your 鈥�",
        "url":"training/camera/index.html",
        "group":"",
        "keywords": ["camera","video","picture"],
        "tags": ["camera","video","picture"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Keeping Your App Responsive",
        "titleFriendly":"",
        "summary":"It&#39;s possible to write code that wins every performance test in the world, but still feels sluggish, hang or freeze for significant periods, or take too long to process input. The worst thing that can happen to your app&#39;s responsiveness is an 鈥�",
        "url":"training/articles/perf-anr.html",
        "group":"",
        "keywords": ["threads","asynctask"],
        "tags": ["threads","asynctask"],
        "image":"images/anr.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"锘縎ecurity with HTTPS and SSL",
        "titleFriendly":"",
        "summary":"The Secure Sockets Layer (SSL)鈥攏ow technically known as Transport Layer Security (TLS) 鈥攊s a common building block for encrypted communications between clients and servers. It&#39;s possible that an application might use SSL incorrectly such that malicious鈥�",
        "url":"training/articles/security-ssl.html",
        "group":"",
        "keywords": ["network","certificates"],
        "tags": ["network","certificates"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"JNI Tips",
        "titleFriendly":"",
        "summary":"JNI is the Java Native Interface. It defines a way for managed code (written in the Java programming language) to interact with native code (written in C&#47;C++). It&#39;s vendor-neutral, has support for loading code from dynamic shared libraries, and鈥�",
        "url":"training/articles/perf-jni.html",
        "group":"",
        "keywords": ["ndk","native"],
        "tags": ["ndk","native"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Android Keystore System",
        "titleFriendly":"",
        "summary":"The Android Keystore system lets you store private keys in a container to make it more difficult to extract from the device. Once keys are in the keystore, they can be used for cryptographic operations with the private key material remaining non-exportable鈥�",
        "url":"training/articles/keystore.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Managing Your App&#39;s Memory",
        "titleFriendly":"",
        "summary":"Random-access memory (RAM) is a valuable resource in any software development environment, but it&#39;s even more valuable on a mobile operating system where physical memory is often constrained. Although Android&#39;s Dalvik virtual machine performs 鈥�",
        "url":"training/articles/memory.html",
        "group":"",
        "keywords": ["ram","low memory","outofmemoryerror","ontrimmemory"],
        "tags": ["ram","lowmemory","outofmemoryerror","ontrimmemory"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"SMP Primer for Android",
        "titleFriendly":"",
        "summary":"Android 3.0 and later platform versions are optimized to support multiprocessor architectures. This document introduces issues that can arise when writing code for symmetric multiprocessor systems in C, C++, and the Java programming language (hereafter鈥�",
        "url":"training/articles/smp.html",
        "group":"",
        "keywords": ["ndk","native"],
        "tags": ["ndk","native"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"锘縎ecurity Tips",
        "titleFriendly":"",
        "summary":"Android has security features built into the operating system that significantly reduce the frequency and impact of application security issues. The system is designed so you can typically build your apps with default system and file permissions and avoid鈥�",
        "url":"training/articles/security-tips.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Performance Tips",
        "titleFriendly":"",
        "summary":"This document primarily covers micro-optimizations that can improve overall app performance when combined, but it&#39;s unlikely that these changes will result in dramatic performance effects. Choosing the right algorithms and data structures should always鈥�",
        "url":"training/articles/perf-tips.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Getting Started",
        "titleFriendly":"",
        "summary":"Android Training provides a collection of classes that aim to help you build great apps for Android. Each class explains the steps required to solve a problem or implement a feature using code snippets and sample code for you to use in your apps.",
        "url":"training/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Best Practices for Testing",
        "titleFriendly":"",
        "summary":"These classes and articles provide information about how to test your Android application.鈥�",
        "url":"training/testing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Managing Audio Focus",
        "titleFriendly":"",
        "summary":"With multiple apps potentially playing audio it&#39;s important to think about how they should interact. To avoid every music app playing at the same time, Android uses audio focus to moderate audio playback鈥攐nly apps that hold the audio focus should 鈥�",
        "url":"training/managing-audio/audio-focus.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Dealing with Audio Output Hardware",
        "titleFriendly":"",
        "summary":"Users have a number of alternatives when it comes to enjoying the audio from their Android devices. Most devices have a built-in speaker, headphone jacks for wired headsets, and many also feature Bluetooth connectivity and support for A2DP audio. How 鈥�",
        "url":"training/managing-audio/audio-output.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Controlling Your App鈥檚 Volume and Playback",
        "titleFriendly":"",
        "summary":"A good user experience is a predictable one. If your app plays media it鈥檚 important that your users can control the volume of your app using the hardware or software volume controls of their device, bluetooth headset, or headphones. Similarly, where appropriate鈥�",
        "url":"training/managing-audio/volume-playback.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Managing Audio Playback",
        "titleFriendly":"",
        "summary":"If your app plays audio, it鈥檚 important that your users can control the audio in a predictable manner. To ensure a great user experience, it鈥檚 also important that your app manages the audio focus to ensure multiple apps aren鈥檛 playing audio at the same鈥�",
        "url":"training/managing-audio/index.html",
        "group":"",
        "keywords": ["audio","media"],
        "tags": ["audio","media"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Developing for Enterprise",
        "titleFriendly":"",
        "summary":"In this class, you&#39;ll learn APIs and techniques you can use when developing applications for the enterprise.鈥�",
        "url":"training/enterprise/index.html",
        "group":"",
        "keywords": ["policy","privacy"],
        "tags": ["policy","privacy"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Enhancing Security with Device Management Policies",
        "titleFriendly":"",
        "summary":"Since Android 2.2 (API level 8), the Android platform offers system-level device management capabilities through the Device Administration APIs. In this lesson, you will learn how to create a security-aware application that manages access to its content鈥�",
        "url":"training/enterprise/device-management-policy.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/device-mgmt-activate-device-admin.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Caching Bitmaps",
        "titleFriendly":"",
        "summary":"Loading a single bitmap into your user interface (UI) is straightforward, however things get more complicated if you need to load a larger set of images at once. In many cases (such as with components like ListView, GridView or LruCache class (also available鈥�",
        "url":"training/displaying-bitmaps/cache-bitmap.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Loading Large Bitmaps Efficiently",
        "titleFriendly":"",
        "summary":"Images come in all shapes and sizes. In many cases they are larger than required for a typical application user interface (UI). For example, the system Gallery application displays photos taken using your Android devices&#39;s camera which are typically鈥�",
        "url":"training/displaying-bitmaps/load-bitmap.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Processing Bitmaps Off the UI Thread",
        "titleFriendly":"",
        "summary":"The AsyncTask and shows you how to handle concurrency issues. The AsyncTask class provides an easy way to execute some work in a background thread and publish the results back on the UI thread. To use it, create a subclass and override the provided methods鈥�",
        "url":"training/displaying-bitmaps/process-bitmap.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Managing Bitmap Memory",
        "titleFriendly":"",
        "summary":"In addition to the steps described in Caching Bitmaps , there are specific things you can do to facilitate garbage collection and bitmap reuse. The recommended strategy depends on which version(s) of Android you are targeting. The BitmapFun sample app鈥�",
        "url":"training/displaying-bitmaps/manage-memory.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Displaying Bitmaps in Your UI",
        "titleFriendly":"",
        "summary":"This lesson brings together everything from previous lessons, showing you how to load multiple bitmaps into ViewPager and GridView components using a background thread and bitmap cache, while dealing with concurrency and configuration changes. The swipe鈥�",
        "url":"training/displaying-bitmaps/display-bitmap.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Displaying Bitmaps Efficiently",
        "titleFriendly":"",
        "summary":"DevBytes: Bitmap Allocation DevBytes: Making Apps Beautiful - Part 4 - Performance Tuning Learn how to use common techniques to process and load Bitmap objects in a way that keeps your user interface (UI) components responsive and avoids exceeding your鈥�",
        "url":"training/displaying-bitmaps/index.html",
        "group":"",
        "keywords": ["bitmaps","images","graphics"],
        "tags": ["bitmaps","images","graphics"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating and Running a Wearable App",
        "titleFriendly":"",
        "summary":"Wearable apps run directly on the wearable device, giving you access to low-level hardware such as sensors, activities, services, and more, right on the wearable. A companion handheld app that contains the wearable app is also required when you want to鈥�",
        "url":"training/wearables/apps/creating.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Packaging Wearable Apps",
        "titleFriendly":"",
        "summary":"When publishing to users, you must package a wearable app inside of a handheld app, because users cannot browse and install apps directly on the wearable. If packaged properly, when users download the handheld app, the system automatically pushes the 鈥�",
        "url":"training/wearables/apps/packaging.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Debugging over Bluetooth",
        "titleFriendly":"",
        "summary":"You can debug your wearable over Bluetooth by routing it&#39;s debug output to the handheld device that&#39;s connected to your development machine. In the Android Wear companion app, you should see the status change to: If there are no other devices 鈥�",
        "url":"training/wearables/apps/bt-debugging.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Adding Voice Capabilities",
        "titleFriendly":"",
        "summary":"Voice actions are an important part of the wearable experience. They let users carry out actions hands-free and quickly. Wear provides two types of voice actions: The Android Wear platform provides several voice intents that are based on user actions 鈥�",
        "url":"training/wearables/apps/voice.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating Custom Layouts",
        "titleFriendly":"",
        "summary":"Creating layouts for wearables is the same as handheld devices, except you have to design for the screen size and for glanceability. Do not port functionality and the UI from a handheld app and expect a good experience. You should create custom layouts鈥�",
        "url":"training/wearables/apps/layouts.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating Wearable Apps",
        "titleFriendly":"",
        "summary":"Wearable apps run directly on the device, giving you access to hardware such as sensors and the GPU. They are fundamentally the same as apps built for other devices using the Android SDK, but differ greatly in design and usability and the amount of functionality鈥�",
        "url":"training/wearables/apps/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"wear/images/notifications.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating a Notification",
        "titleFriendly":"",
        "summary":"To build handheld notifications that are also sent to wearables, use Builder. When you build notifications with this class, the system takes care of displaying notifications properly, whether they appear on a handheld or wearable. Before you begin, import鈥�",
        "url":"training/wearables/notifications/creating.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"wear/images/circle_email_action.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Stacking Notifications",
        "titleFriendly":"",
        "summary":"When creating notifications for a handheld device, you should always aggregate similar notifications into a single summary notification. For example, if your app creates notifications for received messages, you should not show more than one notification鈥�",
        "url":"training/wearables/notifications/stacks.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"wear/images/11_bundles_B.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Adding Pages to a Notification",
        "titleFriendly":"",
        "summary":"When you&#39;d like to provide more information without requiring users to open your app on their handheld device, you can add one or more pages to the notification on the wearable. The additional pages appear immediately to the right of the main notification鈥�",
        "url":"training/wearables/notifications/pages.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"wear/images/09_pages.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Adding Wearable Features to Notifications",
        "titleFriendly":"",
        "summary":"When an Android handheld (phone or tablet) and Android wearable are connected, the handheld automatically shares notifications with the wearable. On the wearable, each notification appears as a new card in the context stream . However, to give users the鈥�",
        "url":"training/wearables/notifications/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"wear/images/notification_phone@2x.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Receiving Voice Input in a Notification",
        "titleFriendly":"",
        "summary":"If you have handheld notifications that include an action to input text, such as reply to an email, it should normally launch an activity on the handheld device to input the text. However, when your notification appears on a wearable, there is no keyboard鈥�",
        "url":"training/wearables/notifications/voice-input.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"wear/images/13_voicereply.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Handling Data Layer Events",
        "titleFriendly":"",
        "summary":"When you make calls with the data layer, you can receive the status of the call when it completes as well as listen for any changes that the call ends up making with listeners. You&#39;ll notice that calls to the data layer API sometimes return a PendingResult鈥�",
        "url":"training/wearables/data-layer/events.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Accessing the Wearable Data Layer",
        "titleFriendly":"",
        "summary":"To call the data layer API, create an instance of GoogleApiClient , the main entry point for any of the Google Play services APIs. GoogleApiClient provides a builder that makes it easy to create an instance of the client. A minimal GoogleApiClient looks鈥�",
        "url":"training/wearables/data-layer/accessing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Transferring Assets",
        "titleFriendly":"",
        "summary":"To send large blobs of binary data over the Bluetooth transport, such as images, attach an Asset to a data item and the put the data item into the replicated data store. Assets automatically handle caching of data to prevent retransmission and conserve鈥�",
        "url":"training/wearables/data-layer/assets.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Sending and Receiving Messages",
        "titleFriendly":"",
        "summary":"You send messages using the MessageApi and attach the following items to the message: Unlike data items, there is no syncing between the handheld and wearable apps. Messages are a one-way communication mechanism that&#39;s meant for &quot;fire-and-forget鈥�",
        "url":"training/wearables/data-layer/messages.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Syncing Data Items",
        "titleFriendly":"",
        "summary":"A DataItem defines the data interface that the system uses to synchronize data between handhelds and wearables. A DataItem generally consists of the following items: You normally don&#39;t implement DataItem directly. Instead, you: However, instead of鈥�",
        "url":"training/wearables/data-layer/data-items.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Sending and Syncing Data",
        "titleFriendly":"",
        "summary":"The Wearable Data Layer API, which is part of Google Play services, provides a communication channel for your handheld and wearable apps. The API consists of a set of data objects that the system can send and synchronize over the wire and listeners that鈥�",
        "url":"training/wearables/data-layer/index.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Developing an Accessibility Service",
        "titleFriendly":"",
        "summary":"Accessibility services are a feature of the Android framework designed to provide alternative navigation feedback to the user on behalf of applications installed on Android devices. An accessibility service can communicate to the user on the application鈥�",
        "url":"training/accessibility/service.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Developing Accessible Applications",
        "titleFriendly":"",
        "summary":"Android has several accessibility-focused features baked into the platform, which make it easy to optimize your application for those with visual or physical disabilities. However, it&#39;s not always obvious what the correct optimizations are, or the鈥�",
        "url":"training/accessibility/accessible-app.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Implementing Accessibility",
        "titleFriendly":"",
        "summary":"When it comes to reaching as wide a userbase as possible, it&#39;s important to pay attention to accessibility in your Android application. Cues in your user interface that may work for a majority of users, such as a visible change in state when a button鈥�",
        "url":"training/accessibility/index.html",
        "group":"",
        "keywords": ["navigation","input"],
        "tags": ["navigation","input"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Setting Up the Search Interface",
        "titleFriendly":"",
        "summary":"Beginning in Android 3.0, using the SearchView widget as an item in the action bar is the preferred way to provide search in your app. Like with all items in the action bar, you can define the SearchView to show at all times, only when there is room, 鈥�",
        "url":"training/search/setup.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Remaining Backward Compatible",
        "titleFriendly":"",
        "summary":"The SearchView and action bar are only available on Android 3.0 and later. To support older platforms, you can fall back to the search dialog. The search dialog is a system provided UI that overlays on top of your application when invoked. To setup the鈥�",
        "url":"training/search/backward-compat.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Storing and Searching for Data",
        "titleFriendly":"",
        "summary":"There are many ways to store your data, such as in an online database, in a local SQLite database, or even in a text file. It is up to you to decide what is the best solution for your application. This lesson shows you how to create a SQLite virtual table鈥�",
        "url":"training/search/search.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Adding Search Functionality",
        "titleFriendly":"",
        "summary":"Android&#39;s built-in search features offer apps an easy way to provide a consistent search experience for all users. There are two ways to implement search in your app depending on the version of Android that is running on the device. This class covers鈥�",
        "url":"training/search/index.html",
        "group":"",
        "keywords": ["searchview","database"],
        "tags": ["searchview","database"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Reporting Work Status",
        "titleFriendly":"",
        "summary":"This lesson shows you how to report the status of a work request run in a background service to the component that sent the request. This allows you, for example, to report the status of the request in an Activity object&#39;s UI. The recommended way 鈥�",
        "url":"training/run-background-service/report-status.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating a Background Service",
        "titleFriendly":"",
        "summary":"The IntentService class provides a straightforward structure for running an operation on a single background thread. This allows it to handle long-running operations without affecting your user interface&#39;s responsiveness. Also, an IntentService isn鈥�",
        "url":"training/run-background-service/create-service.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Sending Work Requests to the Background Service",
        "titleFriendly":"",
        "summary":"The previous lesson showed you how to create an IntentService class. This lesson shows you how to trigger the IntentService to run an operation by sending it an Intent. This Intent can optionally contain data for the IntentService to process. You can 鈥�",
        "url":"training/run-background-service/send-request.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Running in a Background Service",
        "titleFriendly":"",
        "summary":"Unless you specify otherwise, most of the operations you do in an app run in the foreground on a special thread called the UI thread. This can cause problems, because long-running operations will interfere with the responsiveness of your user interface鈥�",
        "url":"training/run-background-service/index.html",
        "group":"",
        "keywords": ["intentservice"],
        "tags": ["intentservice"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating and Monitoring Geofences",
        "titleFriendly":"",
        "summary":"Geofencing combines awareness of the user&#39;s current location with awareness of nearby features, defined as the user&#39;s proximity to locations that may be of interest. To mark a location of interest, you specify its latitude and longitude. To adjust鈥�",
        "url":"training/location/geofencing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Testing Using Mock Locations",
        "titleFriendly":"",
        "summary":"To test a location-aware app that uses Location Services, you don&#39;t need to move your device from place to place to generate location data. Instead, you can put Location Services into mock mode. In this mode, you can send mock Location objects to 鈥�",
        "url":"training/location/location-testing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Recognizing the User&#39;s Current Activity",
        "titleFriendly":"",
        "summary":"Activity recognition tries to detect the user&#39;s current physical activity, such as walking, driving, or standing still. Requests for updates go through an activity recognition client, which, while different from the location client used by location鈥�",
        "url":"training/location/activity-recognition.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Retrieving the Current Location",
        "titleFriendly":"",
        "summary":"Location Services automatically maintains the user&#39;s current location, so all your app has to do is retrieve it as needed. The location&#39;s accuracy is based on the location permissions you&#39;ve requested and location sensors that are currently鈥�",
        "url":"training/location/retrieve-current.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Making Your App Location-Aware",
        "titleFriendly":"",
        "summary":"One of the unique features of mobile applications is location awareness. Mobile users bring their devices with them everywhere, and adding location awareness to your app offers users a more contextual experience. The new Location Services API available鈥�",
        "url":"training/location/index.html",
        "group":"",
        "keywords": ["location","geofence","geofencing","activity recognition","activity detection","gps"],
        "tags": ["location","geofence","geofencing","activityrecognition","activitydetection","gps"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Receiving Location Updates",
        "titleFriendly":"",
        "summary":"If your app does navigation or tracking, you probably want to get the user&#39;s location at regular intervals. While you can do this with LocationClient.getLastLocation() , a more direct approach is to request periodic updates from Location Services.鈥�",
        "url":"training/location/receive-location-updates.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Displaying a Location Address",
        "titleFriendly":"",
        "summary":"The lessons Retrieving the Current Location and Receiving Location Updates describe how to get the user&#39;s current location in the form of a Location object that contains latitude and longitude coordinates. Although latitude and longitude are useful鈥�",
        "url":"training/location/display-address.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Building Apps with Multimedia",
        "titleFriendly":"",
        "summary":"These classes teach you how to create rich multimedia apps that behave the way users expect.鈥�",
        "url":"training/building-multimedia.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating and Running a Test Case",
        "titleFriendly":"",
        "summary":"In order to verify that there are no regressions in the layout design and functional behavior in your application, it&#39;s important to create a test for each Activity in your application. For each test, you need to create the individual parts of a test鈥�",
        "url":"training/activity-testing/activity-basic-testing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"images/training/activity-testing_lesson2_MyFirstTestActivityTest_result.png",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating Functional Tests",
        "titleFriendly":"",
        "summary":"Functional testing involves verifying that individual application components work together as expected by the user. For example, you can create a functional test to verify that an Activity correctly launches a target Activity when the user performs a 鈥�",
        "url":"training/activity-testing/activity-functional-testing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Creating Unit Tests",
        "titleFriendly":"",
        "summary":"An Activity unit test is an excellent way to quickly verify the state of an Activity and its interactions with other components in isolation (that is, disconnected from the rest of the system). A unit test generally tests the smallest possible unit of鈥�",
        "url":"training/activity-testing/activity-unit-testing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Setting Up Your Test Environment",
        "titleFriendly":"",
        "summary":"Before you start writing and running your tests, you should set up your test development environment. This lesson teaches you how to set up the Eclipse IDE to build and run tests, and how to build and run tests with the Gradle framework by using the command鈥�",
        "url":"training/activity-testing/preparing-activity-testing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Testing Your Android Activity",
        "titleFriendly":"",
        "summary":"You should be writing and running tests as part of your Android application development cycle. Well-written tests can help you to catch bugs early in development and give you confidence in your code. A test case defines a set of objects and methods to鈥�",
        "url":"training/activity-testing/index.html",
        "group":"",
        "keywords": ["testing"],
        "tags": ["testing"],
        "image":"",
        "lang":"en",
        "type":"training"
      }, 
      {
        "title":"Testing UI Components",
        "titleFriendly":"",
        "summary":"Typically, your Activity includes user interface components (such as buttons, editable text fields, checkboxes, and pickers) to allow users to interact with your Android application. This lesson shows how you can test an Activity with a simple push-button鈥�",
        "url":"training/activity-testing/activity-ui-testing.html",
        "group":"",
        "keywords": [],
        "tags": [],
        "image":"",
        "lang":"en",
        "type":"training"
      }
];

var _BY_TAG = {
    "unsupported":[8], 
    "leanback":[9], 
    "recyclerview":[9], 
    "launcher":[9], 
    "emote":[19], 
    "e-mote":[19], 
    "adt":[19], 
    "controller":[20], 
    "design":[23,24,28], 
    "notifications":[28]
};

var ABOUT_BY_TAG = {
    "ecosystem":[10], 
    "versions":[10], 
    "whatsnew":[10]
};

var DESIGN_BY_TAG = {
    "dialog":[2,18,39], 
    "toast":[2,18,39], 
    "notification":[2,39], 
    "input":[4,21,24,46,50], 
    "button":[4,17,21], 
    "icons":[5], 
    "googleplay":[5], 
    "listing":[5], 
    "branding":[5,8], 
    "multiplescreens":[6], 
    "layout":[6,13,14,40,48], 
    "tablets":[6], 
    "textview":[7], 
    "font":[7], 
    "tabs":[12,49], 
    "actionbar":[12,47], 
    "navigation":[12,40,42,46,47,48,49,52], 
    "viewpager":[12,49], 
    "gridview":[13], 
    "listview":[14,23], 
    "seekbar":[15], 
    "progressbar":[15,19], 
    "datepicker":[16], 
    "timepicker":[16], 
    "switch":[17], 
    "checkbox":[17], 
    "radiobutton":[17], 
    "spinner":[22], 
    "dropdown":[22], 
    "scrollview":[23], 
    "text":[24], 
    "edittext":[24], 
    "beautifulapps":[37], 
    "design":[37], 
    "ux":[37], 
    "patterns":[37], 
    "holo":[37], 
    "appquality":[37], 
    "landing":[37], 
    "tablet":[40,48], 
    "drawerlayout":[41], 
    "slidingpanelayout":[41], 
    "support":[43], 
    "settings":[44], 
    "preferences":[44,45], 
    "accessibility":[46], 
    "gesture":[50], 
    "kitkat":[51], 
    "android4.4":[51], 
    "actionmode":[52], 
    "appwidget":[53], 
    "home":[53], 
    "fullscreen":[55], 
    "immersive":[55], 
    "leanback":[55], 
    "buttons":[58]
};

var DISTRIBUTE_BY_TAG = {
    "googleplay":[0,1,2,5,8,19,29,32], 
    "developerstory":[0,1,2], 
    "games":[0,43], 
    "global":[0,1,33,34], 
    "localizing":[4,12], 
    "publishing":[4,12,28], 
    "disttools":[4,7,8,12], 
    "badge":[5], 
    "promoting":[6,7,8], 
    "brand":[9], 
    "bugdroid":[9], 
    "assets":[9], 
    "monetizing":[13,14,15,16,17], 
    "paid":[13], 
    "in-app":[15,17], 
    "iap":[15,17], 
    "landing":[25], 
    "quality":[25,30], 
    "visibility":[26], 
    "growth":[26,32,33,34,36,37], 
    "distributing":[26], 
    "gpfe":[29], 
    "education":[30], 
    "guidelines":[30], 
    "listing":[32], 
    "users":[33,34,35,36,37], 
    "updates":[39], 
    "analytics":[40], 
    "userbehavior":[40], 
    "engagement":[42], 
    "":[44,45], 
    "gcm":[46], 
    "appindexing":[48], 
    "google+signin":[48], 
    "google+":[49]
};

var GOOGLE_BY_TAG = {
    "gcs":[1], 
    "licensing":[5], 
    "drm":[5], 
    "monetization":[14,28], 
    "inappbilling":[14,17,17,20], 
    "subscriptions":[14,20], 
    "in-appbilling":[17], 
    "googleplay":[17], 
    "monetizing":[20], 
    "apksize":[21], 
    "apkmax":[21], 
    "largeassets":[21], 
    "oauth2.0":[22,23], 
    "googleauthutil":[22,23], 
    "chromecast":[24], 
    "miracast":[24], 
    "storage":[25], 
    "files":[25], 
    "cloud":[25,42,43,49], 
    "games":[26], 
    "ads":[28,34], 
    "mapview":[29], 
    "location":[29,35], 
    "wallet":[30], 
    "payments":[30], 
    "instantbuy":[30], 
    "authentication":[31], 
    "signin":[31], 
    "social":[31], 
    "accountmanager":[32], 
    "oauth2":[32], 
    "gcm":[48]
};

var GUIDE_BY_TAG = {
    "video":[10,122,124], 
    "audio":[10,124], 
    "mpeg":[10], 
    "mp4":[10], 
    "m4a":[10], 
    "mp3":[10], 
    "3gp":[10], 
    "3gpp":[10], 
    "flac":[10], 
    "wave":[10], 
    "wav":[10], 
    "apilevels":[17], 
    "sdkversion":[17], 
    "minsdkversion":[17], 
    "targetsdkversion":[17], 
    "maxsdkversion":[17], 
    "filtering":[21], 
    "features":[21], 
    "googleplayfilters":[21], 
    "permissions":[21], 
    "activity":[42,159], 
    "lifecycle":[42,152], 
    "localizing":[45], 
    "localization":[45], 
    "resources":[45], 
    "formats":[45], 
    "l10n":[45], 
    "valueanimator":[55], 
    "objectanimator":[55], 
    "layouttransition":[55], 
    "viewpropertyanimator":[55], 
    "games":[62], 
    "hostcardemulation":[64], 
    "hce":[64], 
    "hostapduservice":[64], 
    "offhostapduservice":[64], 
    "tapandpay":[64], 
    "sipmanager":[67], 
    "sipprofile":[67], 
    "sipaudiocall":[67], 
    "telephony":[67], 
    "wireless":[68,69,74], 
    "bluetoothadapter":[68,69], 
    "bluetoothdevice":[68,69], 
    "appwidgethost":[75], 
    "homescreen":[75], 
    "launcher":[75], 
    "home":[76], 
    "appwidgetprovider":[76], 
    "sdcard":[78,79], 
    "external":[78], 
    "database":[79], 
    "sharedpreferences":[79], 
    "view":[81,107], 
    "viewgroup":[81], 
    "button":[82], 
    "imagebutton":[82], 
    "edittext":[83], 
    "autocompletetextview":[83], 
    "radiobutton":[85], 
    "radiogroup":[85], 
    "datepicker":[86], 
    "timepicker":[86], 
    "switch":[87], 
    "togglebutton":[87], 
    "adapterview":[88], 
    "spinneradapter":[88], 
    "clipdata":[91,118], 
    "dragevent":[91], 
    "onlongclicklistener":[91], 
    "preference":[93], 
    "preferenceactivity":[93], 
    "preferencefragment":[93], 
    "actionbar":[94], 
    "menu":[94], 
    "tabs":[94], 
    "linearlayout":[96], 
    "gridview":[97], 
    "relativelayout":[99], 
    "listview":[100], 
    "alertdialog":[103], 
    "dialogfragment":[103], 
    "accessibility":[111], 
    "input":[117,118], 
    "spellcheckerservice":[117], 
    "clipboardmanager":[118], 
    "ime":[119], 
    "keyboard":[119], 
    "inputmethodservice":[119], 
    "mediaplayer":[121], 
    "soundpool":[121], 
    "audiomanager":[121], 
    "photo":[122], 
    "mediarecorder":[123], 
    "mediarouter":[125], 
    "cast":[125], 
    "chromecast":[125], 
    "wirelessdisplay":[125], 
    "miracast":[125], 
    "mediarouteprovider":[127], 
    "mediacontrolintent":[127], 
    "devicepolicymanager":[130], 
    "policy":[130], 
    "security":[130], 
    "sensorevent":[142,143], 
    "accelerometer":[142], 
    "gyroscope":[142], 
    "gravity":[142], 
    "rotation":[142], 
    "stepcounter":[142], 
    "location":[144], 
    "sensors":[144], 
    "searchview":[145], 
    "searchrecentsuggestionsprovider":[146,149], 
    "searchrecentsuggestions":[149], 
    "intentfilter":[154,157], 
    "multiplescreens":[171]
};

var SAMPLES_BY_TAG = {
    "actionbarcompat-listpopupmenu":[0], 
    "textswitcher":[1], 
    "basicmediarouter":[2], 
    "adaptertransition":[3], 
    "swiperefreshlayoutbasic":[4], 
    "batchstepsensor":[5], 
    "immersivemode":[6], 
    "donebar":[7], 
    "basicrenderscript":[8], 
    "fragmenttransition":[9], 
    "actionbarcompat-basic":[10], 
    "swiperefreshlistfragment":[11], 
    "borderlessbuttons":[12], 
    "basicimmersivemode":[13], 
    "swiperefreshmultipleviews":[14], 
    "customtransition":[15], 
    "slidingtabscolors":[16], 
    "horizontalpaging":[17], 
    "basicgesturedetect":[18], 
    "mediarouter":[19], 
    "bluetoothlegatt":[20], 
    "actionbarcompat-shareactionprovider":[21], 
    "cardreader":[22], 
    "apprestrictions":[23], 
    "activityinstrumentation":[24], 
    "basicsyncadapter":[25], 
    "basicaccessibility":[26], 
    "slidingtabsbasic":[27], 
    "networkconnect":[28], 
    "basictransition":[29], 
    "basicmultitouch":[30], 
    "storageclient":[31], 
    "mediarecorder":[32], 
    "basicandroidkeystore":[33], 
    "textlinkify":[34], 
    "basicnotifications":[35], 
    "displayingbitmaps":[36], 
    "customchoicelist":[37], 
    "basicmediadecoder":[38], 
    "renderscriptintrinsic":[39], 
    "basiccontactables":[40], 
    "repeatingalarm":[41], 
    "storageaccessframework":[42], 
    "storage":[42], 
    "documents":[42], 
    "customnotifications":[43], 
    "basicnetworking":[44], 
    "actionbarcompat-styled":[45], 
    "cardemulation":[46], 
    "advancedimmersivemode":[47], 
    "samples":[57], 
    "examples":[57], 
    "code":[57]
};

var TOOLS_BY_TAG = {
    "adt":[22], 
    "adb":[30], 
    "ninepatch":[51], 
    "memory":[62], 
    "outofmemoryerror":[62], 
    "systrace":[70], 
    "speed":[70], 
    "adk":[71,72,73], 
    "studio":[97], 
    "download":[120]
};

var TRAINING_BY_TAG = {
    "multiplescreens":[46,216], 
    "tablet":[48], 
    "tv":[48], 
    "fragments":[48,84], 
    "support":[48,178,209], 
    "fileprovider":[53], 
    "share":[53,134,225], 
    "contentprovider":[53], 
    "privacy":[57,267], 
    "oauth":[57], 
    "accounts":[57], 
    "localizing":[58], 
    "localization":[58,61], 
    "resources":[58,61], 
    "formats":[58], 
    "l10n":[58], 
    "network":[65,142,188,241,254], 
    "wireless":[65,142,241], 
    "intents":[68,225], 
    "activity":[68], 
    "supportlibrary":[82,84], 
    "actionbar":[86], 
    "datastorage":[92], 
    "files":[92], 
    "sql":[92], 
    "database":[92,298], 
    "preferences":[92], 
    "notifications":[98], 
    "include":[104], 
    "merge":[104], 
    "viewstub":[104], 
    "listview":[104], 
    "threadpool":[110], 
    "runnable":[110], 
    "cloud":[111,145], 
    "gamecontroller":[115], 
    "":[121,157,183], 
    "input":[131,248,294], 
    "screens":[131], 
    "nfcadapter":[134], 
    "androidbeam":[134], 
    "battery":[142], 
    "cursorloader":[161], 
    "animator":[168], 
    "views":[168], 
    "layout":[168,231], 
    "userinterface":[168], 
    "print":[173], 
    "navigation":[173,236,248,294], 
    "gesturedetector":[173,248], 
    "scroller":[173,248], 
    "edittext":[195], 
    "accessibility":[195], 
    "billing":[200], 
    "widgets":[209,231], 
    "appindexing":[214], 
    "upnavigation":[232], 
    "navutils":[232,235], 
    "taskstackbuilder":[232,235], 
    "viewpager":[233], 
    "horizontal":[233], 
    "paging":[233], 
    "swipeview":[233], 
    "tabs":[233], 
    "backnavigation":[235], 
    "drawerlayout":[236], 
    "wifi":[241], 
    "camera":[252], 
    "video":[252], 
    "picture":[252], 
    "threads":[253], 
    "asynctask":[253], 
    "ndk":[255,258], 
    "native":[255,258], 
    "ram":[257], 
    "lowmemory":[257], 
    "outofmemoryerror":[257], 
    "ontrimmemory":[257], 
    "audio":[266], 
    "media":[266], 
    "policy":[267], 
    "bitmaps":[274], 
    "images":[274], 
    "graphics":[274], 
    "searchview":[298], 
    "intentservice":[302], 
    "location":[307], 
    "geofence":[307], 
    "geofencing":[307], 
    "activityrecognition":[307], 
    "activitydetection":[307], 
    "gps":[307], 
    "testing":[315]
};

